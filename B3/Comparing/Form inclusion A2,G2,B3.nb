(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    775966,      16459]
NotebookOptionsPosition[    758870,      16188]
NotebookOutlinePosition[    759268,      16204]
CellTagsIndexPosition[    759225,      16201]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Comparison of A2/G2/B3 modular forms.", "Title",
 CellChangeTimes->{{3.7977714101476755`*^9, 3.797771428467548*^9}, {
  3.7977843525032353`*^9, 
  3.797784353493125*^9}},ExpressionUUID->"dece58bd-77f1-4e0f-ac46-\
f5d302356980"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"<<", "LieART`"}]], "Input",
 CellChangeTimes->{{3.7937218167796097`*^9, 3.7937218176770124`*^9}},
 CellLabel->
  "In[142]:=",ExpressionUUID->"690987a8-f673-4b4a-9af7-e7564ec6470d"],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox["\<\"LieART 2.0.0\"\>", TraditionalForm]], "Print",
 CellChangeTimes->{
  3.794661377391181*^9, 3.7947003435717525`*^9, 3.794926092364596*^9, 
   3.795266315886656*^9, 3.7952694233907824`*^9, 3.7952761402460203`*^9, 
   3.7953525735689464`*^9, {3.7955254973352365`*^9, 3.7955255185094004`*^9}, 
   3.795537573976601*^9, 3.7957824450284243`*^9, 3.7958114511415925`*^9, 
   3.795862226387147*^9, 3.795863982380138*^9, 3.795893913301922*^9, 
   3.7959098864899626`*^9, 3.795971702545986*^9, 3.7959790634278526`*^9, 
   3.7959830525772004`*^9, 3.796040076791007*^9, 3.796068212113555*^9, 
   3.7961169146589837`*^9, 3.7961173201647034`*^9, 3.7961480129032245`*^9, 
   3.796148410817163*^9, 3.7961491303450437`*^9, 3.796166055109167*^9, 
   3.79623326838293*^9, 3.796235561533047*^9, 3.7963019859116926`*^9, 
   3.796305824325959*^9, 3.796316424056261*^9, 3.796317697890915*^9, 
   3.7963191302319746`*^9, 3.796395560799096*^9, 3.7965862100960064`*^9, 
   3.7977714670957675`*^9, 3.797784961410657*^9, 3.797786774614527*^9, 
   3.7977871371416073`*^9, 3.7978821049778547`*^9, 3.797924794796135*^9, 
   3.79828595430262*^9, 3.798324012892273*^9, 3.7983625771724663`*^9, 
   3.798369030011738*^9, 3.7983990132954397`*^9, 3.79848783323764*^9, 
   3.798569949224533*^9, 3.7988011891051087`*^9, 3.7989808195718613`*^9, 
   3.798980864924511*^9},
 CellLabel->
  "During evaluation of \
In[142]:=",ExpressionUUID->"854f3071-485c-468b-be14-f15c8482ee69"],

Cell[BoxData[
 FormBox["\<\"last revised 29 November 2019\"\>", TraditionalForm]], "Print",
 CellChangeTimes->{
  3.794661377391181*^9, 3.7947003435717525`*^9, 3.794926092364596*^9, 
   3.795266315886656*^9, 3.7952694233907824`*^9, 3.7952761402460203`*^9, 
   3.7953525735689464`*^9, {3.7955254973352365`*^9, 3.7955255185094004`*^9}, 
   3.795537573976601*^9, 3.7957824450284243`*^9, 3.7958114511415925`*^9, 
   3.795862226387147*^9, 3.795863982380138*^9, 3.795893913301922*^9, 
   3.7959098864899626`*^9, 3.795971702545986*^9, 3.7959790634278526`*^9, 
   3.7959830525772004`*^9, 3.796040076791007*^9, 3.796068212113555*^9, 
   3.7961169146589837`*^9, 3.7961173201647034`*^9, 3.7961480129032245`*^9, 
   3.796148410817163*^9, 3.7961491303450437`*^9, 3.796166055109167*^9, 
   3.79623326838293*^9, 3.796235561533047*^9, 3.7963019859116926`*^9, 
   3.796305824325959*^9, 3.796316424056261*^9, 3.796317697890915*^9, 
   3.7963191302319746`*^9, 3.796395560799096*^9, 3.7965862100960064`*^9, 
   3.7977714670957675`*^9, 3.797784961410657*^9, 3.797786774614527*^9, 
   3.7977871371416073`*^9, 3.7978821049778547`*^9, 3.797924794796135*^9, 
   3.79828595430262*^9, 3.798324012892273*^9, 3.7983625771724663`*^9, 
   3.798369030011738*^9, 3.7983990132954397`*^9, 3.79848783323764*^9, 
   3.798569949224533*^9, 3.7988011891051087`*^9, 3.7989808195718613`*^9, 
   3.798980864963409*^9},
 CellLabel->
  "During evaluation of \
In[142]:=",ExpressionUUID->"fa9b21e4-fb88-4e47-94d6-1a37e7ad0c98"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"$Assumptions", "=", 
   RowBox[{"$Assumptions", "&&", 
    RowBox[{"q", ">", "0"}], "&&", 
    RowBox[{
     RowBox[{"Q", "[", "1", "]"}], ">", "0"}], "&&", 
    RowBox[{
     RowBox[{"Q", "[", "2", "]"}], ">", "0"}], "&&", 
    RowBox[{
     RowBox[{"Q", "[", "0", "]"}], ">", "0"}], "&&", 
    RowBox[{
     RowBox[{"Q", "[", "3", "]"}], ">", "0"}], "&&", 
    RowBox[{
     RowBox[{"X", "[", "1", "]"}], ">", "0"}], "&&", 
    RowBox[{
     RowBox[{"X", "[", "2", "]"}], ">", "0"}], "&&", 
    RowBox[{
     RowBox[{"Y", "[", "1", "]"}], ">", "0"}], "&&", 
    RowBox[{
     RowBox[{"Y", "[", 
      RowBox[{"-", "1"}], "]"}], ">", "0"}], "&&", 
    RowBox[{"X", ">", "0"}], "&&", 
    RowBox[{
     RowBox[{"P", "[", "1", "]"}], ">", "0"}], "&&", 
    RowBox[{
     RowBox[{"P", "[", "2", "]"}], ">", "0"}], "&&", 
    RowBox[{
     RowBox[{"P", "[", "3", "]"}], ">", "0"}], "&&", 
    RowBox[{
     RowBox[{"Z", "[", "1", "]"}], ">", "0"}], "&&", 
    RowBox[{
     RowBox[{"Z", "[", "2", "]"}], ">", "0"}], "&&", 
    RowBox[{"Y", ">", "0"}], "&&", 
    RowBox[{
     RowBox[{"W", "[", "1", "]"}], ">", "0"}], "&&", " ", 
    RowBox[{
     RowBox[{"p", "[", "1", "]"}], ">", "0"}], " ", "&&", " ", 
    RowBox[{
     RowBox[{"p", "[", "2", "]"}], ">", "0"}], "&&", 
    RowBox[{"z", ">", "0"}], "&&", 
    RowBox[{"z", "<", "0.1"}], "&&", 
    RowBox[{"V", ">", "0"}], "&&", 
    RowBox[{"Z", ">", "0"}], "&&", 
    RowBox[{"v", ">", "0"}], "&&", 
    RowBox[{"\[Epsilon]", ">", "0"}], "&&", 
    RowBox[{
     RowBox[{"q", "[", "1", "]"}], ">", "0"}], "&&", 
    RowBox[{
     RowBox[{"q", "[", "2", "]"}], ">", "0"}], "&&", 
    RowBox[{
     RowBox[{"q", "[", "3", "]"}], ">", "0"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7897275194456053`*^9, 3.7897275390701227`*^9}, {
  3.7897285008823338`*^9, 3.7897285024741163`*^9}, {3.7897428417309294`*^9, 
  3.789742853527568*^9}, {3.7897428900749764`*^9, 3.7897428971593795`*^9}, {
  3.7898837547921576`*^9, 3.7898837562295885`*^9}, {3.7898842806883335`*^9, 
  3.7898843043888097`*^9}, {3.7903466661623917`*^9, 3.790346693231751*^9}, {
  3.7910963722616897`*^9, 3.7910963781459217`*^9}, {3.7910980582655687`*^9, 
  3.79109806431236*^9}, {3.791199050378747*^9, 3.791199055561173*^9}, {
  3.791619153574046*^9, 3.79161917893149*^9}, {3.7916238085259037`*^9, 
  3.791623813658927*^9}, {3.791631589299293*^9, 3.791631602512944*^9}, {
  3.7931136158298097`*^9, 3.793113666734457*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"c0e92f47-4df0-46ea-85d5-57c996ff382b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"M", "=", "3"}], ";"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7898111033647394`*^9, 3.789811109282462*^9}, {
   3.7898117684241533`*^9, 3.7898117698902273`*^9}, {3.789813702292581*^9, 
   3.7898137032061377`*^9}, {3.7899952889489193`*^9, 3.789995289313649*^9}, {
   3.7899956047863903`*^9, 3.7899956094706297`*^9}, {3.790414881128797*^9, 
   3.790414889557857*^9}, {3.7904160625437307`*^9, 3.790416067355098*^9}, {
   3.790495804747012*^9, 3.790495811786344*^9}, {3.790937510102231*^9, 
   3.7909375374097767`*^9}, {3.791100106539691*^9, 3.791100107248803*^9}, {
   3.791100563740942*^9, 3.791100563955406*^9}, 3.791197565492606*^9, {
   3.791197666455277*^9, 3.79119766677243*^9}, {3.7912036191400433`*^9, 
   3.791203619391642*^9}, {3.791207410578107*^9, 3.7912074106381197`*^9}, {
   3.791208327850026*^9, 3.791208327926126*^9}, {3.791263737100039*^9, 
   3.791263737209072*^9}, {3.7912651999030657`*^9, 3.791265200027285*^9}, {
   3.791285809922566*^9, 3.7912858101742907`*^9}, {3.7912908143908052`*^9, 
   3.791290815025276*^9}, {3.791297198470714*^9, 3.791297198855878*^9}, {
   3.7914647590612907`*^9, 3.7914647599602704`*^9}, {3.791518848975845*^9, 
   3.791518849007085*^9}, {3.7915227826326694`*^9, 3.7915227830856895`*^9}, {
   3.7915308859827423`*^9, 3.791530886299323*^9}, {3.791561502567442*^9, 
   3.7915615027557917`*^9}, 3.79161907131705*^9, {3.7945906712415934`*^9, 
   3.7945906733500576`*^9}, {3.7960663252755156`*^9, 3.796066325407444*^9}, {
   3.7961650504441175`*^9, 3.7961650505534678`*^9}, {3.7983227741385145`*^9, 
   3.798322774453633*^9}, {3.7983232545636454`*^9, 3.7983232551086674`*^9}, {
   3.7983238943395815`*^9, 3.798323894687963*^9}, {3.798362549649315*^9, 
   3.7983625501469994`*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"8785bf05-ea0b-41d9-82f1-18218d5ed290"],

Cell[CellGroupData[{

Cell["Roots handling", "Chapter",
 CellChangeTimes->{{3.79128382867198*^9, 
  3.791283836496118*^9}},ExpressionUUID->"6be179fb-f389-4c79-be4e-\
e7812e8abda9"],

Cell["\<\
This section is mainly to rewrite the roots from LieART to a vector form, as \
by default they are written as text. All the F--- represent the exact same \
thing as in LieART but in vector form\
\>", "Text",
 CellChangeTimes->{{3.7912839419830523`*^9, 3.7912839904677553`*^9}, {
  3.791284024862646*^9, 
  3.791284058878179*^9}},ExpressionUUID->"a1a81606-14e7-475b-851f-\
6b04ec49099f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dual", "[", "algebra_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"AlgebraClass", "[", "algebra", "]"}], " ", "===", "B"}], "||", 
        RowBox[{
         RowBox[{"AlgebraClass", "[", "algebra", "]"}], "===", " ", "C"}]}], 
       ")"}]}], ",", " ", "algebra"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7978941243376703`*^9, 3.797894128317215*^9}, 
   3.7983062874328775`*^9, {3.7983064097233677`*^9, 3.7983064220543385`*^9}, {
   3.798306496753147*^9, 3.7983065017732587`*^9}, {3.7983065492933416`*^9, 
   3.798306563753442*^9}},
 CellLabel->
  "In[145]:=",ExpressionUUID->"22da433e-c321-4bde-9503-d18a97f435ed"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dual", "[", "B3", "]"}], "=", "C3"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dual", "[", "C3", "]"}], "=", "B3"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7935754612610903`*^9, 3.7935755104094534`*^9}, {
  3.7935757243370695`*^9, 3.7935757514511995`*^9}, {3.793631528483957*^9, 
  3.793631538069153*^9}, {3.7943318888470063`*^9, 3.7943318935379224`*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"d0d09854-a86c-4a2c-98fe-916768282020"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FPositiveCoroots", "[", "a_", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Rank", "[", "a", "]"}]}], "}"}]}], "]"}], ")"}], "&"}], "/@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"PositiveRoots", "[", 
       RowBox[{"dual", "[", "a", "]"}], "]"}], "//", "AlphaBasis"}], ")"}]}], 
   ")"}]}]], "Input",
 CellChangeTimes->{{3.793568209653067*^9, 3.7935682664560747`*^9}, {
   3.793575521642528*^9, 3.7935755232659683`*^9}, {3.793575740743168*^9, 
   3.7935757452212243`*^9}, {3.79357580805387*^9, 3.793575810757913*^9}, {
   3.7935760382947335`*^9, 3.793576039800844*^9}, 3.7936315643982177`*^9, 
   3.7936316435196557`*^9},
 CellLabel->
  "In[148]:=",ExpressionUUID->"b3bd3237-6bfb-4304-b92b-fdbf5829fed4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"OrthogonalDimension", "[", "a_", "]"}], ":=", 
  RowBox[{"Switch", "[", 
   RowBox[{
    RowBox[{"AlgebraClass", "[", "a", "]"}], ",", "G2", ",", "3", ",", "A", 
    ",", 
    RowBox[{
     RowBox[{"Rank", "[", "a", "]"}], "+", "1"}], ",", "E6", ",", "8", ",", 
    "E7", ",", "8", ",", "_", ",", 
    RowBox[{"Rank", "[", "a", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.791284667177259*^9, 3.7912846734657087`*^9}, {
  3.791284707912477*^9, 3.7912847279288187`*^9}, {3.7935757569376864`*^9, 
  3.793575757455023*^9}},
 CellLabel->
  "In[149]:=",ExpressionUUID->"fca85ee0-2de0-483c-aee9-470f1bbd2b2e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"killing", "[", 
   RowBox[{"algebra_", ",", "a__", ",", "b__"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"AlgebraClass", "[", "algebra", "]"}], " ", "===", "B"}], "||", 
       RowBox[{
        RowBox[{"AlgebraClass", "[", "algebra", "]"}], "===", " ", "C"}]}], 
      ")"}]}], ",", " ", 
    RowBox[{"a", ".", "b"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kinv", "[", 
   RowBox[{"algebra_", ",", "a__", ",", "b__"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"AlgebraClass", "[", "algebra", "]"}], " ", "===", "B"}], "||", 
       RowBox[{
        RowBox[{"AlgebraClass", "[", "algebra", "]"}], "===", " ", "C"}]}], 
      ")"}]}], ",", " ", 
    RowBox[{"a", ".", "b"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7977864033264065`*^9, 3.7977864188056235`*^9}, {
  3.79830629411325*^9, 3.7983063042637997`*^9}, {3.7983063384538217`*^9, 
  3.7983063982133803`*^9}, {3.798306575812607*^9, 3.7983065796626387`*^9}},
 CellLabel->
  "In[150]:=",ExpressionUUID->"4e0c0e6d-1811-45a6-a049-3bf18c79063e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"killing", "[", 
   RowBox[{"B3", ",", "a__", ",", "b__"}], "]"}], ":=", 
  RowBox[{"2", 
   RowBox[{"a", ".", "b"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kinv", "[", 
   RowBox[{"B3", ",", "a__", ",", "b__"}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", "2"], 
   RowBox[{"a", ".", "b"}]}]}]}], "Input",
 CellChangeTimes->{{3.7935677039126654`*^9, 3.793567705349837*^9}, {
  3.793631660557767*^9, 3.7936316787842107`*^9}, {3.7936318837248163`*^9, 
  3.7936319097774734`*^9}, {3.793631946086193*^9, 3.7936319592233562`*^9}, {
  3.793633706446166*^9, 3.7936337117706757`*^9}, {3.794682698647763*^9, 
  3.794682707047093*^9}, {3.794682738636733*^9, 3.7946827453778954`*^9}, {
  3.794683265901931*^9, 3.7946832715340753`*^9}},
 CellLabel->
  "In[152]:=",ExpressionUUID->"2c64bf87-21c0-4882-b608-4843b0aed486"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FOrthogonalSimpleCoroots", "[", "a_", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"OrthogonalDimension", "[", "a", "]"}]}], "}"}]}], "]"}], 
      ")"}], "&"}], "/@", 
    RowBox[{"(", 
     RowBox[{"OrthogonalSimpleRoots", "[", 
      RowBox[{"dual", "[", "a", "]"}], "]"}], ")"}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.7935755424265957`*^9, 3.793575545160969*^9}, {
  3.793575765379225*^9, 3.7935757687655697`*^9}, {3.7936316883952665`*^9, 
  3.793631689896488*^9}},
 CellLabel->
  "In[154]:=",ExpressionUUID->"ddc24dc4-be46-4383-a80d-92c9459340cb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FOrthogonalPositiveCoroots", "[", "a_", "]"}], ":=", 
  RowBox[{
   RowBox[{"FPositiveCoroots", "[", "a", "]"}], ".", 
   RowBox[{"FOrthogonalSimpleCoroots", "[", "a", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.793576063886304*^9, 3.7935760968601494`*^9}, {
  3.7935761284055185`*^9, 3.7935761612122493`*^9}},
 CellLabel->
  "In[155]:=",ExpressionUUID->"726706fd-95eb-41ee-843d-41db00e40704"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FOrthogonalFundamentalCoweights", "[", "a_", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"OrthogonalDimension", "[", "a", "]"}]}], "}"}]}], "]"}], 
      ")"}], "&"}], "/@", 
    RowBox[{"(", 
     RowBox[{"OrthogonalFundamentalWeights", "[", 
      RowBox[{"dual", "[", "a", "]"}], "]"}], ")"}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.79357556163241*^9, 3.793575563074382*^9}, {
  3.793575775609434*^9, 3.793575780003993*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"51e33d29-1ae9-410c-b493-d5d79ae38618"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FOrthogonalSimpleRoots", "[", "a_", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["2", 
      RowBox[{"killing", "[", 
       RowBox[{"a", ",", "##", ",", "##"}], "]"}]], "##"}], "&"}], "/@", 
   RowBox[{"FOrthogonalSimpleCoroots", "[", "a", "]"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
      "This", " ", "gives", " ", "the", " ", "roots", " ", "in", " ", "the", 
       " ", "orthogonal", " ", "basis", " ", "of", " ", "the", " ", "cartan", 
       " ", "algebra"}], "..."}], " ", "with", " ", "the", " ", "2", " ", 
     "times", " ", "normalization"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.794683275110262*^9, 3.7946832793826675`*^9}, {
  3.7946835124780393`*^9, 3.7946835950388966`*^9}},
 CellLabel->
  "In[157]:=",ExpressionUUID->"b30f6318-bcde-4142-b9c5-5c58f4dcff8e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FPositiveRoots", "[", "a_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["2", 
      RowBox[{"killing", "[", 
       RowBox[{"a", ",", 
        RowBox[{"##", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"##", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}]], 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "/", 
          RowBox[{"killing", "[", 
           RowBox[{"a", ",", 
            RowBox[{
             RowBox[{"FOrthogonalSimpleRoots", "[", "a", "]"}], "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"FOrthogonalSimpleRoots", "[", "a", "]"}], "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ")"}], 
        RowBox[{
         RowBox[{"##", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Rank", "[", "a", "]"}]}], "}"}]}], "]"}]}], "&"}], "/@", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"FOrthogonalPositiveCoroots", "[", "a", "]"}], "[", 
        RowBox[{"[", "i", "]"}], "]"}], " ", ",", 
       RowBox[{
        RowBox[{"FPositiveCoroots", "[", "a", "]"}], "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"FPositiveCoroots", "[", "a", "]"}], "]"}]}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.791284755262849*^9, 3.79128478093574*^9}, 
   3.791284879697032*^9, {3.7931081782862206`*^9, 3.7931081804393587`*^9}, {
   3.7931084339808807`*^9, 3.793108452135189*^9}, {3.7931085111995773`*^9, 
   3.7931085298634186`*^9}, {3.793108600013934*^9, 3.7931086021405525`*^9}, {
   3.7935541683114476`*^9, 3.793554168579521*^9}, {3.793575288713991*^9, 
   3.793575302002455*^9}, {3.7935755684906473`*^9, 3.7935755817415447`*^9}, {
   3.7935757892455325`*^9, 3.793575792119824*^9}, {3.793578531852871*^9, 
   3.7935786137931356`*^9}, {3.7935786594728785`*^9, 
   3.7935786636832695`*^9}, {3.793578932623535*^9, 3.7935790765731783`*^9}, {
   3.7935791107935996`*^9, 3.7935791378136177`*^9}, {3.7935792169233613`*^9, 
   3.7935792249635563`*^9}, {3.7946915339070683`*^9, 3.794691536745185*^9}, {
   3.794693019905847*^9, 3.7946930268932295`*^9}},
 CellLabel->
  "In[158]:=",ExpressionUUID->"8d6a60b6-ea34-404f-a98e-9465ee30a2e1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LongRoots", "[", "a_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"max", ",", "roots", ",", "norms"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"norms", "=", 
      RowBox[{
       RowBox[{
        FractionBox["4", 
         RowBox[{"killing", "[", 
          RowBox[{"a", ",", "##", ",", "##"}], "]"}]], "&"}], "/@", 
       RowBox[{"FOrthogonalPositiveCoroots", "[", "a", "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"max", "=", 
      RowBox[{"Max", "[", "norms", "]"}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "This", " ", "is", " ", "the", " ", "minimal", " ", "root", " ", 
        "length"}], ",", " ", 
       RowBox[{
       "which", " ", "depends", " ", "on", " ", "the", " ", "conventions", 
        " ", "in", " ", "the", " ", "LieART", " ", "package"}], ",", " ", 
       RowBox[{
       "however", " ", "the", " ", "exponents", " ", "in", " ", "the", " ", 
        "denominator", " ", "do", " ", "not"}], ",", " ", 
       RowBox[{"so", " ", "this", " ", 
        RowBox[{"doesn", "'"}], "t", " ", 
        RowBox[{"matter", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"FPositiveRoots", "[", "a", "]"}], "[", 
        RowBox[{"[", "#", "]"}], "]"}], "&"}], "/@", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Position", "[", 
        RowBox[{"norms", ",", "max"}], "]"}], "]"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.793000559733202*^9, 3.793000752609247*^9}, {
  3.7930007840097647`*^9, 3.7930008662887077`*^9}, {3.793108657000675*^9, 
  3.793108709168412*^9}, {3.7931787732268295`*^9, 3.7931787758114862`*^9}, {
  3.793554676381487*^9, 3.793554679171705*^9}, {3.7935554479395475`*^9, 
  3.7935554747165375`*^9}, {3.7935570166204767`*^9, 3.7935570356518555`*^9}, {
  3.7935580204283457`*^9, 3.7935580209985757`*^9}, {3.7936252610406866`*^9, 
  3.7936252906525593`*^9}, {3.7942281284332685`*^9, 3.7942281330790725`*^9}, {
  3.7943097305837994`*^9, 3.7943097323306704`*^9}, {3.794661473187955*^9, 
  3.7946614753801804`*^9}, {3.7946832969539394`*^9, 3.7946832992304697`*^9}},
 CellLabel->
  "In[159]:=",ExpressionUUID->"50415d08-caf0-4656-a17b-f219eb7c676e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ShortRoots", "[", "a_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"min", ",", "roots", ",", "norms"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"norms", "=", 
      RowBox[{
       RowBox[{
        FractionBox["4", 
         RowBox[{"killing", "[", 
          RowBox[{"a", ",", "##", ",", "##"}], "]"}]], "&"}], "/@", 
       RowBox[{"FOrthogonalPositiveCoroots", "[", "a", "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"min", "=", 
      RowBox[{"Min", "[", "norms", "]"}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "This", " ", "is", " ", "the", " ", "minimal", " ", "root", " ", 
        "length"}], ",", " ", 
       RowBox[{
       "which", " ", "depends", " ", "on", " ", "the", " ", "conventions", 
        " ", "in", " ", "the", " ", "LieART", " ", "package"}], ",", " ", 
       RowBox[{
       "however", " ", "the", " ", "exponents", " ", "in", " ", "the", " ", 
        "denominator", " ", "do", " ", "not"}], ",", " ", 
       RowBox[{"so", " ", "this", " ", 
        RowBox[{"doesn", "'"}], "t", " ", 
        RowBox[{"matter", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"FPositiveRoots", "[", "a", "]"}], "[", 
        RowBox[{"[", "#", "]"}], "]"}], "&"}], "/@", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Position", "[", 
        RowBox[{"norms", ",", "min"}], "]"}], "]"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7942281185692797`*^9, 3.794228125636909*^9}, {
  3.79430973526678*^9, 3.7943097379193344`*^9}, {3.794692965163093*^9, 
  3.794692966527688*^9}},
 CellLabel->
  "In[160]:=",ExpressionUUID->"60e4e1af-0855-489c-b636-09b94df666eb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FHighestRoot", "[", "a_", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"MaximalBy", "[", 
    RowBox[{
     RowBox[{"FPositiveRoots", "[", "a", "]"}], ",", "Total"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.793627402205665*^9, 3.7936274154585915`*^9}, {
   3.793627546937937*^9, 3.7936275990717945`*^9}, {3.7936277306840224`*^9, 
   3.7936277343732986`*^9}, 3.7947003654680586`*^9},
 CellLabel->
  "In[161]:=",ExpressionUUID->"d3cc8c3d-ca2c-4000-8349-4128bcc555da"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FHighestRoot", "[", "B3", "]"}]], "Input",
 CellChangeTimes->{{3.793627575645115*^9, 3.793627601368832*^9}, {
  3.7936317077373495`*^9, 3.793631710747682*^9}, {3.7946930304946504`*^9, 
  3.7946930312408266`*^9}},
 CellLabel->
  "In[162]:=",ExpressionUUID->"9e0c9192-0ed6-445e-9eaa-02369a857b96"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "2"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.7936275855681114`*^9, 3.7936276041351843`*^9}, 
   3.793627739265165*^9, 3.793631712091156*^9, {3.793631898680038*^9, 
   3.793631913622748*^9}, 3.793633719654526*^9, 3.793721830513854*^9, 
   3.7937223182260103`*^9, 3.793725171267777*^9, 3.7940647261507597`*^9, 
   3.7941404281099343`*^9, 3.794183133944011*^9, 3.7942279337406406`*^9, 
   3.794227982737512*^9, 3.794309641772606*^9, 3.7943096801813736`*^9, 
   3.79433183003752*^9, 3.7943332108631005`*^9, 3.7943514647022505`*^9, 
   3.7945758523650084`*^9, 3.7945768061830044`*^9, 3.7945907050525274`*^9, 
   3.794661401889038*^9, 3.7946915651093655`*^9, 3.7946929954198265`*^9, 
   3.7946930317225037`*^9, 3.794700367571437*^9, 3.7949261075847187`*^9, 
   3.7953605158979545`*^9, 3.7954384646333485`*^9, 3.7954389688333197`*^9, 
   3.795782552385734*^9, 3.7958114571784673`*^9, 3.795862233747364*^9, 
   3.7958639833800144`*^9, 3.7958939237519836`*^9, 3.7959098964772654`*^9, 
   3.795971730749467*^9, 3.7959790702506647`*^9, 3.7959831996429796`*^9, 
   3.796040095654903*^9, 3.7960682205868464`*^9, {3.796116903010119*^9, 
   3.79611692645918*^9}, 3.796117328687908*^9, 3.7961502220477686`*^9, 
   3.7961661826301317`*^9, 3.7962354475671844`*^9, 3.7962356115922937`*^9, 
   3.7963021023111525`*^9, 3.796305836231164*^9, 3.7963164324910307`*^9, 
   3.796317705572186*^9, 3.796317954669183*^9, 3.796319135413335*^9, 
   3.796395583256135*^9, 3.7977714990585403`*^9, 3.7977849634581013`*^9, 
   3.7977867764176936`*^9, 3.7977871394722767`*^9, 3.7978821077305307`*^9, 
   3.79792479691993*^9, 3.798285955847408*^9, 3.798324014848064*^9, 
   3.7983626869290257`*^9, 3.7983690363436904`*^9, 3.7983990143052464`*^9, 
   3.798488169939433*^9, 3.7985699510668125`*^9, 3.7988011915500603`*^9, 
   3.7989808216307817`*^9, 3.7989808660664525`*^9},
 CellLabel->
  "Out[162]=",ExpressionUUID->"1636e81e-720a-4d36-8d23-0eb3b5b079f1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FOrthogonalSimpleRoots", "[", "B3", "]"}]], "Input",
 CellChangeTimes->{{3.7957884567621465`*^9, 3.7957884897580147`*^9}},
 CellLabel->
  "In[163]:=",ExpressionUUID->"4f1b1bc4-5ddc-4396-88e1-990a99abee60"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "2"], 
      RowBox[{"-", 
       FractionBox["1", "2"]}], "0"},
     {"0", 
      FractionBox["1", "2"], 
      RowBox[{"-", 
       FractionBox["1", "2"]}]},
     {"0", "0", 
      FractionBox["1", "2"]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.7957884629489517`*^9, 3.795788490346161*^9}, 
   3.795811457298123*^9, 3.795862233887988*^9, 3.795863983539869*^9, 
   3.7958939244248104`*^9, 3.795909897522519*^9, 3.7959717312927494`*^9, 
   3.795979070454577*^9, 3.795983199843111*^9, 3.796040095834428*^9, 
   3.796068220763649*^9, {3.7961169036932917`*^9, 3.7961169266586456`*^9}, 
   3.796117328874929*^9, 3.7961502222890415`*^9, 3.7961661828660126`*^9, 
   3.796235447772147*^9, 3.7962356117867727`*^9, 3.796302102521175*^9, 
   3.7963058364829946`*^9, 3.79631643272621*^9, 3.796317705822159*^9, 
   3.796317954966166*^9, 3.796319135645776*^9, 3.7963955834410486`*^9, 
   3.79777149911838*^9, 3.7977849636356573`*^9, 3.797786776559252*^9, 
   3.7977871396007013`*^9, 3.7978821079838085`*^9, 3.797924797086996*^9, 
   3.798285956012362*^9, 3.798324015045535*^9, 3.798362687058216*^9, 
   3.7983690365252037`*^9, 3.798399014433901*^9, 3.798488170129923*^9, 
   3.798569951343709*^9, 3.798801191718498*^9, 3.798980821808301*^9, 
   3.798980866236998*^9},
 CellLabel->
  "Out[163]=",ExpressionUUID->"af7cc871-72b3-458a-afd0-84022a65b45b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FOrthogonalPositiveCoroots", "[", "B3", "]"}]], "Input",
 CellChangeTimes->{{3.794926110224684*^9, 3.7949261245749702`*^9}, {
  3.795788640429093*^9, 3.7957886597246375`*^9}},
 CellLabel->
  "In[164]:=",ExpressionUUID->"53da50c3-b085-4fb3-ab64-c6b3834f208f"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", "0", "0"},
     {"1", "1", "0"},
     {"0", "2", "0"},
     {"1", "0", "1"},
     {"0", "1", "1"},
     {"1", "0", 
      RowBox[{"-", "1"}]},
     {"0", "1", 
      RowBox[{"-", "1"}]},
     {"0", "0", "2"},
     {"1", 
      RowBox[{"-", "1"}], "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.7949261249646344`*^9, 3.795360516141856*^9, 3.7954384649456015`*^9, 
   3.7954389690956683`*^9, 3.7957825526952777`*^9, {3.7957886433902187`*^9, 
   3.7957886603818817`*^9}, 3.7958114574208336`*^9, 3.7958622340744877`*^9, 
   3.7958639859174185`*^9, 3.795893924651616*^9, 3.795909898026127*^9, 
   3.7959717316912346`*^9, 3.795979070662961*^9, 3.795983200058866*^9, 
   3.796040096007373*^9, 3.7960682209326377`*^9, {3.7961169044891644`*^9, 
   3.7961169270456114`*^9}, 3.7961173290655775`*^9, 3.7961502225534954`*^9, 
   3.796166183049526*^9, 3.7962354480065193`*^9, 3.7962356120031943`*^9, 
   3.796302102731535*^9, 3.796305836857673*^9, 3.7963164330989656`*^9, 
   3.7963177060531473`*^9, 3.7963179552623606`*^9, 3.7963191358612823`*^9, 
   3.796395583623406*^9, 3.7977714991881957`*^9, 3.7977849637799797`*^9, 
   3.797786776692868*^9, 3.797787140128587*^9, 3.7978821083874607`*^9, 
   3.7979247972635255`*^9, 3.7982859562612424`*^9, 3.7983240153756523`*^9, 
   3.7983626872118044`*^9, 3.7983690367231846`*^9, 3.798399014552585*^9, 
   3.798488170284157*^9, 3.7985699517675447`*^9, 3.798801191888692*^9, 
   3.798980821974857*^9, 3.7989808664030647`*^9},
 CellLabel->
  "Out[164]=",ExpressionUUID->"18dd148b-569d-42fd-b870-58b6ea8e0c84"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exponents for the denominator", "Subsection",
 CellChangeTimes->{{3.79128490470322*^9, 
  3.7912849284050426`*^9}},ExpressionUUID->"0c0d1cce-d51c-4152-a53c-\
1cfc9b4fa603"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Exponents", "[", "a_", "]"}], ":=", 
  RowBox[{"LongRoots", "[", "a", "]"}], " "}]], "Input",
 CellChangeTimes->{{3.7935571213470526`*^9, 3.7935571641370883`*^9}, {
  3.793558023638423*^9, 3.7935580248090744`*^9}, {3.7942294399987545`*^9, 
  3.794229493988845*^9}, {3.794331714895221*^9, 3.7943317151664968`*^9}, {
  3.7943331789156556`*^9, 3.7943331791397653`*^9}, {3.794661410447259*^9, 
  3.7946614189979057`*^9}, {3.795442591706971*^9, 3.795442593727936*^9}, {
  3.795782575181186*^9, 3.7957825784276457`*^9}, {3.7977863873756123`*^9, 
  3.7977863875581408`*^9}},
 CellLabel->
  "In[165]:=",ExpressionUUID->"b4481677-0dfd-4835-9c55-c37a3c2ee0af"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tt", "=", 
   RowBox[{"Array", "[", 
    RowBox[{"t", ",", "3"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PP", "=", 
   RowBox[{"Array", "[", 
    RowBox[{"P", ",", "3"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7943328949737773`*^9, 3.794332897607541*^9}, {
  3.7945762052264147`*^9, 3.794576206326722*^9}, {3.7957825870856967`*^9, 
  3.795782598615816*^9}, {3.7957827344154673`*^9, 3.7957827390162053`*^9}},
 CellLabel->
  "In[166]:=",ExpressionUUID->"0fa5557c-44d6-4ed1-8294-8ed57f2a094d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"replacement", "=", 
  RowBox[{"Thread", "[", 
   RowBox[{"PP", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{"Times", " ", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["tt", "##"], "&"}], "@", 
        RowBox[{"FOrthogonalFundamentalCoweights", "[", "B3", "]"}]}], 
       ")"}]}], ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7935793156884613`*^9, 3.793579477673813*^9}, {
  3.7935795469638405`*^9, 3.793579552583914*^9}, {3.793625314756031*^9, 
  3.7936253420237865`*^9}, {3.793631786889727*^9, 3.793631797768259*^9}, {
  3.793638166929965*^9, 3.793638201450738*^9}, {3.7936386526659145`*^9, 
  3.793638653010333*^9}, {3.7936421731905584`*^9, 3.7936421734159555`*^9}, {
  3.7945762011838026`*^9, 3.7945762032421284`*^9}, {3.7945768144216747`*^9, 
  3.7945768145942163`*^9}, {3.7946621533685045`*^9, 3.794662158692031*^9}, {
  3.795782629029811*^9, 3.795782638076049*^9}, {3.795782680500859*^9, 
  3.7957827148352885`*^9}},
 CellLabel->
  "In[168]:=",ExpressionUUID->"f4929b12-b780-4b08-ae0f-6af9b7388dbf"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"P", "(", "1", ")"}], "\[Rule]", 
     RowBox[{
      RowBox[{"t", "(", "1", ")"}], " ", 
      RowBox[{"t", "(", "2", ")"}], " ", 
      RowBox[{"t", "(", "3", ")"}]}]}], ",", 
    RowBox[{
     RowBox[{"P", "(", "2", ")"}], "\[Rule]", 
     RowBox[{
      RowBox[{"t", "(", "2", ")"}], " ", 
      RowBox[{"t", "(", "3", ")"}]}]}], ",", 
    RowBox[{
     RowBox[{"P", "(", "3", ")"}], "\[Rule]", 
     RowBox[{"t", "(", "3", ")"}]}]}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.793625343546959*^9, {3.793631783482242*^9, 3.793631798173848*^9}, {
   3.7936319031899977`*^9, 3.79363191413821*^9}, 3.79363372382627*^9, 
   3.793638059002648*^9, {3.7936381738844304`*^9, 3.79363820199708*^9}, 
   3.7936386537447386`*^9, 3.7936421739295816`*^9, 3.7937218316716986`*^9, 
   3.7937223195300674`*^9, 3.793725171659734*^9, 3.7940647269765115`*^9, 
   3.79414042896204*^9, 3.794183135685357*^9, 3.7942279349630537`*^9, 
   3.7942279844441433`*^9, 3.7943318343746796`*^9, 3.794333211576988*^9, 
   3.79435146518496*^9, 3.7945758609780335`*^9, 3.7945765981601505`*^9, {
   3.794576809514169*^9, 3.7945768152096233`*^9}, 3.7945907093348227`*^9, {
   3.794662161719115*^9, 3.7946621670250683`*^9}, 3.7946930418332415`*^9, 
   3.794700372546139*^9, 3.7953605185231733`*^9, 3.795360574242093*^9, 
   3.7954384654919167`*^9, 3.7954389694861126`*^9, 3.7957825531455555`*^9, 
   3.795782693931948*^9, 3.795811457597746*^9, 3.795862234269847*^9, 
   3.7958639863408723`*^9, 3.795893925031931*^9, 3.7959098988439417`*^9, 
   3.7959717319857388`*^9, 3.795979070914973*^9, 3.795983200336342*^9, 
   3.796040096214269*^9, 3.7960682212529163`*^9, {3.7961169052182145`*^9, 
   3.7961169273707433`*^9}, 3.7961173295055733`*^9, 3.79615022292459*^9, 
   3.7961661832879343`*^9, 3.7962354483655577`*^9, 3.7962356123233385`*^9, 
   3.7963021030111885`*^9, 3.7963058373179407`*^9, 3.7963164334413486`*^9, 
   3.7963177064431796`*^9, 3.7963179557961674`*^9, 3.796319136389886*^9, 
   3.796395583925049*^9, 3.7977714993572664`*^9, 3.7977849643538733`*^9, 
   3.797786777153652*^9, 3.7977871405227404`*^9, 3.7978821090010805`*^9, 
   3.797924797490969*^9, 3.7982859564592485`*^9, 3.798324015722887*^9, 
   3.798362687446192*^9, 3.7983690370408363`*^9, 3.7983990147600284`*^9, 
   3.798488170818242*^9, 3.7985699521578693`*^9, 3.798801192279916*^9, 
   3.7989808223513594`*^9, 3.7989808667466583`*^9},
 CellLabel->
  "Out[168]=",ExpressionUUID->"487deccb-f88f-4f7d-a984-5b8b810f19a0"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Modular ring", "Chapter",
 CellChangeTimes->{{3.7898151210537586`*^9, 3.78981512677314*^9}, {
  3.790578263556707*^9, 
  3.790578268484214*^9}},ExpressionUUID->"24429cc4-4cfe-4e8b-95d7-\
f70d8c8cae77"],

Cell[CellGroupData[{

Cell["Dedekind and Jacobi theta functions", "Subsection",
 CellChangeTimes->{{3.7897096326942573`*^9, 
  3.7897097035144653`*^9}},ExpressionUUID->"79eef911-1b32-4a1f-ab47-\
5a756d402bc7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Eta]", "=", 
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["q", 
       RowBox[{"1", "/", "24"}]], 
      RowBox[{"Product", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox["q", "n"]}], ")"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "M"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "0", ",", 
       RowBox[{"M", "+", "1"}]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7914632498812375`*^9, 3.7914632502060585`*^9}, 
   3.7914633109910684`*^9, {3.7914633895511303`*^9, 3.791463394271968*^9}, {
   3.7914634998514285`*^9, 3.791463500761246*^9}, {3.791463542701372*^9, 
   3.7914635718214345`*^9}},
 CellLabel->
  "In[169]:=",ExpressionUUID->"8e36643d-f8d9-4493-b0e5-e768bb5b282b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalTheta]", "[", 
   RowBox[{"a_", ",", "b_", ",", "Z_"}], "]"}], ":=", 
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"2", "\[Pi]", " ", "I", " ", "b", " ", "n"}], "]"}], 
       SuperscriptBox["Z", 
        RowBox[{"(", 
         RowBox[{"n", "+", "a"}], ")"}]], 
       SuperscriptBox["q", 
        RowBox[{
         RowBox[{"1", "/", "2"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"n", "+", "a"}], ")"}], "2"]}]]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"-", 
         RowBox[{"Ceiling", "[", 
          RowBox[{
           SqrtBox["M"], "+", "1"}], "]"}]}], ",", 
        RowBox[{"Ceiling", "[", 
         RowBox[{
          SqrtBox["M"], "+", "1"}], "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"q", ",", "0", ",", 
      RowBox[{"M", "+", "1"}]}], "}"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"Z", "=", 
    RowBox[{"Exp", "[", 
     RowBox[{"2", "i\[Pi]z"}], "]"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.7914635759813957`*^9, 3.7914635765113277`*^9}},
 CellLabel->
  "In[170]:=",ExpressionUUID->"fde92841-4dd6-4c4d-b2e2-b34ab3e2ec40"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"\[Theta]1", ",", "\[Theta]2", ",", "\[Theta]3", ",", "\[Theta]4"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.7939809501203384`*^9, 3.7939809731306415`*^9}},
 CellLabel->
  "In[171]:=",ExpressionUUID->"5cfa34e5-03a7-44e8-ba05-0d81152648fe"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]1", "[", "Z_", "]"}], "=", 
   RowBox[{"I", " ", 
    RowBox[{"\[CapitalTheta]", "[", 
     RowBox[{
      RowBox[{"1", "/", "2"}], ",", 
      RowBox[{"1", "/", "2"}], ",", "Z"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]2", "[", "Z_", "]"}], "=", 
   RowBox[{"\[CapitalTheta]", "[", 
    RowBox[{
     RowBox[{"1", "/", "2"}], ",", "0", ",", "Z"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]3", "[", "Z_", "]"}], "=", 
   RowBox[{"\[CapitalTheta]", "[", 
    RowBox[{"0", ",", "0", ",", "Z"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]4", "[", "Z_", "]"}], "=", 
   RowBox[{"\[CapitalTheta]", "[", 
    RowBox[{"0", ",", 
     RowBox[{"1", "/", "2"}], ",", "Z"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.789709688029153*^9, 3.7897096981284113`*^9}},
 CellLabel->
  "In[172]:=",ExpressionUUID->"b926eeb3-50af-4487-b150-70b14b92d3d4"]
}, Closed]],

Cell[CellGroupData[{

Cell["Eisenstein Series", "Subsection",
 CellChangeTimes->{{3.7784178366725335`*^9, 3.778417840369362*^9}, {
  3.778475145373413*^9, 
  3.7784751469342866`*^9}},ExpressionUUID->"4f1709b0-15c8-4fc6-921e-\
e5a559b5dbd2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Eisenstein", "[", "k_", "]"}], ":=", 
  RowBox[{"1", "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", "/", 
      RowBox[{"Zeta", "[", 
       RowBox[{"1", "-", "k"}], "]"}]}], ")"}], 
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["n", 
            RowBox[{"k", "-", "1"}]], 
           SuperscriptBox["q", "n"]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["q", "n"]}], ")"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "M"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"q", ",", "0", ",", "M"}], "}"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.778473820513609*^9, 3.778473832973556*^9}, {
  3.7784751269577217`*^9, 3.7784751275032554`*^9}, {3.7790952509257407`*^9, 
  3.7790953501675224`*^9}, {3.7791654330350914`*^9, 3.7791654480686855`*^9}, {
  3.7791711002324567`*^9, 3.779171103696207*^9}, {3.7791840677549453`*^9, 
  3.7791840702757044`*^9}},
 CellLabel->
  "In[176]:=",ExpressionUUID->"a454e09c-dd38-4eb2-a18c-7ad92bb3bc79"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ei2", "=", 
   RowBox[{"Eisenstein", "[", "2", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ei4", "=", 
   RowBox[{"Eisenstein", "[", "4", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ei6", "=", 
   RowBox[{"Eisenstein", "[", "6", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7784178548072653`*^9, 3.778417871777855*^9}, {
  3.778475129493898*^9, 3.7784751320735683`*^9}, {3.779095240473817*^9, 
  3.7790952456344204`*^9}, {3.7898840526649256`*^9, 3.7898840681681895`*^9}},
 CellLabel->
  "In[177]:=",ExpressionUUID->"ed51ba7c-9b00-4d9f-ad5a-59cfbc619a96"]
}, Closed]],

Cell[CellGroupData[{

Cell["alpha modular forms", "Subsection",
 CellChangeTimes->{{3.7897097101240087`*^9, 3.7897097253688164`*^9}, {
  3.7897134609611516`*^9, 3.78971346156332*^9}, {3.7897261910648637`*^9, 
  3.7897261941376457`*^9}, {3.7946625918988657`*^9, 3.794662593398402*^9}, {
  3.7977716041630287`*^9, 
  3.7977716058191175`*^9}},ExpressionUUID->"61d95b9b-55e1-4e03-a702-\
95460112ba30"],

Cell[BoxData[
 RowBox[{"Clear", "[", "\[Alpha]2", "]"}]], "Input",
 CellChangeTimes->{{3.7960666306007843`*^9, 3.7960666382034917`*^9}},
 CellLabel->
  "In[180]:=",ExpressionUUID->"ba857018-eebf-4178-87e1-a87a1a3424e9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Alpha]", "[", "Z_", "]"}], ":=", 
  RowBox[{"I", 
   FractionBox[
    RowBox[{"\[Theta]1", "[", "Z", "]"}], 
    SuperscriptBox["\[Eta]", "3"]]}]}]], "Input",
 CellChangeTimes->{{3.79162365223875*^9, 3.791623661691287*^9}, {
  3.7960666426926813`*^9, 3.7960666433585815`*^9}},
 CellLabel->
  "In[181]:=",ExpressionUUID->"323cd920-7008-4f3d-b02a-d88c7488a306"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Alpha]2", "[", "Z_", "]"}], ":=", 
  RowBox[{
   RowBox[{"\[Alpha]2", "[", "Z", "]"}], "=", 
   RowBox[{"Expand", "/@", 
    SuperscriptBox[
     RowBox[{"\[Alpha]", "[", "Z", "]"}], "2"]}]}]}]], "Input",
 CellChangeTimes->{{3.79372188770612*^9, 3.7937219325237675`*^9}, {
  3.7943335610375214`*^9, 3.794333566861366*^9}, {3.7943336209910154`*^9, 
  3.794333639508543*^9}},
 CellLabel->
  "In[182]:=",ExpressionUUID->"49d45a45-5f9d-4960-b307-a65ac2857edd"]
}, Closed]],

Cell[CellGroupData[{

Cell["B3 forms", "Subsection",
 CellChangeTimes->{{3.794169073714961*^9, 3.7941690925739307`*^9}, {
  3.7942298987127085`*^9, 3.7942299043871307`*^9}, {3.794590739288569*^9, 
  3.794590740412567*^9}},ExpressionUUID->"ca32a9d6-98f0-4a02-a2a1-\
fb331d043430"],

Cell[BoxData[
 RowBox[{
  RowBox[{"l", "=", 
   RowBox[{"Rank", "[", "B3", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.793722024667081*^9, 3.793722034430434*^9}, {
  3.794064773841197*^9, 3.7940647747088757`*^9}},
 CellLabel->
  "In[183]:=",ExpressionUUID->"b6aebc22-8eca-44eb-a5b9-6b18ef124427"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"matF", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", ">", "0"}], ",", 
      RowBox[{"\[Rho]", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"2", "i"}], "-", "2"}], ",", 
        RowBox[{"Z", "[", "j", "]"}]}], "]"}], ",", "1"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "l"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "l"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.793723124167605*^9, 3.793723136177275*^9}, 
   3.7937287337412324`*^9, {3.794064794967704*^9, 3.7940648046747503`*^9}},
 CellLabel->
  "In[184]:=",ExpressionUUID->"c5725bc3-4e90-41e2-804e-15e36c9507d9"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", 
      RowBox[{"\[Rho]", "(", 
       RowBox[{"0", ",", 
        RowBox[{"Z", "(", "0", ")"}]}], ")"}], 
      RowBox[{"\[Rho]", "(", 
       RowBox[{"2", ",", 
        RowBox[{"Z", "(", "0", ")"}]}], ")"}], 
      RowBox[{"\[Rho]", "(", 
       RowBox[{"4", ",", 
        RowBox[{"Z", "(", "0", ")"}]}], ")"}]},
     {"1", 
      RowBox[{"\[Rho]", "(", 
       RowBox[{"0", ",", 
        RowBox[{"Z", "(", "1", ")"}]}], ")"}], 
      RowBox[{"\[Rho]", "(", 
       RowBox[{"2", ",", 
        RowBox[{"Z", "(", "1", ")"}]}], ")"}], 
      RowBox[{"\[Rho]", "(", 
       RowBox[{"4", ",", 
        RowBox[{"Z", "(", "1", ")"}]}], ")"}]},
     {"1", 
      RowBox[{"\[Rho]", "(", 
       RowBox[{"0", ",", 
        RowBox[{"Z", "(", "2", ")"}]}], ")"}], 
      RowBox[{"\[Rho]", "(", 
       RowBox[{"2", ",", 
        RowBox[{"Z", "(", "2", ")"}]}], ")"}], 
      RowBox[{"\[Rho]", "(", 
       RowBox[{"4", ",", 
        RowBox[{"Z", "(", "2", ")"}]}], ")"}]},
     {"1", 
      RowBox[{"\[Rho]", "(", 
       RowBox[{"0", ",", 
        RowBox[{"Z", "(", "3", ")"}]}], ")"}], 
      RowBox[{"\[Rho]", "(", 
       RowBox[{"2", ",", 
        RowBox[{"Z", "(", "3", ")"}]}], ")"}], 
      RowBox[{"\[Rho]", "(", 
       RowBox[{"4", ",", 
        RowBox[{"Z", "(", "3", ")"}]}], ")"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.7937220555425816`*^9, 3.7937223909569607`*^9, 3.7937231368428564`*^9, 
   3.7937252032538824`*^9, 3.793728853170377*^9, 3.7939803443605785`*^9, 
   3.793985003840335*^9, {3.79406477716431*^9, 3.7940648051395483`*^9}, 
   3.7941404494873924`*^9, 3.7941831544960756`*^9, 3.7942299091382484`*^9, 
   3.794332590985812*^9, 3.794333232456419*^9, 3.7943514732357693`*^9, 
   3.7945758985481887`*^9, 3.794576856928987*^9, 3.7945907430242357`*^9, 
   3.7946622437675533`*^9, 3.7946625985134506`*^9, 3.7947004198806124`*^9, 
   3.795360762083263*^9, 3.795438973731157*^9, {3.7954392772490654`*^9, 
   3.7954393049116306`*^9}, 3.795782763645299*^9, 3.7958114597195215`*^9, 
   3.795862235718645*^9, 3.795863986825075*^9, 3.7958939322516155`*^9, 
   3.7959099006152067`*^9, 3.7959717327967043`*^9, 3.7959790714419837`*^9, 
   3.795983200845846*^9, 3.7960400979875574`*^9, 3.7960663370039015`*^9, 
   3.796068221844353*^9, 3.796116928114752*^9, 3.7961173303544793`*^9, 
   3.796148018941484*^9, 3.7961484218033876`*^9, 3.7961491365508385`*^9, 
   3.7961650552937193`*^9, 3.7961661952183967`*^9, 3.796233282004238*^9, 
   3.7962356154115314`*^9, 3.7963021048114796`*^9, 3.796306232440055*^9, 
   3.7963164344110546`*^9, 3.796395587831972*^9, 3.797771511158722*^9, 
   3.7977717415194616`*^9, 3.7977849653637753`*^9, 3.797786778476016*^9, 
   3.7977871417791843`*^9, 3.7978821104404583`*^9, 3.797924798493012*^9, 
   3.79828595680305*^9, 3.7983239024672613`*^9, 3.7983240420434647`*^9, 
   3.798362578732555*^9, 3.7983690388147697`*^9, 3.798399015187396*^9, 
   3.7985699527807765`*^9, 3.7988024353536816`*^9, 3.798980823131486*^9, 
   3.7989808674448347`*^9},
 CellLabel->
  "Out[184]=",ExpressionUUID->"e2a287f8-85a7-45b5-93e6-54fe1b8a24c2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"matG", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", ">", "0"}], ",", 
      RowBox[{"\[Rho]", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"2", "i"}], "-", "2"}], ",", 
        RowBox[{"Z", "[", "j", "]"}]}], "]"}], ",", "1"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "l"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", 
      RowBox[{"l", "-", "1"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.793723148006001*^9, 3.7937287437305517`*^9, {3.794064809662411*^9, 
   3.7940648141444693`*^9}},
 CellLabel->
  "In[185]:=",ExpressionUUID->"4af321b4-9eb4-4415-b5b6-6e38e61efccc"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", 
      RowBox[{"\[Rho]", "(", 
       RowBox[{"0", ",", 
        RowBox[{"Z", "(", "1", ")"}]}], ")"}], 
      RowBox[{"\[Rho]", "(", 
       RowBox[{"2", ",", 
        RowBox[{"Z", "(", "1", ")"}]}], ")"}]},
     {"1", 
      RowBox[{"\[Rho]", "(", 
       RowBox[{"0", ",", 
        RowBox[{"Z", "(", "2", ")"}]}], ")"}], 
      RowBox[{"\[Rho]", "(", 
       RowBox[{"2", ",", 
        RowBox[{"Z", "(", "2", ")"}]}], ")"}]},
     {"1", 
      RowBox[{"\[Rho]", "(", 
       RowBox[{"0", ",", 
        RowBox[{"Z", "(", "3", ")"}]}], ")"}], 
      RowBox[{"\[Rho]", "(", 
       RowBox[{"2", ",", 
        RowBox[{"Z", "(", "3", ")"}]}], ")"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.793722063886166*^9, 3.793722394205888*^9, 3.793723148846839*^9, 
   3.793725206311475*^9, 3.7937288645892773`*^9, 3.7939803456204166`*^9, 
   3.7939850206733584`*^9, 3.7940648144795303`*^9, 3.7941404685064116`*^9, 
   3.7941831548251963`*^9, 3.794229910133362*^9, 3.794332591313944*^9, 
   3.794333232846399*^9, 3.79435147349009*^9, 3.7945758987700653`*^9, 
   3.7945768578405247`*^9, 3.7945907445499253`*^9, 3.7946622458162594`*^9, 
   3.7946625995470185`*^9, 3.79470042004318*^9, 3.7953607623236465`*^9, 
   3.7954389738999968`*^9, {3.7954392774581647`*^9, 3.795439305153571*^9}, 
   3.7957827639043007`*^9, 3.7958114598452325`*^9, 3.795862235846813*^9, 
   3.795863987009761*^9, 3.7958939325162973`*^9, 3.7959099010290995`*^9, 
   3.795971732990029*^9, 3.795979071667594*^9, 3.7959832010602303`*^9, 
   3.7960400981514482`*^9, 3.796066337265869*^9, 3.796068222043624*^9, 
   3.796116928619404*^9, 3.7961173305457444`*^9, 3.796148019168703*^9, 
   3.796148422034502*^9, 3.796149136797532*^9, 3.796165055512417*^9, 
   3.796166195439802*^9, 3.7962332822196784`*^9, 3.7962356156080084`*^9, 
   3.796302105036203*^9, 3.79630623276097*^9, 3.7963164346653805`*^9, 
   3.796395588010889*^9, 3.797771511227536*^9, 3.7977717416509886`*^9, 
   3.7977849655069084`*^9, 3.797786778603201*^9, 3.7977871423351483`*^9, 
   3.797882110702281*^9, 3.7979247986485972`*^9, 3.7982859569581985`*^9, 
   3.7983239026327753`*^9, 3.7983240422334795`*^9, 3.798362578901103*^9, 
   3.798369038995161*^9, 3.798399015308072*^9, 3.7985699530795193`*^9, 
   3.798802435513113*^9, 3.7989808234546223`*^9, 3.798980867735016*^9},
 CellLabel->
  "Out[185]=",ExpressionUUID->"b6c65166-8fe3-4da1-84a7-21de2c0538c6"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"F", "=", 
   RowBox[{"Det", "[", "matF", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G", "=", 
   RowBox[{"Det", "[", "matG", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.793722075098178*^9, 3.793722077508055*^9}},
 CellLabel->
  "In[186]:=",ExpressionUUID->"8af33d1c-8486-4b88-8a68-eaef5cd47b0a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"factor", "[", "0", "]"}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      FractionBox["F", "G"], "/.", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Rho]", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"2", "i"}], "-", "2"}], ",", 
           RowBox[{"Z", "[", "0", "]"}]}], "]"}], "\[Rule]", "0"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", "l"}], "}"}]}], "]"}]}], ")"}], "//", 
    "Simplify"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7937231572937665`*^9, 3.7937231585835657`*^9}, {
   3.7937231955457067`*^9, 3.7937232417389154`*^9}, {3.793723378996744*^9, 
   3.7937233815525446`*^9}, 3.793728747898017*^9},
 CellLabel->
  "In[188]:=",ExpressionUUID->"d6d3f966-e759-4001-b36f-b86058a1076d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"factor", "[", "k_", "]"}], ":=", 
  RowBox[{
   RowBox[{"factor", "[", "k", "]"}], "=", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      FractionBox["F", "G"], ",", 
      RowBox[{"\[Rho]", "[", 
       RowBox[{
        RowBox[{"k", "-", "2"}], ",", 
        RowBox[{"Z", "[", "0", "]"}]}], "]"}]}], "]"}], "//", 
    "Simplify"}]}]}]], "Input",
 CellChangeTimes->{{3.793723174570174*^9, 3.7937231796795006`*^9}, {
   3.7937232603900766`*^9, 3.7937232607185097`*^9}, {3.793723597575175*^9, 
   3.793723602337557*^9}, 3.79372874890777*^9},
 CellLabel->
  "In[189]:=",ExpressionUUID->"12cf8617-46be-48e0-aa7e-32313e82c744"],

Cell[BoxData[
 RowBox[{"Clear", "[", "wp", "]"}]], "Input",
 CellChangeTimes->{{3.793980994410499*^9, 3.793981001464471*^9}},
 CellLabel->
  "In[190]:=",ExpressionUUID->"44857a2a-89c8-4ea2-9238-fa16e9ea89a5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"wptemp", "[", "V_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"\[Theta]3", "[", "1", "]"}], "2"], 
       SuperscriptBox[
        RowBox[{"\[Theta]2", "[", "1", "]"}], "2"]}], "4"], 
     FractionBox[
      SuperscriptBox[
       RowBox[{"\[Theta]4", "[", "V", "]"}], "2"], 
      SuperscriptBox[
       RowBox[{"\[Theta]1", "[", "V", "]"}], "2"]]}], "-", 
    RowBox[{
     FractionBox["1", "12"], 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"\[Theta]3", "[", "1", "]"}], "4"], "+", 
       SuperscriptBox[
        RowBox[{"\[Theta]2", "[", "1", "]"}], "4"]}], ")"}]}]}], " ", "//", 
   "Simplify", " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Be", " ", "careful"}], ",", " ", 
     RowBox[{
     "apparently", " ", "mathematica", " ", "confuses", " ", "p", " ", "and", 
      " ", "\[Rho]"}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.793722157866444*^9, 3.7937221608865757`*^9}, {
  3.7937222214060993`*^9, 3.7937222215566177`*^9}, {3.793722419002128*^9, 
  3.793722483046011*^9}, {3.7937252684541545`*^9, 3.7937252695959883`*^9}},
 CellLabel->
  "In[191]:=",ExpressionUUID->"ed75863f-f951-4362-bec2-a58d3c6e0f58"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"wp", "[", 
    RowBox[{"0", ",", "V_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"wp", "[", 
     RowBox[{"0", ",", "V"}], "]"}], "=", 
    RowBox[{"wptemp", "[", "V", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.793722576578476*^9, 3.793722589107048*^9}, {
  3.7937228901043153`*^9, 3.793722923219555*^9}, {3.7937252823379045`*^9, 
  3.7937252837288632`*^9}},
 CellLabel->
  "In[192]:=",ExpressionUUID->"4a2d8ae5-d72e-4301-a54e-a09a997e2431"],

Cell[BoxData[
 RowBox[{
  RowBox[{"wp", "[", 
   RowBox[{"k_", ",", "V_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"wp", "[", 
    RowBox[{"k", ",", "V"}], "]"}], "=", 
   RowBox[{
    RowBox[{"V", 
     RowBox[{
      SubscriptBox["\[PartialD]", "V"], 
      RowBox[{"wp", "[", 
       RowBox[{
        RowBox[{"k", "-", "1"}], ",", "V"}], "]"}]}]}], "//", 
    "Simplify"}]}]}]], "Input",
 CellChangeTimes->{{3.793722924652959*^9, 3.7937229759238763`*^9}, {
  3.793723324261653*^9, 3.7937233347913113`*^9}},
 CellLabel->
  "In[193]:=",ExpressionUUID->"39466b89-02f0-4d27-bdb8-c62f9b841c75"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wp", "[", 
  RowBox[{"0", ",", "V"}], "]"}]], "Input",
 CellChangeTimes->{{3.7937233368511105`*^9, 3.793723358752984*^9}, {
  3.7939816687507133`*^9, 3.7939816689700623`*^9}},
 CellLabel->
  "In[194]:=",ExpressionUUID->"b86b57b5-655a-4cba-8aee-c789b36c5706"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["V", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"V", "-", "1"}], ")"}], "2"]]}], "-", 
      FractionBox["1", "12"]}], ")"}], "-", 
    FractionBox[
     RowBox[{"q", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"V", "-", "1"}], ")"}], "2"]}], "V"], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["q", "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"V", "-", "1"}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", 
         SuperscriptBox["V", "2"]}], "+", 
        RowBox[{"5", " ", "V"}], "+", "2"}], ")"}]}], 
     SuperscriptBox["V", "2"]], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["q", "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", " ", 
         SuperscriptBox["V", "6"]}], "+", 
        SuperscriptBox["V", "4"], "-", 
        RowBox[{"8", " ", 
         SuperscriptBox["V", "3"]}], "+", 
        SuperscriptBox["V", "2"], "+", "3"}], ")"}]}], 
     SuperscriptBox["V", "3"]], "+", 
    InterpretationBox[
     RowBox[{"O", "(", 
      SuperscriptBox["q", "4"], ")"}],
     SeriesData[$CellContext`q, 0, {}, 0, 32, 8],
     Editable->False]}],
   SeriesData[$CellContext`q, 0, {
    Rational[-1, 12] - (-1 + $CellContext`V)^(-2) $CellContext`V, 0, 0, 0, 0, 
     0, 0, 0, -(-1 + $CellContext`V)^2/$CellContext`V, 0, 0, 0, 0, 0, 0, 
     0, -(-1 + $CellContext`V)^2 $CellContext`V^(-2) (2 + 5 $CellContext`V + 
      2 $CellContext`V^2), 0, 0, 0, 0, 0, 0, 
     0, -$CellContext`V^(-3) (3 + $CellContext`V^2 - 
      8 $CellContext`V^3 + $CellContext`V^4 + 3 $CellContext`V^6)}, 0, 32, 8],
   Editable->False], TraditionalForm]], "Output",
 CellChangeTimes->{{3.7937233436691217`*^9, 3.793723359107502*^9}, 
   3.7937252250798903`*^9, 3.793725292600404*^9, 3.7937278778044004`*^9, 
   3.793728946537458*^9, 3.7939806913005514`*^9, 3.793981006344985*^9, {
   3.7939816297667913`*^9, 3.7939816695101523`*^9}, 3.7939850303455343`*^9, 
   3.7940649190007305`*^9, 3.7941404999053087`*^9, 3.79418315596914*^9, 
   3.79422991750753*^9, 3.794332592198762*^9, 3.794333233677734*^9, 
   3.7943514746405635`*^9, 3.794575899531555*^9, 3.7945768636034393`*^9, 
   3.7945907521632757`*^9, 3.79466225279972*^9, 3.7946626062827625`*^9, 
   3.7947004204810085`*^9, 3.7953607630977736`*^9, 3.7954389746452656`*^9, {
   3.7954392781921763`*^9, 3.795439305739286*^9}, 3.7957827647353067`*^9, 
   3.7958114602481785`*^9, 3.7958622362164297`*^9, 3.7958639879499207`*^9, 
   3.7958939334020414`*^9, 3.7959099021590796`*^9, 3.7959717335465946`*^9, 
   3.795979072224498*^9, 3.7959832015797663`*^9, 3.796040098554543*^9, 
   3.7960663388063545`*^9, 3.7960682226843257`*^9, 3.7961169293404765`*^9, 
   3.7961173310644827`*^9, 3.796148019824646*^9, 3.796148422734741*^9, 
   3.79614913716963*^9, 3.796165057450099*^9, 3.7961661963410544`*^9, 
   3.796233282851331*^9, 3.796235616176735*^9, 3.796302105591072*^9, 
   3.7963062339031305`*^9, 3.796316435509038*^9, 3.7963955884749126`*^9, 
   3.7977715116164985`*^9, 3.797771742102476*^9, 3.797784966338204*^9, 
   3.797786779389099*^9, 3.797787143094634*^9, 3.797882111364483*^9, 
   3.7979247992850223`*^9, 3.7982859573476076`*^9, 3.7983239034642973`*^9, 
   3.798324042775031*^9, 3.7983625795902786`*^9, 3.7983690395418057`*^9, 
   3.7983990156471634`*^9, 3.7985699536199517`*^9, 3.7988024358728547`*^9, 
   3.7989808240304737`*^9, 3.798980868361351*^9},
 CellLabel->
  "Out[194]=",ExpressionUUID->"0ce6b8c9-49fb-4f76-b5e7-5f512dc12cf7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\[Phi]", "]"}]], "Input",
 CellChangeTimes->{{3.793725723573781*^9, 3.793725727880821*^9}},
 CellLabel->
  "In[195]:=",ExpressionUUID->"df468926-248f-43cd-ae9e-27ebb0fce3cd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rep", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Rho]", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"2", "i"}], "-", "2"}], ",", 
         RowBox[{"Z", "[", "j", "]"}]}], "]"}], "\[Rule]", 
       RowBox[{"Normal", "[", 
        RowBox[{"wp", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"2", "i"}], "-", "2"}], ",", 
          RowBox[{"P", "[", "j", "]"}]}], "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "l"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "l"}], "}"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.793726052556547*^9, 3.793726091786381*^9}, {
  3.793728779623516*^9, 3.793728780654602*^9}, {3.7941421501214867`*^9, 
  3.7941421506122136`*^9}},
 CellLabel->
  "In[196]:=",ExpressionUUID->"c9ff23d0-9533-42b3-9ec6-dfec241e85ed"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]", "[", 
    RowBox[{"6", ",", "B3"}], "]"}], "=", 
   RowBox[{"-", 
    RowBox[{"Collect", "[", 
     RowBox[{
      RowBox[{"Expand", "[", 
       RowBox[{
        RowBox[{"Product", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"\[Alpha]", "[", 
            RowBox[{"P", "[", "i", "]"}], "]"}], "2"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "l"}], "}"}]}], "]"}], "//", 
        "Normal"}], "]"}], ",", "q"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7937220380252714`*^9, 3.7937220406871843`*^9}, {
   3.793722494682702*^9, 3.793722495868548*^9}, {3.793725801303218*^9, 
   3.793725802675091*^9}, 3.7937287855855656`*^9, {3.7939804496905804`*^9, 
   3.79398048068023*^9}, {3.793980518790131*^9, 3.793980561197601*^9}, {
   3.794142154396061*^9, 3.7941421548605127`*^9}, {3.7954392871322284`*^9, 
   3.7954392875962515`*^9}, {3.7977717328061247`*^9, 3.7977717334756804`*^9}},
 CellLabel->
  "In[197]:=",ExpressionUUID->"26c6856b-4afc-43a9-a3c0-d81843b566bb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Reg", "[", "Z_", "]"}], ":=", 
  RowBox[{
   FractionBox[
    SuperscriptBox[
     RowBox[{"\[Alpha]", "[", "Z", "]"}], "2"], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"Z", "-", "1"}], ")"}], "2"]], "//", "Simplify", " ", 
   RowBox[{"(*", 
    RowBox[{
    "This", " ", "is", " ", "to", " ", "put", " ", "this", " ", "factor", " ",
      "in", " ", "the", " ", "prefactor", " ", "to", " ", "get", " ", "more", 
     " ", "speed"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.7941423572316475`*^9, 3.7941423874787197`*^9}, 
   3.794183237401511*^9},
 CellLabel->
  "In[198]:=",ExpressionUUID->"3c4951ce-64e1-452b-b666-6c3ac9258cbf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Phi]", "[", 
     RowBox[{"4", ",", "B3"}], "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Series", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Product", "[", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"P", "[", "i", "]"}], "-", "1"}], " ", ")"}], "2"], 
               ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "l"}], "}"}]}], "]"}], 
             RowBox[{"factor", "[", "4", "]"}]}], "/.", "rep"}], ",", 
           RowBox[{"{", 
            RowBox[{"q", ",", "0", ",", "M"}], "}"}]}], "]"}], "//", 
         "FullSimplify"}], ")"}], "*", 
       RowBox[{"Product", "[", 
        RowBox[{
         RowBox[{"Reg", "[", 
          RowBox[{"P", "[", "i", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "l"}], "}"}]}], "]"}]}], "//", 
      "Normal"}], "//", "Expand"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.794141521213673*^9, 3.7941416184775476`*^9}, {
  3.7941416593995066`*^9, 3.7941417088707714`*^9}, {3.794142158022122*^9, 
  3.7941421623126526`*^9}, {3.7954392898196363`*^9, 3.7954392902416277`*^9}, {
  3.7977717302622485`*^9, 3.7977717308762636`*^9}},
 CellLabel->
  "In[199]:=",ExpressionUUID->"d6babc2f-c1b7-4d18-9994-fed10b037917"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"5.53125`", ",", "Null"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.794141620640439*^9, {3.7941416642351713`*^9, 3.794141711339366*^9}, 
   3.7941422182705746`*^9, 3.7941831583517685`*^9, 3.7941832449203696`*^9, 
   3.7942299250019817`*^9, 3.7943325951504755`*^9, 3.794333236305837*^9, 
   3.7943514774576883`*^9, 3.794575902312832*^9, 3.7945768703899956`*^9, 
   3.794590758849363*^9, 3.794662259701847*^9, 3.794662614114129*^9, 
   3.7947004225624447`*^9, 3.7953607661301203`*^9, 3.7954389766872053`*^9, {
   3.795439281310337*^9, 3.7954393085104795`*^9}, 3.795782767515111*^9, 
   3.795811463480012*^9, 3.795862238587113*^9, 3.7958639907549562`*^9, 
   3.795893935651887*^9, 3.7959099057429843`*^9, 3.7959717359982734`*^9, 
   3.795979074066601*^9, 3.7959832036502743`*^9, 3.796040100751963*^9, 
   3.796066353523587*^9, 3.7960682282441072`*^9, 3.796116936049543*^9, 
   3.796117336645841*^9, 3.7961480259865255`*^9, 3.7961484287688155`*^9, 
   3.796149143354988*^9, 3.7961650791889906`*^9, 3.796166212823476*^9, 
   3.7962332981815095`*^9, 3.7962356314000854`*^9, 3.796302121021389*^9, 
   3.796306248177699*^9, 3.7963164507481003`*^9, 3.7963956017305756`*^9, 
   3.7977715251472917`*^9, 3.797771743790378*^9, 3.7977849807705164`*^9, 
   3.797786796458371*^9, 3.797787157052228*^9, 3.7978821282119656`*^9, 
   3.79792481475124*^9, 3.798285969970874*^9, 3.798324091288226*^9, 
   3.79836258761539*^9, 3.7983690454981008`*^9, 3.7983990210112867`*^9, 
   3.7985699598540225`*^9, 3.7988024412789335`*^9, 3.798980828186909*^9, 
   3.7989808745037603`*^9},
 CellLabel->
  "Out[199]=",ExpressionUUID->"76d2d98a-e098-46d6-9400-2888a9a8c9ab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Phi]", "[", 
     RowBox[{"2", ",", "B3"}], "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Series", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Product", "[", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"P", "[", "i", "]"}], "-", "1"}], " ", ")"}], "2"], 
               ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "l"}], "}"}]}], "]"}], 
             RowBox[{"factor", "[", "2", "]"}]}], "/.", "rep"}], ",", 
           RowBox[{"{", 
            RowBox[{"q", ",", "0", ",", "M"}], "}"}]}], "]"}], "//", 
         "FullSimplify"}], ")"}], "*", 
       RowBox[{"Product", "[", 
        RowBox[{
         RowBox[{"Reg", "[", 
          RowBox[{"P", "[", "i", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "l"}], "}"}]}], "]"}]}], "//", 
      "Normal"}], "//", "Expand"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.7941417225650373`*^9, 3.7941417279014835`*^9}, {
  3.794142194652727*^9, 3.794142196745507*^9}, {3.79543929240634*^9, 
  3.7954392927891245`*^9}, {3.797771725638048*^9, 3.797771726243291*^9}},
 CellLabel->
  "In[200]:=",ExpressionUUID->"3f5c48f3-95a4-45c0-a77a-67b06afff074"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"13.84375`", ",", "Null"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.794141734886797*^9, 3.794141822068038*^9, 3.7941422857722993`*^9, 
   3.794183167227047*^9, 3.7941832516812983`*^9, 3.7942299342397313`*^9, 
   3.7943326041987934`*^9, 3.7943332451811523`*^9, 3.794351487457419*^9, 
   3.7945759102211275`*^9, 3.7945768776213856`*^9, 3.794590766303435*^9, 
   3.7946622694267015`*^9, 3.7946626352239294`*^9, 3.7947004297083435`*^9, 
   3.795360774674157*^9, 3.7954389843442307`*^9, {3.795439297109413*^9, 
   3.795439320461974*^9}, 3.7957827743549623`*^9, 3.7958114878193088`*^9, 
   3.795862246709592*^9, 3.795864000162084*^9, 3.795893943789607*^9, 
   3.7959099173965273`*^9, 3.7959717423346424`*^9, 3.795979078719285*^9, 
   3.7959832090817366`*^9, 3.796040106339737*^9, 3.7960663765071125`*^9, 
   3.796068242343656*^9, 3.796116954080902*^9, 3.7961173519858465`*^9, 
   3.796148041688464*^9, 3.7961484412925434`*^9, 3.7961491572192707`*^9, 
   3.796165119077448*^9, 3.7961662458414636`*^9, 3.7962333333750496`*^9, 
   3.7962356667737255`*^9, 3.7963021590413933`*^9, 3.7963062829615498`*^9, 
   3.7963164878491516`*^9, 3.7963956340379286`*^9, 3.7977715605950537`*^9, 
   3.797771748755952*^9, 3.797785020806546*^9, 3.797786858062126*^9, 
   3.797787190529026*^9, 3.7978821723923836`*^9, 3.797924848894266*^9, 
   3.798286002046494*^9, 3.7983242114856772`*^9, 3.798362601679306*^9, 
   3.798369058060867*^9, 3.798399034094734*^9, 3.798569975362545*^9, 
   3.798802454797*^9, 3.7989808289972754`*^9, 3.798980888860037*^9},
 CellLabel->
  "Out[200]=",ExpressionUUID->"1199a541-c62f-49bb-b4d1-ee55ee122a8e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Phi]", "[", 
     RowBox[{"0", ",", "B3"}], "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Series", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Product", "[", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"P", "[", "i", "]"}], "-", "1"}], " ", ")"}], "2"], 
               ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "l"}], "}"}]}], "]"}], 
             RowBox[{"factor", "[", "0", "]"}]}], "/.", "rep"}], ",", 
           RowBox[{"{", 
            RowBox[{"q", ",", "0", ",", "M"}], "}"}]}], "]"}], "//", 
         "FullSimplify"}], ")"}], "*", 
       RowBox[{"Product", "[", 
        RowBox[{
         RowBox[{"Reg", "[", 
          RowBox[{"P", "[", "i", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "l"}], "}"}]}], "]"}]}], "//", 
      "Normal"}], "//", "Expand"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.794141806524453*^9, 3.79414180985026*^9}, {
  3.7941422005126333`*^9, 3.794142203256041*^9}, {3.7954392954355135`*^9, 
  3.795439296102984*^9}, {3.7957827993454857`*^9, 3.795782800645314*^9}, {
  3.797771722671671*^9, 3.7977717232683907`*^9}},
 CellLabel->
  "In[201]:=",ExpressionUUID->"8a1f9aec-1ad5-400e-bf62-c1e5e1b8de3e"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"29.796875`", ",", "Null"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->CompressedData["
1:eJwVzlsoQ3EABvB5OIUQWQljSVGm2GIxZCe3yeVBub7QZFpzeXBZEosJ5YUs
NOTakdAwRdixB6VIURvyYG1F5Agxaq7f/+Hr1/f0fVHK5pI6Lx6Pl4bcO8Mr
rdkcLdvrMhBn3uL0NrguDhsiCjVHFY8wcM/UGZHD0e+jrmPiynCyOQaWsL15
BrimYa3ECX334CS8ODC2sNDjVTtH1NUN8M9hYNuJPjiPoxnBuzkVVl9qr4iM
zH1DrOpfGHFC8Y+P8RlG74fWeCs42mGk0nzgy2HkdQisOGYYIVycSrFnkD50
p6Yhs5XelAUlklZpNZxI9/VvgMOlBW6iheLYPqhc/3gmCjZF3Cgs66AiDXBZ
p9YS30y3iikot/fYiK268XELDLL/7rCwVKhKckDFBl/qhL0Sg/gO8j0pF375
2FVr1lYLOLpdPWshfudbM80wsbNFtAWlVdvFRJdpesMFEx7k/Z9Q/kfdLBXi
v6BxchfmBuTKT2G8trz+DM53iHwd0P/1qUdSxNGqzTFqEVKe3fAvmLycHUv8
Bx017bU=
  "],
 CellLabel->
  "Out[201]=",ExpressionUUID->"deb15b69-d0d0-4eff-b339-06f89de8804c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["A-series modular forms", "Subsection",
 CellChangeTimes->{{3.7897097101240087`*^9, 3.7897097253688164`*^9}, {
  3.7897134609611516`*^9, 3.78971346156332*^9}, {3.7897261910648637`*^9, 
  3.7897261941376457`*^9}, {3.7977716215547237`*^9, 
  3.7977716253788843`*^9}},ExpressionUUID->"186090a5-da19-4127-ad4f-\
4cc85db29ee3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"diff", "[", 
   RowBox[{"f_", ",", "l_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"P", "[", "k", "]"}], 
      RowBox[{
       SubscriptBox["\[PartialD]", 
        RowBox[{"P", "[", "k", "]"}]], "f"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", 
       RowBox[{"l", "+", "1"}]}], "}"}]}], "]"}], "-", 
   RowBox[{
    FractionBox["1", "12"], 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{"Log", "[", 
       RowBox[{"P", "[", "k", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", 
        RowBox[{"l", "+", "1"}]}], "}"}]}], "]"}], "Ei2", " ", 
    "f"}]}]}]], "Input",
 CellChangeTimes->{{3.7898119089564524`*^9, 3.78981191471819*^9}, {
   3.789811975872239*^9, 3.7898119834159403`*^9}, {3.789812250873042*^9, 
   3.7898122574539413`*^9}, {3.7898185376879168`*^9, 
   3.7898185495889416`*^9}, {3.7898187250741296`*^9, 3.789818738022477*^9}, {
   3.789819461180566*^9, 3.7898194939460783`*^9}, {3.7898196885512104`*^9, 
   3.7898196916068125`*^9}, {3.789819867389187*^9, 3.789819868827628*^9}, {
   3.789822970422552*^9, 3.7898230008420277`*^9}, {3.78982427599663*^9, 
   3.789824280034149*^9}, {3.789824523927459*^9, 3.789824532000165*^9}, {
   3.789883771257346*^9, 3.789883774998184*^9}, {3.789884319425312*^9, 
   3.789884320597193*^9}, 3.789887291857546*^9},
 CellLabel->
  "In[202]:=",ExpressionUUID->"3097121f-359f-40a1-af3d-0ba6b3afb5c3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rep1", "[", "l_", "]"}], ":=", 
  RowBox[{
   RowBox[{"P", "[", 
    RowBox[{"l", "+", "1"}], "]"}], "\[Rule]", 
   RowBox[{"Product", "[", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"P", "[", "i", "]"}], 
      RowBox[{"-", "1"}]], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "l"}], "}"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rep2", "[", "l_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Log", "[", 
    RowBox[{"Product", "[", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"P", "[", "i", "]"}], 
       RowBox[{"-", "1"}]], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "l"}], "}"}]}], "]"}], "]"}], "\[Rule]", 
   " ", 
   RowBox[{"-", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{"Log", "[", 
       RowBox[{"P", "[", "i", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "l"}], "}"}]}], "]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.7897264693480425`*^9, 3.7897264752074223`*^9}, 
   3.789819759186618*^9, {3.793625678861812*^9, 3.7936258381793346`*^9}, {
   3.7936259115794697`*^9, 3.7936259357790036`*^9}},
 CellLabel->
  "In[203]:=",ExpressionUUID->"a9d7e334-6954-494c-80c7-47b5a7b9cb23"],

Cell[CellGroupData[{

Cell["A1", "Subsubsection",
 CellChangeTimes->{{3.7897262216969414`*^9, 
  3.789726222052989*^9}},ExpressionUUID->"a7df0650-8f3d-4b3e-8651-\
14df88883001"],

Cell[BoxData[
 RowBox[{
  RowBox[{"l", "=", "1"}], ";"}]], "Input",
 CellChangeTimes->{{3.789726252964321*^9, 3.7897262533991585`*^9}, 
   3.7897266156898394`*^9},
 CellLabel->
  "In[205]:=",ExpressionUUID->"50766383-b06f-4777-ab4b-a5e2a94ca888"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]u", "[", 
    RowBox[{
     RowBox[{"l", "+", "1"}], ",", "A1"}], "]"}], "=", 
   RowBox[{
    RowBox[{"Product", "[", 
     RowBox[{
      RowBox[{"\[Alpha]", "[", 
       RowBox[{"P", "[", "i", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"l", "+", "1"}]}], "}"}]}], "]"}], "//", "Simplify"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7897099492418566`*^9, 3.7897099762692847`*^9}, {
   3.7897101682985377`*^9, 3.789710261689785*^9}, {3.7897107149606795`*^9, 
   3.789710717039668*^9}, {3.789713487460363*^9, 3.78971351782203*^9}, {
   3.789713566172775*^9, 3.789713569899396*^9}, {3.78971361066564*^9, 
   3.789713615201931*^9}, 3.789713669736964*^9, {3.789713807423422*^9, 
   3.789713821116544*^9}, {3.7897141489272833`*^9, 3.789714156073577*^9}, {
   3.7897262714000173`*^9, 3.78972631150177*^9}, {3.7898125244022155`*^9, 
   3.7898125750430236`*^9}, 3.789883775966999*^9, {3.789883886303316*^9, 
   3.7898838881472063`*^9}, 3.789883950766266*^9, 3.789884321362917*^9},
 CellLabel->
  "In[206]:=",ExpressionUUID->"60786792-a2b0-4151-8a7c-88dca870a892"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Phi]u", "[", 
   RowBox[{"k_", ",", "A1"}], "]"}], ":=", 
  RowBox[{"Expand", "/@", 
   RowBox[{"diff", "[", 
    RowBox[{
     RowBox[{"\[Phi]u", "[", 
      RowBox[{
       RowBox[{"k", "+", "1"}], ",", "A1"}], "]"}], ",", "l"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.789726490575274*^9, 3.789726493288019*^9}, {
  3.789811995993467*^9, 3.7898120024198575`*^9}, {3.7898123372591267`*^9, 
  3.7898123640721755`*^9}, {3.789812520191003*^9, 3.7898125213456397`*^9}, {
  3.789812557451644*^9, 3.7898125853205814`*^9}, {3.7898126298867764`*^9, 
  3.7898126307414885`*^9}, {3.7898142538574142`*^9, 3.789814272019907*^9}, {
  3.789883948357815*^9, 3.7898839550634136`*^9}},
 CellLabel->
  "In[207]:=",ExpressionUUID->"c2e0f317-7c61-4506-b802-c65453b07ac9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]", "[", 
    RowBox[{"2", ",", "A1"}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Expand", "/@", 
       RowBox[{"\[Phi]u", "[", 
        RowBox[{"2", ",", "A1"}], "]"}]}], "/.", 
      RowBox[{"rep1", "[", "l", "]"}]}], "/.", 
     RowBox[{"rep2", "[", "l", "]"}]}], "/.", 
    RowBox[{
     RowBox[{"P", "[", "1", "]"}], "\[Rule]", "X"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]", "[", 
    RowBox[{"0", ",", "A1"}], "]"}], "=", 
   RowBox[{"Expand", "/@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]u", "[", 
          RowBox[{"0", ",", "A1"}], "]"}], "/.", 
         RowBox[{"rep1", "[", "l", "]"}]}], "/.", 
        RowBox[{"rep2", "[", "l", "]"}]}], "/.", 
       RowBox[{
        RowBox[{"P", "[", "1", "]"}], "\[Rule]", "X"}]}], "//", "Simplify"}], 
     ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.789709743926112*^9, 3.7897098080722485`*^9}, {
  3.789709874542262*^9, 3.7897099244357195`*^9}, {3.7897134799789643`*^9, 
  3.7897134853826275`*^9}, {3.7897136368504596`*^9, 3.7897136558838215`*^9}, {
  3.7897263689296412`*^9, 3.789726450622163*^9}, {3.7897265456158466`*^9, 
  3.78972657153281*^9}, {3.7898116164006653`*^9, 3.7898116852752285`*^9}, {
  3.789812341657152*^9, 3.789812343151528*^9}, {3.789812406385176*^9, 
  3.789812429392685*^9}, {3.789814664302258*^9, 3.7898146750684247`*^9}, {
  3.78988393883037*^9, 3.7898839600623703`*^9}, {3.7935799011341114`*^9, 
  3.7935799039039726`*^9}, {3.7936259466666765`*^9, 3.793625982635435*^9}, {
  3.7977815314086933`*^9, 3.7977815344273167`*^9}, {3.7988024106730213`*^9, 
  3.7988024253260384`*^9}},
 CellLabel->
  "In[208]:=",ExpressionUUID->"85b2ad65-ebcf-4905-805d-b939cd75232f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["A2", "Subsubsection",
 CellChangeTimes->{{3.7897265889957743`*^9, 
  3.7897265942826385`*^9}},ExpressionUUID->"5c82343d-9569-40b9-a2cc-\
dc1eacb47695"],

Cell[BoxData[
 RowBox[{
  RowBox[{"l", "=", "2"}], ";"}]], "Input",
 CellChangeTimes->{{3.789726252964321*^9, 3.7897262533991585`*^9}, 
   3.7897266156898394`*^9, {3.7898144404233627`*^9, 3.7898144405330706`*^9}},
 CellLabel->
  "In[210]:=",ExpressionUUID->"8331dab0-7f6c-47ab-a50c-2b413a2842de"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]u", "[", 
    RowBox[{
     RowBox[{"l", "+", "1"}], ",", "A2"}], "]"}], "=", 
   RowBox[{
    RowBox[{"Product", "[", 
     RowBox[{
      RowBox[{"\[Alpha]", "[", 
       RowBox[{"P", "[", "i", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"l", "+", "1"}]}], "}"}]}], "]"}], "//", "Simplify"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7897099492418566`*^9, 3.7897099762692847`*^9}, {
   3.7897101682985377`*^9, 3.789710261689785*^9}, {3.7897107149606795`*^9, 
   3.789710717039668*^9}, {3.789713487460363*^9, 3.78971351782203*^9}, {
   3.789713566172775*^9, 3.789713569899396*^9}, {3.78971361066564*^9, 
   3.789713615201931*^9}, 3.789713669736964*^9, {3.789713807423422*^9, 
   3.789713821116544*^9}, {3.7897141489272833`*^9, 3.789714156073577*^9}, {
   3.7897262714000173`*^9, 3.78972631150177*^9}, {3.7898125244022155`*^9, 
   3.7898125750430236`*^9}, 3.7898837785634604`*^9, {3.789883915891221*^9, 
   3.789883916814119*^9}, 3.789884323612956*^9},
 CellLabel->
  "In[211]:=",ExpressionUUID->"2bd47906-f169-4038-ba38-e6354db6afd4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Phi]u", "[", 
   RowBox[{"k_", ",", "A2"}], "]"}], ":=", 
  RowBox[{"Expand", "/@", 
   RowBox[{"diff", "[", 
    RowBox[{
     RowBox[{"\[Phi]u", "[", 
      RowBox[{
       RowBox[{"k", "+", "1"}], ",", "A2"}], "]"}], ",", "l"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.789726490575274*^9, 3.789726493288019*^9}, {
  3.789811995993467*^9, 3.7898120024198575`*^9}, {3.7898123372591267`*^9, 
  3.7898123640721755`*^9}, {3.789812520191003*^9, 3.7898125213456397`*^9}, {
  3.789812557451644*^9, 3.7898125853205814`*^9}, {3.7898126298867764`*^9, 
  3.7898126307414885`*^9}, {3.7898142538574142`*^9, 3.789814272019907*^9}, {
  3.789883919947117*^9, 3.7898839219471035`*^9}, {3.7898839643280535`*^9, 
  3.7898839652656174`*^9}, {3.793625668521515*^9, 3.7936256738609304`*^9}},
 CellLabel->
  "In[212]:=",ExpressionUUID->"09a124f8-ab3c-4fc6-b1dc-4d1c18d97946"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]", "[", 
    RowBox[{"3", ",", "A2"}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Expand", "/@", 
      RowBox[{"\[Phi]u", "[", 
       RowBox[{"3", ",", "A2"}], "]"}]}], "/.", 
     RowBox[{"rep1", "[", "l", "]"}]}], "/.", 
    RowBox[{"rep2", "[", "l", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.789709743926112*^9, 3.7897098080722485`*^9}, {
   3.789709874542262*^9, 3.7897099244357195`*^9}, {3.7897134799789643`*^9, 
   3.7897134853826275`*^9}, {3.7897136368504596`*^9, 
   3.7897136558838215`*^9}, {3.7897263689296412`*^9, 3.789726450622163*^9}, {
   3.7897265456158466`*^9, 3.78972657153281*^9}, {3.7897266901636276`*^9, 
   3.7897267516061754`*^9}, {3.7898139400337706`*^9, 3.7898139459658656`*^9}, 
   3.789814556018219*^9, {3.7898839273716507`*^9, 3.7898839293717413`*^9}, 
   3.7898839725491543`*^9, 3.793579877913932*^9, 3.7936260173249755`*^9},
 CellLabel->
  "In[213]:=",ExpressionUUID->"49ac34c4-124d-4cee-960a-77feb2d55bd6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]", "[", 
    RowBox[{"2", ",", "A2"}], "]"}], "=", 
   RowBox[{"Expand", "/@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[Phi]u", "[", 
         RowBox[{"2", ",", "A2"}], "]"}], "/.", 
        RowBox[{"rep1", "[", "l", "]"}]}], "/.", 
       RowBox[{"rep2", "[", "l", "]"}]}], "//", "Simplify"}], ")"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7898139489369197`*^9, 3.7898139492860284`*^9}, {
   3.7898144892777076`*^9, 3.789814494268403*^9}, 3.7898145586193104`*^9, 
   3.789883934080138*^9, {3.7898839743771267`*^9, 3.789883975189726*^9}, 
   3.793579882503956*^9, 3.79362601937904*^9},
 CellLabel->
  "In[214]:=",ExpressionUUID->"7b7c7047-bd54-4cb1-a107-2fb23e7bf824"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Phi]", "[", 
     RowBox[{"0", ",", "A2"}], "]"}], "=", 
    RowBox[{"Expand", "/@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]u", "[", 
          RowBox[{"0", ",", "A2"}], "]"}], "/.", 
         RowBox[{"rep1", "[", "l", "]"}]}], "/.", 
        RowBox[{"rep2", "[", "l", "]"}]}], "//", "Simplify"}], ")"}]}]}], 
   ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "This", " ", "one", " ", "takes", " ", "a", " ", "couple", " ", "seconds",
      " ", "for", " ", "M"}], "=", "5"}], "*)"}]}]], "Input",
 CellChangeTimes->{
  3.7898140372617073`*^9, {3.7898145028893046`*^9, 3.7898145074251766`*^9}, {
   3.789814561433736*^9, 3.7898146020257664`*^9}, 3.789883936157775*^9, {
   3.7898839775817547`*^9, 3.789883978862978*^9}, 3.793579885224045*^9, 
   3.7936260217413616`*^9},
 CellLabel->
  "In[215]:=",ExpressionUUID->"111421dc-6e2d-4c9f-98ee-b83f7a0bcc9d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["G2 modular forms", "Subsection",
 CellChangeTimes->{{3.7897267991636863`*^9, 3.789726799406065*^9}, {
  3.7977716567400646`*^9, 
  3.7977716607629004`*^9}},ExpressionUUID->"3b770d73-4298-438c-9c91-\
da65cf5443d9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]", "[", 
    RowBox[{"6", ",", "G2"}], "]"}], "=", 
   RowBox[{"Expand", "/@", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"\[Phi]", "[", 
        RowBox[{"3", ",", "A2"}], "]"}], "2"], "//", "Simplify"}], ")"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.789726810497405*^9, 3.789726814828782*^9}, {
   3.789726869070759*^9, 3.7897269164210157`*^9}, 3.789727007626886*^9, {
   3.7898839877031145`*^9, 3.7898840077153864`*^9}},
 CellLabel->
  "In[216]:=",ExpressionUUID->"fd033746-4e7c-479f-b681-adbb9d6ccb7d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]", "[", 
    RowBox[{"2", ",", "G2"}], "]"}], "=", 
   RowBox[{"\[Phi]", "[", 
    RowBox[{"2", ",", "A2"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.789727013926999*^9, 3.789727057101574*^9}, 
   3.789814544529943*^9, {3.789883989812569*^9, 3.7898840039182453`*^9}},
 CellLabel->
  "In[217]:=",ExpressionUUID->"b4f0c7cc-31e5-4e53-a771-0dc4909a4e7c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]", "[", 
    RowBox[{"0", ",", "G2"}], "]"}], "=", 
   RowBox[{"\[Phi]", "[", 
    RowBox[{"0", ",", "A2"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7897270478752456`*^9, 3.789727050105237*^9}, 
   3.789814548504356*^9, {3.789883991437521*^9, 3.7898839952659245`*^9}},
 CellLabel->
  "In[218]:=",ExpressionUUID->"713fddf3-877c-40a0-8ff1-0446b6ad4823"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Xhat construction", "Chapter",
 CellChangeTimes->{{3.79535314996033*^9, 
  3.795353153503992*^9}},ExpressionUUID->"ac8438c8-6785-47b2-b247-\
82e804611e17"],

Cell[CellGroupData[{

Cell["Def", "Subsection",
 CellChangeTimes->{{3.795894016898701*^9, 
  3.7958940214831634`*^9}},ExpressionUUID->"7c9c4480-fb29-413d-befa-\
d51337e83cd9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"x", "[", "0", "]"}], "=", "1"}], ";"}]], "Input",
 CellChangeTimes->{{3.7952834091291456`*^9, 3.79528345561058*^9}, 
   3.795364337858616*^9},
 CellLabel->"In[78]:=",ExpressionUUID->"5dfa60f1-7534-4604-82d4-e243e19b8e92"],

Cell[BoxData[
 RowBox[{
  RowBox[{"s", "[", 
   RowBox[{"a_", ",", "x_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"x", "\[Equal]", 
     RowBox[{"P", "[", "a", "]"}]}], ",", 
    SuperscriptBox["x", 
     RowBox[{"-", "1"}]], ",", "x", ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7952837274350076`*^9, 3.7952838303280363`*^9}, {
  3.795284461096093*^9, 3.7952844614302025`*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"b3ca3cb3-c04b-4e4a-8e1e-0f9ad35a7b7b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"P", "[", "4", "]"}], "=", 
   FractionBox["1", 
    RowBox[{"P", "[", "1", "]"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"P", "[", "5", "]"}], "=", 
   FractionBox["1", 
    RowBox[{"P", "[", "2", "]"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"P", "[", "6", "]"}], "=", 
   FractionBox["1", 
    RowBox[{"P", "[", "3", "]"}]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7952849578876762`*^9, 3.7952850089016247`*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"e9b34301-9f1b-479c-ba5f-167062a9c3e3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "[", "1", "]"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["1", "360"], 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"P", "[", "##", "]"}], "&"}], "/@", 
         RowBox[{"PermutationReplace", "[", 
          RowBox[{"1", ",", 
           RowBox[{"GroupElements", "[", 
            RowBox[{"SymmetricGroup", "[", "6", "]"}], "]"}]}], "]"}]}], 
        ")"}], ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "1", ",", "3"}], "}"}]}], "]"}]}], "//", 
    "Flatten"}], "//", "Total"}]}]], "Input",
 CellChangeTimes->{{3.7952832370900574`*^9, 3.7952834048703547`*^9}, {
   3.79528384233136*^9, 3.795283915982526*^9}, 3.7952842735101347`*^9, {
   3.7952843407220335`*^9, 3.7952843439379306`*^9}, {3.7952844545406356`*^9, 
   3.7952844770028443`*^9}, {3.7952850131981096`*^9, 
   3.7952850323146667`*^9}, {3.7952942675459156`*^9, 3.795294267826168*^9}, {
   3.795294298018855*^9, 3.795294298118588*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"86eb44c5-4696-43fd-8c73-79ae495d56d2"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"P", "(", "1", ")"}], "+", 
   RowBox[{"P", "(", "2", ")"}], "+", 
   RowBox[{"P", "(", "3", ")"}], "+", 
   FractionBox["1", 
    RowBox[{"P", "(", "2", ")"}]], "+", 
   FractionBox["1", 
    RowBox[{"P", "(", "3", ")"}]], "+", 
   FractionBox["1", 
    RowBox[{"P", "(", "1", ")"}]]}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.795284464756775*^9, 3.7952844776221905`*^9}, {
   3.795285025370265*^9, 3.7952850334127684`*^9}, 3.795285161492565*^9, {
   3.7952942824442873`*^9, 3.7952943064300504`*^9}, 3.795353158403761*^9, 
   3.795353425852822*^9, 3.795363276950274*^9, 3.795438231001341*^9, 
   3.7954391476083097`*^9, 3.7954393659537573`*^9, 3.7957830051997833`*^9, 
   3.795811554965021*^9, 3.795862282927891*^9, 3.79586402597008*^9, 
   3.7958939882364674`*^9, 3.795894027436037*^9, 3.7959099438529425`*^9, 
   3.7959744439334135`*^9, 3.79597909088774*^9, 3.7959832201043215`*^9, 
   3.7960401177933674`*^9, 3.7960666797308655`*^9, 3.7960682823019276`*^9, 
   3.7961174096362133`*^9, 3.7961479176345425`*^9, 3.796148080131566*^9, 
   3.7961484906326513`*^9, 3.7961491795426006`*^9, 3.796165216916929*^9, 
   3.796166325508421*^9, 3.7962334234535837`*^9, 3.7962357343160954`*^9, 
   3.7963022667343597`*^9, 3.7963058631660156`*^9, 3.7963165615780163`*^9, 
   3.7963177322011003`*^9, 3.7963179804191713`*^9, 3.796319152518029*^9, 
   3.7963956981750107`*^9, 3.797771857016911*^9, 3.7977719363149953`*^9, 
   3.797785097282033*^9, 3.7977869830996094`*^9, 3.7977872652608*^9, 
   3.797882269324147*^9, 3.7979249242295914`*^9, 3.7982860746088505`*^9, 
   3.798399064373432*^9, 3.798570006936353*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"09eedfb9-d7e6-48cc-8273-bdee14bdb649"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "[", "2", "]"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["1", "144"], 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"P", "[", 
            RowBox[{"##", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], 
           RowBox[{"P", "[", 
            RowBox[{"##", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "&"}], "/@", 
         RowBox[{"PermutationReplace", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}], ",", 
           RowBox[{"GroupElements", "[", 
            RowBox[{"SymmetricGroup", "[", "6", "]"}], "]"}]}], "]"}]}], 
        ")"}], ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "1", ",", "3"}], "}"}]}], "]"}]}], "//", 
    "Flatten"}], "//", "Total"}]}]], "Input",
 CellChangeTimes->{{3.795283479039873*^9, 3.795283560471936*^9}, {
  3.7952842631606865`*^9, 3.7952843030477962`*^9}, {3.7952844929436255`*^9, 
  3.795284557683798*^9}, {3.795285052612519*^9, 3.7952850819188366`*^9}, {
  3.7952851257464266`*^9, 3.7952851742284822`*^9}, {3.7952942858636827`*^9, 
  3.7952943008667088`*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"52d18a60-c15c-4de8-a805-7f4060eef4ae"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"P", "(", "2", ")"}], " ", 
    RowBox[{"P", "(", "1", ")"}]}], "+", 
   RowBox[{
    RowBox[{"P", "(", "3", ")"}], " ", 
    RowBox[{"P", "(", "1", ")"}]}], "+", 
   FractionBox[
    RowBox[{"P", "(", "1", ")"}], 
    RowBox[{"P", "(", "2", ")"}]], "+", 
   FractionBox[
    RowBox[{"P", "(", "1", ")"}], 
    RowBox[{"P", "(", "3", ")"}]], "+", 
   RowBox[{
    RowBox[{"P", "(", "2", ")"}], " ", 
    RowBox[{"P", "(", "3", ")"}]}], "+", 
   FractionBox[
    RowBox[{"P", "(", "3", ")"}], 
    RowBox[{"P", "(", "2", ")"}]], "+", 
   FractionBox[
    RowBox[{"P", "(", "2", ")"}], 
    RowBox[{"P", "(", "3", ")"}]], "+", 
   FractionBox["1", 
    RowBox[{
     RowBox[{"P", "(", "2", ")"}], " ", 
     RowBox[{"P", "(", "3", ")"}]}]], "+", 
   FractionBox[
    RowBox[{"P", "(", "2", ")"}], 
    RowBox[{"P", "(", "1", ")"}]], "+", 
   FractionBox[
    RowBox[{"P", "(", "3", ")"}], 
    RowBox[{"P", "(", "1", ")"}]], "+", 
   FractionBox["1", 
    RowBox[{
     RowBox[{"P", "(", "2", ")"}], " ", 
     RowBox[{"P", "(", "1", ")"}]}]], "+", 
   FractionBox["1", 
    RowBox[{
     RowBox[{"P", "(", "3", ")"}], " ", 
     RowBox[{"P", "(", "1", ")"}]}]], "+", "3"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.7952833461339073`*^9, 3.7952834063045173`*^9}, 
   3.7952835624561806`*^9, 3.795284264759343*^9, {3.7952845371798334`*^9, 
   3.7952845580079737`*^9}, {3.795285060698544*^9, 3.7952850829816675`*^9}, {
   3.795285126585672*^9, 3.7952851745605955`*^9}, {3.795294277191156*^9, 
   3.7952943012975454`*^9}, 3.795353160913661*^9, 3.7953534274725447`*^9, 
   3.795363277125188*^9, 3.7954382312370696`*^9, 3.795439147827396*^9, 
   3.795439366214302*^9, 3.795783006624654*^9, 3.79581155515244*^9, 
   3.795862283135335*^9, 3.7958640261360865`*^9, 3.7958939885209656`*^9, 
   3.795894027646276*^9, 3.7959099441185284`*^9, 3.7959744443402057`*^9, 
   3.795979091154751*^9, 3.7959832204031067`*^9, 3.796040118015441*^9, 
   3.796066679976989*^9, 3.7960682825427475`*^9, 3.796117409845477*^9, 
   3.7961479179237447`*^9, 3.79614808034367*^9, 3.79614849088319*^9, 
   3.7961491797105055`*^9, 3.796165217112916*^9, 3.7961663256849537`*^9, 
   3.7962334236862907`*^9, 3.7962357345255346`*^9, 3.7963022670153065`*^9, 
   3.796305863420515*^9, 3.7963165618248973`*^9, 3.7963177324231825`*^9, 
   3.796317980706919*^9, 3.7963191527851615`*^9, 3.7963956985190325`*^9, 
   3.797771857270234*^9, 3.797771936486178*^9, 3.797785097510634*^9, 
   3.797786983259182*^9, 3.7977872654303446`*^9, 3.797882269675208*^9, 
   3.797924924399124*^9, 3.798286074768177*^9, 3.7983990645469847`*^9, 
   3.7985700072461452`*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"cc803be4-cf3e-4a74-91cf-3de755cd8e60"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "[", "3", "]"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["1", "108"], 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"P", "[", 
            RowBox[{"##", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], 
           RowBox[{"P", "[", 
            RowBox[{"##", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], 
           RowBox[{"P", "[", 
            RowBox[{"##", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "]"}]}], "&"}], "/@", 
         RowBox[{"PermutationReplace", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
           RowBox[{"GroupElements", "[", 
            RowBox[{"SymmetricGroup", "[", "6", "]"}], "]"}]}], "]"}]}], 
        ")"}], ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "1", ",", "3"}], "}"}]}], "]"}]}], "//", 
    "Flatten"}], "//", "Total"}]}]], "Input",
 CellChangeTimes->{{3.7952943534644685`*^9, 3.795294396611611*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"559b9675-f66c-4f0a-ba7e-5da354820f06"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"P", "(", "2", ")"}], " ", 
    RowBox[{"P", "(", "3", ")"}], " ", 
    RowBox[{"P", "(", "1", ")"}]}], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"P", "(", "3", ")"}], " ", 
     RowBox[{"P", "(", "1", ")"}]}], 
    RowBox[{"P", "(", "2", ")"}]], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"P", "(", "2", ")"}], " ", 
     RowBox[{"P", "(", "1", ")"}]}], 
    RowBox[{"P", "(", "3", ")"}]], "+", 
   FractionBox[
    RowBox[{"P", "(", "1", ")"}], 
    RowBox[{
     RowBox[{"P", "(", "2", ")"}], " ", 
     RowBox[{"P", "(", "3", ")"}]}]], "+", 
   RowBox[{"2", " ", 
    RowBox[{"P", "(", "1", ")"}]}], "+", 
   RowBox[{"2", " ", 
    RowBox[{"P", "(", "2", ")"}]}], "+", 
   RowBox[{"2", " ", 
    RowBox[{"P", "(", "3", ")"}]}], "+", 
   FractionBox["2", 
    RowBox[{"P", "(", "2", ")"}]], "+", 
   FractionBox["2", 
    RowBox[{"P", "(", "3", ")"}]], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"P", "(", "2", ")"}], " ", 
     RowBox[{"P", "(", "3", ")"}]}], 
    RowBox[{"P", "(", "1", ")"}]], "+", 
   FractionBox[
    RowBox[{"P", "(", "3", ")"}], 
    RowBox[{
     RowBox[{"P", "(", "2", ")"}], " ", 
     RowBox[{"P", "(", "1", ")"}]}]], "+", 
   FractionBox[
    RowBox[{"P", "(", "2", ")"}], 
    RowBox[{
     RowBox[{"P", "(", "3", ")"}], " ", 
     RowBox[{"P", "(", "1", ")"}]}]], "+", 
   FractionBox["1", 
    RowBox[{
     RowBox[{"P", "(", "2", ")"}], " ", 
     RowBox[{"P", "(", "3", ")"}], " ", 
     RowBox[{"P", "(", "1", ")"}]}]], "+", 
   FractionBox["2", 
    RowBox[{"P", "(", "1", ")"}]]}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.7952943909241953`*^9, 3.795294397231229*^9}, 
   3.795353163180441*^9, {3.795353429023543*^9, 3.7953534390529327`*^9}, 
   3.79536327731022*^9, 3.79543823145317*^9, 3.7954391480496483`*^9, 
   3.7954393666752353`*^9, 3.795783008084648*^9, 3.7958115603475065`*^9, 
   3.7958622833409615`*^9, 3.795864026315151*^9, 3.7958939888431444`*^9, 
   3.7958940278710146`*^9, 3.7959099443840704`*^9, 3.795974444684595*^9, 
   3.7959790914291296`*^9, 3.795983220806365*^9, 3.7960401182534237`*^9, 
   3.796066680311804*^9, 3.7960682827942667`*^9, 3.7961174100660143`*^9, 
   3.796147918142783*^9, 3.7961480805624137`*^9, 3.7961484911213913`*^9, 
   3.7961491798765917`*^9, 3.7961652173083987`*^9, 3.7961663258615046`*^9, 
   3.7962334239021907`*^9, 3.796235734730985*^9, 3.7963022672754383`*^9, 
   3.796305863686736*^9, 3.7963165620760565`*^9, 3.7963177326610737`*^9, 
   3.796317981001854*^9, 3.796319153057612*^9, 3.7963956987947836`*^9, 
   3.79777185751857*^9, 3.7977719366604013`*^9, 3.797785098078129*^9, 
   3.7977869835628805`*^9, 3.797787266088832*^9, 3.7978822699772224`*^9, 
   3.7979249245946064`*^9, 3.7982860749738092`*^9, 3.798399064717529*^9, 
   3.7985700075696564`*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"5f91444e-9afb-4676-b7b1-7881351e32df"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Expansion of Jacobi Forms.", "Subsection",
 CellChangeTimes->{{3.795364367024371*^9, 3.7953643785439634`*^9}, {
  3.795783040425198*^9, 
  3.795783046427886*^9}},ExpressionUUID->"7edcd012-27a2-4303-9174-\
bb660b51411b"],

Cell[CellGroupData[{

Cell["Solving", "Subsubsection",
 CellChangeTimes->{{3.7961485002058506`*^9, 
  3.796148501430663*^9}},ExpressionUUID->"cbf3f9c9-8126-4801-ae79-\
0d743e72a8e1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Pol", "[", 
   RowBox[{"label_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"Total", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"a", "[", 
        RowBox[{"label", ",", "#"}], "]"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"Times", "@@", 
        SuperscriptBox[
         RowBox[{"Array", "[", 
          RowBox[{"y", ",", "4", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "3"}], "}"}]}], "]"}], "#"]}], ")"}]}], "&"}], "/@", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Permutations", "/@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{"#", ",", 
            RowBox[{"Table", "[", 
             RowBox[{"0", ",", 
              RowBox[{"4", "-", 
               RowBox[{"Length", "[", "#", "]"}]}]}], "]"}]}], "]"}], "&"}], "/@", 
         RowBox[{"IntegerPartitions", "[", 
          RowBox[{"n", ",", "4"}], "]"}]}], ")"}]}], ",", "1"}], "]"}]}], 
   "]"}], 
  RowBox[{"(*", 
   RowBox[{"General", " ", "polynomial", " ", "of", " ", "degree", " ", "n"}],
    "*)"}]}]], "Input",
 CellChangeTimes->{{3.7958138641114187`*^9, 3.795813881117652*^9}, {
  3.795814264626257*^9, 3.7958142682878795`*^9}, {3.795862668172447*^9, 
  3.7958628300589523`*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"5121e753-2f6d-4194-8872-f99472d4f77a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"yxRep", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{
     RowBox[{"Array", "[", 
      RowBox[{"y", ",", "4", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "3"}], "}"}]}], "]"}], "\[Rule]", 
     RowBox[{"Array", "[", 
      RowBox[{"x", ",", "4", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "3"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Replacement", " ", "from", " ", "the", " ", "formal", " ", "variable", 
    " ", "y", " ", "to", " ", "the", " ", "variables", " ", "x"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7958139041640124`*^9, 3.7958139296880693`*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"e269937a-5a2f-4445-9dab-918718793e1d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"fac", "=", 
    RowBox[{
     RowBox[{"P", "[", "1", "]"}], 
     RowBox[{"P", "[", "2", "]"}], 
     RowBox[{"P", "[", "3", "]"}]}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "factor", " ", "is", " ", "so", " ", "the", " ", "expression",
     " ", "becomes", " ", "a", " ", "polynomial", " ", "and", " ", 
    "CoefficientRules", " ", "works", " ", "as", " ", "it", " ", "should"}], 
   " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7952926019083033`*^9, 3.7952926157649593`*^9}, {
  3.7957832124152775`*^9, 3.7957832496450377`*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"f746da54-015b-4634-8690-5af162951038"],

Cell[BoxData[
 RowBox[{"Clear", "[", "co", "]"}]], "Input",
 CellChangeTimes->{{3.7958146133600583`*^9, 3.795814616337365*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"86e6b759-9e2d-4df3-ab40-ed2c7a55fa80"]
}, Open  ]],

Cell[CellGroupData[{

Cell["B3", "Subsubsection",
 CellChangeTimes->{{3.797771988715392*^9, 
  3.797771991116045*^9}},ExpressionUUID->"8ddf9884-f88a-458e-85ea-\
1ff959fb807a"],

Cell[BoxData[
 RowBox[{"Monitor", "[", 
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"level", "=", "0"}], ",", 
     RowBox[{"level", "\[LessEqual]", " ", "M"}], ",", 
     RowBox[{"level", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"form", "=", "0"}], ",", 
       RowBox[{"form", "\[LessEqual]", " ", "6"}], ",", 
       RowBox[{"form", "=", 
        RowBox[{"form", "+", "2"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]Expansion", "[", 
          RowBox[{"level", ",", "form", ",", "B3"}], "]"}], "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"level", "\[Equal]", "0"}], ",", 
           RowBox[{
            RowBox[{"\[Phi]", "[", 
             RowBox[{"form", ",", "B3"}], "]"}], "/.", 
            RowBox[{"q", "\[Rule]", "0"}]}], ",", 
           RowBox[{"Coefficient", "[", 
            RowBox[{
             RowBox[{"\[Phi]", "[", 
              RowBox[{"form", ",", "B3"}], "]"}], ",", 
             RowBox[{"q", "^", "level"}]}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"co", "[", 
          RowBox[{"level", ",", "form", ",", "B3"}], "]"}], "=", 
         RowBox[{
          RowBox[{"Solve", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"CoefficientRules", "[", 
              RowBox[{
               RowBox[{
                SuperscriptBox["fac", 
                 RowBox[{"level", "+", "1"}]], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"\[Phi]Expansion", "[", 
                    RowBox[{"level", ",", "form", ",", "B3"}], "]"}], "-", 
                   RowBox[{"Pol", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"form", ",", "B3"}], "}"}], ",", 
                    RowBox[{"level", "+", "1"}]}], "]"}]}], "/.", "yxRep"}], 
                 ")"}]}], ",", "PP"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}], "\[Equal]", "0"}], 
           "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
      "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"level", ",", "form"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7958139581378126`*^9, 3.795814276338502*^9}, {
   3.7958143181608353`*^9, 3.7958143219574285`*^9}, {3.7958143875830193`*^9, 
   3.7958143882413588`*^9}, {3.795814476538005*^9, 3.795814479318101*^9}, {
   3.795814621847932*^9, 3.795814622637867*^9}, {3.796066690501752*^9, 
   3.796066692481369*^9}, {3.7961485472835817`*^9, 3.796148558035349*^9}, {
   3.7961499142810044`*^9, 3.7961499157995834`*^9}, 3.79615016982907*^9, {
   3.7977720146244416`*^9, 3.7977720551564236`*^9}, {3.797772187518347*^9, 
   3.7977722124852324`*^9}, 3.7977724722124195`*^9, {3.79777392588457*^9, 
   3.7977739287014437`*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"ef8ecdab-6e20-4e00-a0db-ba40a954df5a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["A2", "Subsubsection",
 CellChangeTimes->{{3.797772072302777*^9, 
  3.7977720763174095`*^9}},ExpressionUUID->"b5bd95b8-937b-4788-9d43-\
53e1b560a703"],

Cell[BoxData[
 RowBox[{"Monitor", "[", 
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"level", "=", "0"}], ",", 
     RowBox[{"level", "\[LessEqual]", " ", "M"}], ",", 
     RowBox[{"level", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]Expansion", "[", 
          RowBox[{"level", ",", "form", ",", "A2"}], "]"}], "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"level", "\[Equal]", "0"}], ",", 
           RowBox[{
            RowBox[{"Normal", "[", 
             RowBox[{"\[Phi]", "[", 
              RowBox[{"form", ",", "A2"}], "]"}], "]"}], "/.", 
            RowBox[{"q", "\[Rule]", "0"}]}], ",", 
           RowBox[{"Coefficient", "[", 
            RowBox[{
             RowBox[{"\[Phi]", "[", 
              RowBox[{"form", ",", "A2"}], "]"}], ",", 
             RowBox[{"q", "^", "level"}]}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"co", "[", 
          RowBox[{"level", ",", "form", ",", "A2"}], "]"}], "=", 
         RowBox[{
          RowBox[{"Solve", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"CoefficientRules", "[", 
              RowBox[{
               SuperscriptBox["newfac", 
                RowBox[{"level", "+", "1"}]], "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"\[Phi]Expansion", "[", 
                    RowBox[{"level", ",", "form", ",", "A2"}], "]"}], "-", 
                   RowBox[{"Pol", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"form", ",", "A2"}], "}"}], ",", 
                    RowBox[{"level", "+", "1"}], ",", "3"}], "]"}]}], "/.", 
                  "newyx"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"P", "[", "1", "]"}], ",", 
                   RowBox[{"P", "[", "2", "]"}]}], "}"}]}], ")"}]}], "]"}], 
             "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}], "\[Equal]", "0"}], 
           "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";"}], ",", 
       RowBox[{"{", 
        RowBox[{"form", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "2", ",", "3"}], "}"}]}], "}"}]}], 
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"level", ",", "form"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.797772144388508*^9, 3.797772144772664*^9}, {
   3.7977724480365343`*^9, 3.7977725250447702`*^9}, {3.797772727959961*^9, 
   3.7977727335179825`*^9}, {3.7977728130236344`*^9, 
   3.7977728404927077`*^9}, {3.79777303253314*^9, 3.7977730353268356`*^9}, 
   3.7977733100658274`*^9, {3.7977739347106824`*^9, 3.797773973116303*^9}, {
   3.7977748676632814`*^9, 3.797774881308465*^9}},
 EmphasizeSyntaxErrors->True,
 CellLabel->"In[91]:=",ExpressionUUID->"8560805d-4c14-4fa5-942b-f80e33bf0878"]
}, Open  ]],

Cell[CellGroupData[{

Cell["G2", "Subsubsection",
 CellChangeTimes->{{3.797774232115677*^9, 
  3.7977742324527416`*^9}},ExpressionUUID->"99bdd021-ca61-4d91-a293-\
0919919d89bb"],

Cell[BoxData[
 RowBox[{"Monitor", "[", 
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"level", "=", "0"}], ",", 
     RowBox[{"level", "\[LessEqual]", " ", "M"}], ",", 
     RowBox[{"level", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]Expansion", "[", 
          RowBox[{"level", ",", "form", ",", "G2"}], "]"}], "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"level", "\[Equal]", "0"}], ",", 
           RowBox[{
            RowBox[{"Normal", "[", 
             RowBox[{"\[Phi]", "[", 
              RowBox[{"form", ",", "G2"}], "]"}], "]"}], "/.", 
            RowBox[{"q", "\[Rule]", "0"}]}], ",", 
           RowBox[{"Coefficient", "[", 
            RowBox[{
             RowBox[{"\[Phi]", "[", 
              RowBox[{"form", ",", "G2"}], "]"}], ",", 
             RowBox[{"q", "^", "level"}]}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"co", "[", 
          RowBox[{"level", ",", "form", ",", "G2"}], "]"}], "=", 
         RowBox[{
          RowBox[{"Solve", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"CoefficientRules", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 SuperscriptBox["newfac", 
                  RowBox[{"level", "+", "1"}]], "*", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"\[Phi]Expansion", "[", 
                    RowBox[{"level", ",", "form", ",", "G2"}], "]"}], "-", 
                    RowBox[{"Pol", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"form", ",", "G2"}], "}"}], ",", 
                    RowBox[{"level", "+", "1"}], ",", "3"}], "]"}]}], "/.", 
                   "yxRep"}], ")"}]}], "/.", 
                RowBox[{
                 RowBox[{"P", "[", "3", "]"}], "\[Rule]", 
                 FractionBox["1", 
                  RowBox[{
                   RowBox[{"P", "[", "2", "]"}], 
                   RowBox[{"P", "[", "1", "]"}]}]]}]}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"P", "[", "1", "]"}], ",", 
                 RowBox[{"P", "[", "2", "]"}]}], "}"}]}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}], "\[Equal]", "0"}], 
           "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";"}], ",", 
       RowBox[{"{", 
        RowBox[{"form", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "2", ",", "6"}], "}"}]}], "}"}]}], 
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"level", ",", "form"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7977742805222006`*^9, 3.7977742849301796`*^9}, {
  3.7977746599989347`*^9, 3.797774660837553*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"8e1a2ecb-6873-48fd-84fb-914e5e0d8525"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Results", "Subsubsection",
 CellChangeTimes->{{3.7977725590355744`*^9, 
  3.7977725611072054`*^9}},ExpressionUUID->"5a4c5940-8a83-46dd-b0f2-\
6678b1f4bdd9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"d", "[", "B3", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "4", ",", "6"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d", "[", "A2", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d", "[", "G2", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "6"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.797773332494849*^9, 3.797773385189024*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"d34d6b43-b593-4090-b22c-0ba36e0c9ac0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"co", "[", 
     RowBox[{"level", ",", "form", ",", "algebra"}], "]"}], "//", 
    "TableForm"}], ",", 
   RowBox[{"{", 
    RowBox[{"level", ",", "0", ",", "M", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"algebra", ",", 
     RowBox[{"{", 
      RowBox[{"B3", ",", "A2", ",", "G2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"form", ",", "0"}], "}"}], ",", 
     RowBox[{"w", "[", "algebra", "]"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "Setter"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.797772220322985*^9, 3.7977722933961306`*^9}, {
  3.7977742999820504`*^9, 3.7977743064044156`*^9}, {3.797774363030072*^9, 
  3.797774370867464*^9}, {3.7977744078946033`*^9, 3.7977744237960234`*^9}, {
  3.797774472318821*^9, 3.7977744724764376`*^9}, {3.797774531061303*^9, 
  3.7977745542889223`*^9}, {3.7977835471205006`*^9, 3.7977835658217416`*^9}, {
  3.7977841042880955`*^9, 3.7977841067024155`*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"4546c4d6-d385-40e1-9221-53fb20efac6a"],

Cell[BoxData[
 FormBox[
  TagBox[
   FormBox[
    StyleBox[
     DynamicModuleBox[{$CellContext`algebra$$ = LieART`Algebra[LieART`B][
      3], $CellContext`form$$ = 0, $CellContext`level$$ = 0, Typeset`show$$ = 
      True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
      Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
      "\"untitled\"", Typeset`specs$$ = {{
        Hold[$CellContext`level$$], 0, 3, 1}, {
        Hold[$CellContext`algebra$$], {
         LieART`Algebra[LieART`B][3], 
         LieART`Algebra[LieART`A][2], LieART`G2}}, {{
         Hold[$CellContext`form$$], 0}, 
        Dynamic[
         $CellContext`w[$CellContext`algebra$$]]}}, Typeset`size$$ = {
      169., {39.5, 45.5}}, Typeset`update$$ = 0, Typeset`initDone$$, 
      Typeset`skipInitDone$$ = True}, 
      DynamicBox[Manipulate`ManipulateBoxes[
       1, TraditionalForm, 
        "Variables" :> {$CellContext`algebra$$ = 
          LieART`Algebra[LieART`B][3], $CellContext`form$$ = 
          0, $CellContext`level$$ = 0}, "ControllerVariables" :> {}, 
        "OtherVariables" :> {
         Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
          Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
          Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
          Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> TableForm[
          $CellContext`co[$CellContext`level$$, $CellContext`form$$, \
$CellContext`algebra$$]], 
        "Specifications" :> {{$CellContext`level$$, 0, 3, 
           1}, {$CellContext`algebra$$, {
            LieART`Algebra[LieART`B][3], 
            LieART`Algebra[LieART`A][2], LieART`G2}}, {{$CellContext`form$$, 
            0}, 
           Dynamic[
            $CellContext`w[$CellContext`algebra$$]], ControlType -> Setter}}, 
        "Options" :> {}, "DefaultOptions" :> {}],
       ImageSizeCache->{290., {111., 117.}},
       SingleEvaluation->True],
      Deinitialization:>None,
      DynamicModuleValues:>{},
      SynchronousInitialization->True,
      UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
      UnsavedVariables:>{Typeset`initDone$$},
      UntrackedVariables:>{Typeset`size$$}], "Manipulate",
     Deployed->True,
     StripOnInput->False],
    TraditionalForm],
   Manipulate`InterpretManipulate[1]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.7977745395737157`*^9, 3.7977745547107096`*^9}, 
   3.797774682519021*^9, {3.797774892070039*^9, 3.7977749004978285`*^9}, {
   3.797783549404971*^9, 3.79778356893312*^9}, 3.797783637368888*^9, 
   3.797784107385044*^9, 3.7977851076709733`*^9, 3.797786992818458*^9, 
   3.797787275480131*^9, 3.7978822829984765`*^9, 3.7979249319612026`*^9, 
   3.7982860829192977`*^9, 3.798399068906587*^9, 3.798570012527913*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"bc273129-4aa3-438a-868b-fd9e9be25eec"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Comparison of the forms.", "Chapter",
 CellChangeTimes->{{3.797782300166758*^9, 
  3.797782310701577*^9}},ExpressionUUID->"a6cd44c7-948a-4bdc-a4cd-\
483a97dea682"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"d", "[", "B3", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"w", "[", "B3", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "4", ",", "6"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d", "[", "C3", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "2"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"w", "[", "C3", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "4", ",", "6"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d", "[", "A1", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"w", "[", "A1", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d", "[", "A2", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"w", "[", "A2", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d", "[", "G2", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"w", "[", "G2", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "6"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.797782482613554*^9, 3.7977825440378323`*^9}, {
  3.79795620654589*^9, 3.7979562075753555`*^9}, {3.7988021127905245`*^9, 
  3.798802130200121*^9}, {3.7990039858967056`*^9, 3.799004032681141*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"67e7d5f7-b24b-4456-bde6-91d1068a79f0"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7988021047241416`*^9, 3.7988021067565165`*^9}},
 CellLabel->
  "In[154]:=",ExpressionUUID->"8406b51a-91cc-4fc8-ae04-025d1622d1d7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"genNum", "[", "a_", "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"1", "-", 
     RowBox[{"e4", " ", 
      SuperscriptBox["z", "4"]}]}]], 
   FractionBox["1", 
    RowBox[{"1", "-", 
     RowBox[{"e6", " ", 
      SuperscriptBox["z", "6"]}]}]], 
   RowBox[{"Product", "[", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"1", "-", 
       RowBox[{
        RowBox[{"\[Phi]", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"w", "[", "a", "]"}], "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"d", "[", "a", "]"}], "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "a"}], "]"}], 
        RowBox[{"x", "^", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"d", "[", "a", "]"}], "[", 
           RowBox[{"[", "i", "]"}], "]"}], ")"}]}], 
        SuperscriptBox["z", 
         RowBox[{"-", 
          RowBox[{
           RowBox[{"w", "[", "a", "]"}], "[", 
           RowBox[{"[", "i", "]"}], "]"}]}]]}]}]], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{
        RowBox[{"Rank", "[", "a", "]"}], "+", "1"}]}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.793014725125636*^9, 3.793014782804377*^9}, 
   3.7942293875656767`*^9, {3.795352554321404*^9, 3.795352555274297*^9}, 
   3.795505425600563*^9, {3.797782387183776*^9, 3.797782398350253*^9}, {
   3.7977825931625924`*^9, 3.79778259594363*^9}, {3.7977826856249623`*^9, 
   3.7977826862639027`*^9}},
 CellLabel->
  "In[155]:=",ExpressionUUID->"88fcb941-0f20-4179-8b24-79e2e53c4e11"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AnsatzTerms", "[", 
   RowBox[{"df_", ",", "wf_"}], "]"}], ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"{", 
    RowBox[{"Replace", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"SeriesCoefficient", "[", 
         RowBox[{
          RowBox[{"genNum", "[", "A2", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "df"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"z", ",", "0", ",", "wf"}], "}"}]}], "]"}], "//", 
        "Expand"}], ")"}], ",", 
      RowBox[{
       RowBox[{"HoldPattern", "[", 
        RowBox[{"Plus", "[", "x__", "]"}], "]"}], "\[RuleDelayed]", 
       RowBox[{"List", "[", "x", "]"}]}]}], "]"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.793015002104299*^9, 3.7930150656806602`*^9}, {
  3.793015107619342*^9, 3.793015107728117*^9}, {3.793015602015688*^9, 
  3.7930156163321743`*^9}, {3.7931108015287523`*^9, 3.7931108077195654`*^9}, {
  3.7977823543498006`*^9, 3.797782434997992*^9}, {3.7977827048892245`*^9, 
  3.797782707357786*^9}, {3.797783985666711*^9, 3.7977840063180285`*^9}},
 NumberMarks->False,
 CellLabel->
  "In[156]:=",ExpressionUUID->"faf2fb83-b132-4d9d-b7ce-34c0d26290c8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Ansatz", "[", "wf_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"k", "[", "i", "]"}], 
       RowBox[{"##", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "##", "]"}]}], "}"}]}], "]"}], "&"}], "@", 
   RowBox[{"AnsatzTerms", "[", 
    RowBox[{"2", ",", 
     RowBox[{"-", "wf"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.797783720877318*^9, 3.7977837649029903`*^9}, {
  3.797955894752037*^9, 3.797955899363903*^9}},
 CellLabel->
  "In[157]:=",ExpressionUUID->"b4b623e2-cde2-4f4c-ba62-4a674c6a282a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"solutionB3", "[", "wf_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"CoefficientRules", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Normal", "[", 
          RowBox[{
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"P", "[", "1", "]"}], 
               RowBox[{"P", "[", "2", "]"}]}], ")"}], "2"], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Phi]", "[", 
                 RowBox[{"wf", ",", "B3"}], "]"}], "/.", 
                RowBox[{
                 RowBox[{"P", "[", "3", "]"}], "\[Rule]", 
                 FractionBox["1", 
                  RowBox[{
                   RowBox[{"P", "[", "1", "]"}], 
                   RowBox[{"P", "[", "2", "]"}]}]]}]}], ")"}], "-", 
              RowBox[{"Ansatz", "[", "wf", "]"}]}], ")"}]}], "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"\[Phi]", "[", 
               RowBox[{"a_", ",", "b_", ",", "A2"}], "]"}], "\[RuleDelayed]", 
              RowBox[{"\[Phi]", "[", 
               RowBox[{"a", ",", "A2"}], "]"}]}], ",", 
             RowBox[{"e4", "\[Rule]", " ", "Ei4"}], ",", 
             RowBox[{"e6", "\[Rule]", "Ei6"}]}], "}"}]}], "]"}], "/.", 
         RowBox[{"q", "\[Rule]", "0"}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"P", "[", "1", "]"}], ",", 
          RowBox[{"P", "[", "2", "]"}]}], "}"}]}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], "\[Equal]", "0"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7977837330539775`*^9, 3.797783774286664*^9}, {
  3.797784558695854*^9, 3.7977845618942986`*^9}},
 CellLabel->
  "In[158]:=",ExpressionUUID->"862c5b8c-6c0b-4f98-b907-e5def8f2ef1b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Ansatz", "[", "wf", "]"}], "/.", 
    RowBox[{"solutionB3", "[", "wf", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"wf", ",", 
     RowBox[{"w", "[", "B3", "]"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "Setter"}]}], "}"}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7977824369027863`*^9, 3.7977824460211344`*^9}, 
   3.797782726255864*^9, {3.7977837805354004`*^9, 3.797783829158906*^9}, {
   3.797783865678084*^9, 3.7977838927902803`*^9}, {3.797784564561001*^9, 
   3.797784568638549*^9}, {3.7978820890619*^9, 3.797882093987875*^9}},
 CellLabel->
  "In[159]:=",ExpressionUUID->"00f021ce-d984-4635-b1c5-60e9bdd72df6"],

Cell[BoxData[
 FormBox[
  TagBox[
   FormBox[
    StyleBox[
     DynamicModuleBox[{$CellContext`wf$$ = 6, Typeset`show$$ = True, 
      Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
      Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
      "\"untitled\"", Typeset`specs$$ = {{
        Hold[$CellContext`wf$$], {0, 2, 4, 6}}}, Typeset`size$$ = {
      84., {2., 13.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
      Typeset`skipInitDone$$ = False}, 
      DynamicBox[Manipulate`ManipulateBoxes[
       1, TraditionalForm, "Variables" :> {$CellContext`wf$$ = 0}, 
        "ControllerVariables" :> {}, 
        "OtherVariables" :> {
         Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
          Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
          Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
          Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> ReplaceAll[
          $CellContext`Ansatz[$CellContext`wf$$], 
          $CellContext`solutionB3[$CellContext`wf$$]], 
        "Specifications" :> {{$CellContext`wf$$, {0, 2, 4, 6}, ControlType -> 
           Setter}}, "Options" :> {}, "DefaultOptions" :> {}],
       ImageSizeCache->{135., {50., 56.}},
       SingleEvaluation->True],
      Deinitialization:>None,
      DynamicModuleValues:>{},
      Initialization:>({$CellContext`Ansatz[
           Pattern[$CellContext`wf, 
            Blank[]]] := (Sum[$CellContext`k[$CellContext`i] Part[
             SlotSequence[1], $CellContext`i], {$CellContext`i, 1, 
            Length[
             SlotSequence[1]]}]& )[
           $CellContext`AnsatzTerms[2, -$CellContext`wf]], $CellContext`i = 
         0, $CellContext`AnsatzTerms[
           Pattern[$CellContext`df, 
            Blank[]], 
           Pattern[$CellContext`wf, 
            Blank[]]] := Flatten[{
            Replace[
             Expand[
              SeriesCoefficient[
               $CellContext`genNum[
               LieART`A2], {$CellContext`x, 
                0, $CellContext`df}, {$CellContext`z, 0, $CellContext`wf}]], 
             HoldPattern[
               Plus[
                Pattern[$CellContext`x, 
                 BlankSequence[]]]] :> {$CellContext`x}]}], $CellContext`df = 
         10, $CellContext`genNum[
           Pattern[$CellContext`a, 
            Blank[]]] := ((1/(1 - $CellContext`e4 $CellContext`z^4)) (1/(
            1 - $CellContext`e6 $CellContext`z^6))) 
          Product[1/(1 - ($CellContext`\[Phi][
               Part[
                $CellContext`w[$CellContext`a], $CellContext`i], 
               Part[
                $CellContext`d[$CellContext`a], $CellContext`i], \
$CellContext`a] $CellContext`x^Part[
                $CellContext`d[$CellContext`a], \
$CellContext`i])/$CellContext`z^Part[
              $CellContext`w[$CellContext`a], $CellContext`i]), \
{$CellContext`i, 1, LieART`Rank[$CellContext`a] + 1}], $CellContext`\[Phi][
          0, LieART`G2] = 
         SeriesData[$CellContext`q, 
           0, {(-9)/2 - 1/(4 $CellContext`P[1]) - $CellContext`P[1]/4 - 1/(
            4 $CellContext`P[2]) - 
            1/((4 $CellContext`P[1]) $CellContext`P[2]) - $CellContext`P[2]/
            4 - ($CellContext`P[1] $CellContext`P[2])/4, 0, 0, 0, 0, 0, 0, 0, 
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, (-189)/2 - 1/(
            4 $CellContext`P[1]^2) + 
            41/(2 $CellContext`P[1]) + (41 $CellContext`P[1])/
             2 - $CellContext`P[1]^2/4 - 1/(4 $CellContext`P[2]^2) - 
            1/((4 $CellContext`P[1]^2) $CellContext`P[2]^2) - 
            9/((2 $CellContext`P[1]) $CellContext`P[2]^2) + 
            41/(2 $CellContext`P[2]) - 
            9/((2 $CellContext`P[1]^2) $CellContext`P[2]) + 
            41/((2 $CellContext`P[1]) $CellContext`P[2]) - (
             9 $CellContext`P[1])/(
            2 $CellContext`P[2]) + (41 $CellContext`P[2])/2 - (
             9 $CellContext`P[2])/(
            2 $CellContext`P[1]) + ((41 $CellContext`P[1]) $CellContext`P[2])/
             2 - ((9 $CellContext`P[1]^2) $CellContext`P[2])/
            2 - $CellContext`P[2]^2/
            4 - ((9 $CellContext`P[1]) $CellContext`P[2]^2)/
            2 - ($CellContext`P[1]^2 $CellContext`P[2]^2)/4, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -891 + 
            41/(2 $CellContext`P[1]^2) + 223/$CellContext`P[1] + 
            223 $CellContext`P[1] + (41 $CellContext`P[1]^2)/2 - 
            1/((4 $CellContext`P[1]^2) $CellContext`P[2]^3) - 
            1/((4 $CellContext`P[1]) $CellContext`P[2]^3) + 
            41/(2 $CellContext`P[2]^2) - 
            1/((4 $CellContext`P[1]^3) $CellContext`P[2]^2) + 
            41/((2 $CellContext`P[1]^2) $CellContext`P[2]^2) - 
            189/((2 $CellContext`P[1]) $CellContext`P[2]^2) - $CellContext`P[
             1]/(4 $CellContext`P[2]^2) + 223/$CellContext`P[2] - 
            1/((4 $CellContext`P[1]^3) $CellContext`P[2]) - 
            189/((2 $CellContext`P[1]^2) $CellContext`P[2]) + 
            223/($CellContext`P[1] $CellContext`P[2]) - (
             189 $CellContext`P[1])/(
            2 $CellContext`P[2]) - $CellContext`P[1]^2/(4 $CellContext`P[2]) + 
            223 $CellContext`P[2] - $CellContext`P[2]/(
            4 $CellContext`P[1]^2) - (189 $CellContext`P[2])/(
            2 $CellContext`P[
             1]) + (223 $CellContext`P[1]) $CellContext`P[2] - ((
              189 $CellContext`P[1]^2) $CellContext`P[2])/
            2 - ($CellContext`P[1]^3 $CellContext`P[2])/
            4 + (41 $CellContext`P[2]^2)/2 - $CellContext`P[2]^2/(
            4 $CellContext`P[
             1]) - ((189 $CellContext`P[1]) $CellContext`P[2]^2)/
            2 + ((41 $CellContext`P[1]^2) $CellContext`P[2]^2)/
             2 - ($CellContext`P[1]^3 $CellContext`P[2]^2)/
            4 - ($CellContext`P[1] $CellContext`P[2]^3)/
            4 - ($CellContext`P[1]^2 $CellContext`P[2]^3)/4, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -5562 - 9/(
            2 $CellContext`P[1]^3) + 223/$CellContext`P[1]^2 + 
            3117/(2 $CellContext`P[1]) + (3117 $CellContext`P[1])/2 + 
            223 $CellContext`P[1]^2 - (9 $CellContext`P[1]^3)/2 - 9/(
            2 $CellContext`P[2]^3) - 
            9/((2 $CellContext`P[1]^3) $CellContext`P[2]^3) + 
            41/((2 $CellContext`P[1]^2) $CellContext`P[2]^3) + 
            41/((2 $CellContext`P[1]) $CellContext`P[2]^3) + 
            223/$CellContext`P[2]^2 + 
            41/((2 $CellContext`P[1]^3) $CellContext`P[2]^2) + 
            223/($CellContext`P[1]^2 $CellContext`P[2]^2) - 
            891/($CellContext`P[
             1] $CellContext`P[2]^2) + (41 $CellContext`P[1])/(
             2 $CellContext`P[2]^2) + 3117/(2 $CellContext`P[2]) + 
            41/((2 $CellContext`P[1]^3) $CellContext`P[2]) - 
            891/($CellContext`P[1]^2 $CellContext`P[2]) + 
            3117/((2 $CellContext`P[1]) $CellContext`P[2]) - (
             891 $CellContext`P[1])/$CellContext`P[
            2] + (41 $CellContext`P[1]^2)/(
             2 $CellContext`P[2]) + (3117 $CellContext`P[2])/
             2 + (41 $CellContext`P[2])/(2 $CellContext`P[1]^2) - (
             891 $CellContext`P[2])/$CellContext`P[
            1] + ((3117 $CellContext`P[1]) $CellContext`P[2])/2 - (
             891 $CellContext`P[1]^2) $CellContext`P[
             2] + ((41 $CellContext`P[1]^3) $CellContext`P[2])/2 + 
            223 $CellContext`P[2]^2 + (41 $CellContext`P[2]^2)/(
             2 $CellContext`P[1]) - (
             891 $CellContext`P[1]) $CellContext`P[2]^2 + (
              223 $CellContext`P[1]^2) $CellContext`P[2]^2 + ((
               41 $CellContext`P[1]^3) $CellContext`P[2]^2)/2 - (
             9 $CellContext`P[2]^3)/
            2 + ((41 $CellContext`P[1]) $CellContext`P[2]^3)/
             2 + ((41 $CellContext`P[1]^2) $CellContext`P[2]^3)/
             2 - ((9 $CellContext`P[1]^3) $CellContext`P[2]^3)/2}, 0, 96, 
           24], $CellContext`\[Phi][0, 
           LieART`Algebra[LieART`A][1]] = 
         SeriesData[$CellContext`q, 0, {
           5/3 + 1/(6 $CellContext`X) + $CellContext`X/6, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 18 + 
            5/(3 $CellContext`X^2) - 32/(
            3 $CellContext`X) - (32 $CellContext`X)/
            3 + (5 $CellContext`X^2)/3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 404/3 + 1/(6 $CellContext`X^3) + 
            18/$CellContext`X^2 - 171/(
            2 $CellContext`X) - (171 $CellContext`X)/2 + 
            18 $CellContext`X^2 + $CellContext`X^3/6, 0, 0, 0, 0, 0, 0, 0, 0, 
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2008/3 - 32/(
            3 $CellContext`X^3) + 404/(3 $CellContext`X^2) - 1376/(
            3 $CellContext`X) - (1376 $CellContext`X)/
            3 + (404 $CellContext`X^2)/3 - (32 $CellContext`X^3)/3}, 0, 96, 
           24], $CellContext`\[Phi][0, 
           LieART`Algebra[LieART`A][2]] = 
         SeriesData[$CellContext`q, 
           0, {(-9)/2 - 1/(4 $CellContext`P[1]) - $CellContext`P[1]/4 - 1/(
            4 $CellContext`P[2]) - 
            1/((4 $CellContext`P[1]) $CellContext`P[2]) - $CellContext`P[2]/
            4 - ($CellContext`P[1] $CellContext`P[2])/4, 0, 0, 0, 0, 0, 0, 0, 
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, (-189)/2 - 1/(
            4 $CellContext`P[1]^2) + 
            41/(2 $CellContext`P[1]) + (41 $CellContext`P[1])/
             2 - $CellContext`P[1]^2/4 - 1/(4 $CellContext`P[2]^2) - 
            1/((4 $CellContext`P[1]^2) $CellContext`P[2]^2) - 
            9/((2 $CellContext`P[1]) $CellContext`P[2]^2) + 
            41/(2 $CellContext`P[2]) - 
            9/((2 $CellContext`P[1]^2) $CellContext`P[2]) + 
            41/((2 $CellContext`P[1]) $CellContext`P[2]) - (
             9 $CellContext`P[1])/(
            2 $CellContext`P[2]) + (41 $CellContext`P[2])/2 - (
             9 $CellContext`P[2])/(
            2 $CellContext`P[1]) + ((41 $CellContext`P[1]) $CellContext`P[2])/
             2 - ((9 $CellContext`P[1]^2) $CellContext`P[2])/
            2 - $CellContext`P[2]^2/
            4 - ((9 $CellContext`P[1]) $CellContext`P[2]^2)/
            2 - ($CellContext`P[1]^2 $CellContext`P[2]^2)/4, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -891 + 
            41/(2 $CellContext`P[1]^2) + 223/$CellContext`P[1] + 
            223 $CellContext`P[1] + (41 $CellContext`P[1]^2)/2 - 
            1/((4 $CellContext`P[1]^2) $CellContext`P[2]^3) - 
            1/((4 $CellContext`P[1]) $CellContext`P[2]^3) + 
            41/(2 $CellContext`P[2]^2) - 
            1/((4 $CellContext`P[1]^3) $CellContext`P[2]^2) + 
            41/((2 $CellContext`P[1]^2) $CellContext`P[2]^2) - 
            189/((2 $CellContext`P[1]) $CellContext`P[2]^2) - $CellContext`P[
             1]/(4 $CellContext`P[2]^2) + 223/$CellContext`P[2] - 
            1/((4 $CellContext`P[1]^3) $CellContext`P[2]) - 
            189/((2 $CellContext`P[1]^2) $CellContext`P[2]) + 
            223/($CellContext`P[1] $CellContext`P[2]) - (
             189 $CellContext`P[1])/(
            2 $CellContext`P[2]) - $CellContext`P[1]^2/(4 $CellContext`P[2]) + 
            223 $CellContext`P[2] - $CellContext`P[2]/(
            4 $CellContext`P[1]^2) - (189 $CellContext`P[2])/(
            2 $CellContext`P[
             1]) + (223 $CellContext`P[1]) $CellContext`P[2] - ((
              189 $CellContext`P[1]^2) $CellContext`P[2])/
            2 - ($CellContext`P[1]^3 $CellContext`P[2])/
            4 + (41 $CellContext`P[2]^2)/2 - $CellContext`P[2]^2/(
            4 $CellContext`P[
             1]) - ((189 $CellContext`P[1]) $CellContext`P[2]^2)/
            2 + ((41 $CellContext`P[1]^2) $CellContext`P[2]^2)/
             2 - ($CellContext`P[1]^3 $CellContext`P[2]^2)/
            4 - ($CellContext`P[1] $CellContext`P[2]^3)/
            4 - ($CellContext`P[1]^2 $CellContext`P[2]^3)/4, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -5562 - 9/(
            2 $CellContext`P[1]^3) + 223/$CellContext`P[1]^2 + 
            3117/(2 $CellContext`P[1]) + (3117 $CellContext`P[1])/2 + 
            223 $CellContext`P[1]^2 - (9 $CellContext`P[1]^3)/2 - 9/(
            2 $CellContext`P[2]^3) - 
            9/((2 $CellContext`P[1]^3) $CellContext`P[2]^3) + 
            41/((2 $CellContext`P[1]^2) $CellContext`P[2]^3) + 
            41/((2 $CellContext`P[1]) $CellContext`P[2]^3) + 
            223/$CellContext`P[2]^2 + 
            41/((2 $CellContext`P[1]^3) $CellContext`P[2]^2) + 
            223/($CellContext`P[1]^2 $CellContext`P[2]^2) - 
            891/($CellContext`P[
             1] $CellContext`P[2]^2) + (41 $CellContext`P[1])/(
             2 $CellContext`P[2]^2) + 3117/(2 $CellContext`P[2]) + 
            41/((2 $CellContext`P[1]^3) $CellContext`P[2]) - 
            891/($CellContext`P[1]^2 $CellContext`P[2]) + 
            3117/((2 $CellContext`P[1]) $CellContext`P[2]) - (
             891 $CellContext`P[1])/$CellContext`P[
            2] + (41 $CellContext`P[1]^2)/(
             2 $CellContext`P[2]) + (3117 $CellContext`P[2])/
             2 + (41 $CellContext`P[2])/(2 $CellContext`P[1]^2) - (
             891 $CellContext`P[2])/$CellContext`P[
            1] + ((3117 $CellContext`P[1]) $CellContext`P[2])/2 - (
             891 $CellContext`P[1]^2) $CellContext`P[
             2] + ((41 $CellContext`P[1]^3) $CellContext`P[2])/2 + 
            223 $CellContext`P[2]^2 + (41 $CellContext`P[2]^2)/(
             2 $CellContext`P[1]) - (
             891 $CellContext`P[1]) $CellContext`P[2]^2 + (
              223 $CellContext`P[1]^2) $CellContext`P[2]^2 + ((
               41 $CellContext`P[1]^3) $CellContext`P[2]^2)/2 - (
             9 $CellContext`P[2]^3)/
            2 + ((41 $CellContext`P[1]) $CellContext`P[2]^3)/
             2 + ((41 $CellContext`P[1]^2) $CellContext`P[2]^3)/
             2 - ((9 $CellContext`P[1]^3) $CellContext`P[2]^3)/2}, 0, 96, 
           24], $CellContext`\[Phi][0, 
           LieART`Algebra[LieART`B][3]] = (-232)/3 - 4656 $CellContext`q - 
          118592 $CellContext`q^2 - 
          1860224 $CellContext`q^3 - (14 $CellContext`q^2)/(
          3 $CellContext`P[1]^3) + (3256 $CellContext`q^3)/(
           3 $CellContext`P[1]^3) - (232 $CellContext`q)/(
          3 $CellContext`P[1]^2) - (4656 $CellContext`q^2)/$CellContext`P[
           1]^2 - (118592 $CellContext`q^3)/$CellContext`P[1]^2 - 14/(
          3 $CellContext`P[1]) + (3256 $CellContext`q)/(
           3 $CellContext`P[1]) + (43810 $CellContext`q^2)/$CellContext`P[
           1] + (2547976 $CellContext`q^3)/(3 $CellContext`P[1]) - (
           14 $CellContext`P[1])/
          3 + ((3256 $CellContext`q) $CellContext`P[1])/
           3 + (43810 $CellContext`q^2) $CellContext`P[
            1] + ((2547976 $CellContext`q^3) $CellContext`P[1])/
           3 - ((232 $CellContext`q) $CellContext`P[1]^2)/
          3 - (4656 $CellContext`q^2) $CellContext`P[1]^2 - (
           118592 $CellContext`q^3) $CellContext`P[1]^2 - ((
            14 $CellContext`q^2) $CellContext`P[1]^3)/
          3 + ((3256 $CellContext`q^3) $CellContext`P[1]^3)/3 - (
           14 $CellContext`q^2)/(
          3 $CellContext`P[2]^3) + (3256 $CellContext`q^3)/(
           3 $CellContext`P[2]^3) - (14 $CellContext`q^3)/((
           3 $CellContext`P[1]^2) $CellContext`P[
            2]^3) - $CellContext`q^2/($CellContext`P[
           1] $CellContext`P[2]^3) - (314 $CellContext`q^3)/((
           3 $CellContext`P[1]) $CellContext`P[
            2]^3) - ($CellContext`q^2 $CellContext`P[1])/$CellContext`P[
           2]^3 - ((314 $CellContext`q^3) $CellContext`P[1])/(
          3 $CellContext`P[2]^3) - ((
            14 $CellContext`q^3) $CellContext`P[1]^2)/(
          3 $CellContext`P[2]^3) - (232 $CellContext`q)/(
          3 $CellContext`P[2]^2) - (4656 $CellContext`q^2)/$CellContext`P[
           2]^2 - (118592 $CellContext`q^3)/$CellContext`P[2]^2 - (
           14 $CellContext`q^3)/((
           3 $CellContext`P[1]^3) $CellContext`P[2]^2) - (
           232 $CellContext`q^2)/((
           3 $CellContext`P[1]^2) $CellContext`P[2]^2) - (
           4656 $CellContext`q^3)/($CellContext`P[1]^2 $CellContext`P[
            2]^2) - (14 $CellContext`q)/((
           3 $CellContext`P[1]) $CellContext`P[2]^2) + (
            3256 $CellContext`q^2)/((
            3 $CellContext`P[1]) $CellContext`P[2]^2) + (
            43810 $CellContext`q^3)/($CellContext`P[
            1] $CellContext`P[2]^2) - ((14 $CellContext`q) $CellContext`P[
            1])/(3 $CellContext`P[
            2]^2) + ((3256 $CellContext`q^2) $CellContext`P[1])/(
           3 $CellContext`P[2]^2) + ((43810 $CellContext`q^3) $CellContext`P[
             1])/$CellContext`P[2]^2 - ((
            232 $CellContext`q^2) $CellContext`P[1]^2)/(
          3 $CellContext`P[2]^2) - ((
            4656 $CellContext`q^3) $CellContext`P[1]^2)/$CellContext`P[
           2]^2 - ((14 $CellContext`q^3) $CellContext`P[1]^3)/(
          3 $CellContext`P[2]^2) - 14/(
          3 $CellContext`P[2]) + (3256 $CellContext`q)/(
           3 $CellContext`P[2]) + (43810 $CellContext`q^2)/$CellContext`P[
           2] + (2547976 $CellContext`q^3)/(
           3 $CellContext`P[2]) - $CellContext`q^2/($CellContext`P[
            1]^3 $CellContext`P[2]) - (314 $CellContext`q^3)/((
           3 $CellContext`P[1]^3) $CellContext`P[2]) - (14 $CellContext`q)/((
           3 $CellContext`P[1]^2) $CellContext`P[
           2]) + (3256 $CellContext`q^2)/((
            3 $CellContext`P[1]^2) $CellContext`P[2]) + (
            43810 $CellContext`q^3)/($CellContext`P[1]^2 $CellContext`P[2]) - 
          1/($CellContext`P[1] $CellContext`P[2]) - (314 $CellContext`q)/((
           3 $CellContext`P[1]) $CellContext`P[2]) - (
           40838 $CellContext`q^2)/((3 $CellContext`P[1]) $CellContext`P[
           2]) - (359548 $CellContext`q^3)/($CellContext`P[1] $CellContext`P[
           2]) - $CellContext`P[1]/$CellContext`P[
          2] - ((314 $CellContext`q) $CellContext`P[1])/(
          3 $CellContext`P[
           2]) - ((40838 $CellContext`q^2) $CellContext`P[1])/(
          3 $CellContext`P[
           2]) - ((359548 $CellContext`q^3) $CellContext`P[1])/$CellContext`P[
          2] - ((14 $CellContext`q) $CellContext`P[1]^2)/(
          3 $CellContext`P[
           2]) + ((3256 $CellContext`q^2) $CellContext`P[1]^2)/(
           3 $CellContext`P[
            2]) + ((
             43810 $CellContext`q^3) $CellContext`P[1]^2)/$CellContext`P[
           2] - ($CellContext`q^2 $CellContext`P[1]^3)/$CellContext`P[
          2] - ((314 $CellContext`q^3) $CellContext`P[1]^3)/(
          3 $CellContext`P[2]) - (14 $CellContext`P[2])/
          3 + ((3256 $CellContext`q) $CellContext`P[2])/
           3 + (43810 $CellContext`q^2) $CellContext`P[
            2] + ((2547976 $CellContext`q^3) $CellContext`P[2])/
           3 - ($CellContext`q^2 $CellContext`P[2])/$CellContext`P[
           1]^3 - ((314 $CellContext`q^3) $CellContext`P[2])/(
          3 $CellContext`P[1]^3) - ((14 $CellContext`q) $CellContext`P[2])/(
          3 $CellContext`P[
            1]^2) + ((3256 $CellContext`q^2) $CellContext`P[2])/(
           3 $CellContext`P[1]^2) + ((43810 $CellContext`q^3) $CellContext`P[
             2])/$CellContext`P[1]^2 - $CellContext`P[2]/$CellContext`P[
          1] - ((314 $CellContext`q) $CellContext`P[2])/(
          3 $CellContext`P[
           1]) - ((40838 $CellContext`q^2) $CellContext`P[2])/(
          3 $CellContext`P[
           1]) - ((359548 $CellContext`q^3) $CellContext`P[2])/$CellContext`P[
          1] - $CellContext`P[1] $CellContext`P[
           2] - (((314 $CellContext`q) $CellContext`P[1]) $CellContext`P[2])/
          3 - (((40838 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
            2])/3 - ((359548 $CellContext`q^3) $CellContext`P[
            1]) $CellContext`P[
           2] - (((14 $CellContext`q) $CellContext`P[1]^2) $CellContext`P[2])/
          3 + (((3256 $CellContext`q^2) $CellContext`P[1]^2) $CellContext`P[
             2])/3 + ((
             43810 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[
            2] - ($CellContext`q^2 $CellContext`P[1]^3) $CellContext`P[
           2] - (((314 $CellContext`q^3) $CellContext`P[1]^3) $CellContext`P[
            2])/3 - ((232 $CellContext`q) $CellContext`P[2]^2)/
          3 - (4656 $CellContext`q^2) $CellContext`P[2]^2 - (
           118592 $CellContext`q^3) $CellContext`P[2]^2 - ((
            14 $CellContext`q^3) $CellContext`P[2]^2)/(
          3 $CellContext`P[1]^3) - ((
            232 $CellContext`q^2) $CellContext`P[2]^2)/(
          3 $CellContext`P[1]^2) - ((
            4656 $CellContext`q^3) $CellContext`P[2]^2)/$CellContext`P[
           1]^2 - ((14 $CellContext`q) $CellContext`P[2]^2)/(
          3 $CellContext`P[
           1]) + ((3256 $CellContext`q^2) $CellContext`P[2]^2)/(
           3 $CellContext`P[
            1]) + ((43810 $CellContext`q^3) $CellContext`P[
              2]^2)/$CellContext`P[
           1] - (((14 $CellContext`q) $CellContext`P[1]) $CellContext`P[2]^2)/
          3 + (((3256 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
              2]^2)/3 + ((43810 $CellContext`q^3) $CellContext`P[
             1]) $CellContext`P[2]^2 - (((
             232 $CellContext`q^2) $CellContext`P[1]^2) $CellContext`P[2]^2)/
          3 - ((4656 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[
            2]^2 - (((
             14 $CellContext`q^3) $CellContext`P[1]^3) $CellContext`P[2]^2)/
          3 - ((14 $CellContext`q^2) $CellContext`P[2]^3)/
          3 + ((3256 $CellContext`q^3) $CellContext`P[2]^3)/
           3 - ((14 $CellContext`q^3) $CellContext`P[2]^3)/(
          3 $CellContext`P[
            1]^2) - ($CellContext`q^2 $CellContext`P[2]^3)/$CellContext`P[
          1] - ((314 $CellContext`q^3) $CellContext`P[2]^3)/(
          3 $CellContext`P[
           1]) - ($CellContext`q^2 $CellContext`P[1]) $CellContext`P[
            2]^3 - (((314 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
             2]^3)/3 - (((
             14 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[2]^3)/
          3 - (14 $CellContext`q^2)/(
          3 $CellContext`P[3]^3) + (3256 $CellContext`q^3)/(
           3 $CellContext`P[3]^3) - (14 $CellContext`q^3)/((
           3 $CellContext`P[1]^2) $CellContext`P[
            3]^3) - $CellContext`q^2/($CellContext`P[
           1] $CellContext`P[3]^3) - (314 $CellContext`q^3)/((
           3 $CellContext`P[1]) $CellContext`P[
            3]^3) - ($CellContext`q^2 $CellContext`P[1])/$CellContext`P[
           3]^3 - ((314 $CellContext`q^3) $CellContext`P[1])/(
          3 $CellContext`P[3]^3) - ((
            14 $CellContext`q^3) $CellContext`P[1]^2)/(
          3 $CellContext`P[3]^3) - (14 $CellContext`q^3)/((
           3 $CellContext`P[2]^2) $CellContext`P[
            3]^3) - $CellContext`q^3/(($CellContext`P[
            1] $CellContext`P[2]^2) $CellContext`P[
            3]^3) - ($CellContext`q^3 $CellContext`P[1])/($CellContext`P[
            2]^2 $CellContext`P[3]^3) - $CellContext`q^2/($CellContext`P[
           2] $CellContext`P[3]^3) - (314 $CellContext`q^3)/((
           3 $CellContext`P[2]) $CellContext`P[
            3]^3) - $CellContext`q^3/(($CellContext`P[1]^2 $CellContext`P[
            2]) $CellContext`P[3]^3) - $CellContext`q^2/(((
            3 $CellContext`P[1]) $CellContext`P[2]) $CellContext`P[
            3]^3) - ($CellContext`q^2 $CellContext`P[1])/((
           3 $CellContext`P[2]) $CellContext`P[
            3]^3) - ($CellContext`q^3 $CellContext`P[1]^2)/($CellContext`P[
           2] $CellContext`P[3]^3) - ($CellContext`q^2 $CellContext`P[
            2])/$CellContext`P[
           3]^3 - ((314 $CellContext`q^3) $CellContext`P[2])/(
          3 $CellContext`P[3]^3) - ($CellContext`q^3 $CellContext`P[
            2])/($CellContext`P[1]^2 $CellContext`P[
            3]^3) - ($CellContext`q^2 $CellContext`P[2])/((
           3 $CellContext`P[1]) $CellContext`P[
            3]^3) - (($CellContext`q^2 $CellContext`P[1]) $CellContext`P[2])/(
          3 $CellContext`P[
            3]^3) - (($CellContext`q^3 $CellContext`P[1]^2) $CellContext`P[
            2])/$CellContext`P[
           3]^3 - ((14 $CellContext`q^3) $CellContext`P[2]^2)/(
          3 $CellContext`P[
            3]^3) - ($CellContext`q^3 $CellContext`P[2]^2)/($CellContext`P[
           1] $CellContext`P[
            3]^3) - (($CellContext`q^3 $CellContext`P[1]) $CellContext`P[
             2]^2)/$CellContext`P[3]^3 - (232 $CellContext`q)/(
          3 $CellContext`P[3]^2) - (4656 $CellContext`q^2)/$CellContext`P[
           3]^2 - (118592 $CellContext`q^3)/$CellContext`P[3]^2 - (
           14 $CellContext`q^3)/((
           3 $CellContext`P[1]^3) $CellContext`P[3]^2) - (
           232 $CellContext`q^2)/((
           3 $CellContext`P[1]^2) $CellContext`P[3]^2) - (
           4656 $CellContext`q^3)/($CellContext`P[1]^2 $CellContext`P[
            3]^2) - (14 $CellContext`q)/((
           3 $CellContext`P[1]) $CellContext`P[3]^2) + (
            3256 $CellContext`q^2)/((
            3 $CellContext`P[1]) $CellContext`P[3]^2) + (
            43810 $CellContext`q^3)/($CellContext`P[
            1] $CellContext`P[3]^2) - ((14 $CellContext`q) $CellContext`P[
            1])/(3 $CellContext`P[
            3]^2) + ((3256 $CellContext`q^2) $CellContext`P[1])/(
           3 $CellContext`P[3]^2) + ((43810 $CellContext`q^3) $CellContext`P[
             1])/$CellContext`P[3]^2 - ((
            232 $CellContext`q^2) $CellContext`P[1]^2)/(
          3 $CellContext`P[3]^2) - ((
            4656 $CellContext`q^3) $CellContext`P[1]^2)/$CellContext`P[
           3]^2 - ((14 $CellContext`q^3) $CellContext`P[1]^3)/(
          3 $CellContext`P[3]^2) - (14 $CellContext`q^3)/((
           3 $CellContext`P[2]^3) $CellContext`P[
            3]^2) - $CellContext`q^3/(($CellContext`P[
            1] $CellContext`P[2]^3) $CellContext`P[
            3]^2) - ($CellContext`q^3 $CellContext`P[1])/($CellContext`P[
            2]^3 $CellContext`P[3]^2) - (232 $CellContext`q^2)/((
           3 $CellContext`P[2]^2) $CellContext`P[3]^2) - (
           4656 $CellContext`q^3)/($CellContext`P[2]^2 $CellContext`P[
            3]^2) - (
           232 $CellContext`q^3)/(((
            3 $CellContext`P[1]^2) $CellContext`P[2]^2) $CellContext`P[
            3]^2) - (
           14 $CellContext`q^2)/(((
            3 $CellContext`P[1]) $CellContext`P[2]^2) $CellContext`P[3]^2) + (
            3256 $CellContext`q^3)/(((
             3 $CellContext`P[1]) $CellContext`P[2]^2) $CellContext`P[
             3]^2) - ((14 $CellContext`q^2) $CellContext`P[1])/((
           3 $CellContext`P[2]^2) $CellContext`P[
            3]^2) + ((3256 $CellContext`q^3) $CellContext`P[1])/((
            3 $CellContext`P[2]^2) $CellContext`P[3]^2) - ((
            232 $CellContext`q^3) $CellContext`P[1]^2)/((
           3 $CellContext`P[2]^2) $CellContext`P[3]^2) - (
           14 $CellContext`q)/((
           3 $CellContext`P[2]) $CellContext`P[3]^2) + (
            3256 $CellContext`q^2)/((
            3 $CellContext`P[2]) $CellContext`P[3]^2) + (
            43810 $CellContext`q^3)/($CellContext`P[
            2] $CellContext`P[3]^2) - $CellContext`q^3/(($CellContext`P[
             1]^3 $CellContext`P[2]) $CellContext`P[3]^2) - (
           14 $CellContext`q^2)/(((3 $CellContext`P[1]^2) $CellContext`P[
            2]) $CellContext`P[3]^2) + (
            3256 $CellContext`q^3)/(((3 $CellContext`P[1]^2) $CellContext`P[
             2]) $CellContext`P[3]^2) - $CellContext`q/(($CellContext`P[
            1] $CellContext`P[2]) $CellContext`P[3]^2) - (
           314 $CellContext`q^2)/(((3 $CellContext`P[1]) $CellContext`P[
            2]) $CellContext`P[3]^2) - (
           40838 $CellContext`q^3)/(((3 $CellContext`P[1]) $CellContext`P[
            2]) $CellContext`P[3]^2) - ($CellContext`q $CellContext`P[
            1])/($CellContext`P[
           2] $CellContext`P[3]^2) - ((314 $CellContext`q^2) $CellContext`P[
            1])/((3 $CellContext`P[2]) $CellContext`P[3]^2) - ((
            40838 $CellContext`q^3) $CellContext`P[1])/((
           3 $CellContext`P[2]) $CellContext`P[3]^2) - ((
            14 $CellContext`q^2) $CellContext`P[1]^2)/((
           3 $CellContext`P[2]) $CellContext`P[
            3]^2) + ((3256 $CellContext`q^3) $CellContext`P[1]^2)/((
            3 $CellContext`P[2]) $CellContext`P[
             3]^2) - ($CellContext`q^3 $CellContext`P[1]^3)/($CellContext`P[
           2] $CellContext`P[3]^2) - ((14 $CellContext`q) $CellContext`P[2])/(
          3 $CellContext`P[
            3]^2) + ((3256 $CellContext`q^2) $CellContext`P[2])/(
           3 $CellContext`P[3]^2) + ((43810 $CellContext`q^3) $CellContext`P[
             2])/$CellContext`P[3]^2 - ($CellContext`q^3 $CellContext`P[
            2])/($CellContext`P[1]^3 $CellContext`P[3]^2) - ((
            14 $CellContext`q^2) $CellContext`P[2])/((
           3 $CellContext`P[1]^2) $CellContext`P[
            3]^2) + ((3256 $CellContext`q^3) $CellContext`P[2])/((
            3 $CellContext`P[1]^2) $CellContext`P[
             3]^2) - ($CellContext`q $CellContext`P[2])/($CellContext`P[
           1] $CellContext`P[3]^2) - ((314 $CellContext`q^2) $CellContext`P[
            2])/((3 $CellContext`P[1]) $CellContext`P[3]^2) - ((
            40838 $CellContext`q^3) $CellContext`P[2])/((
           3 $CellContext`P[1]) $CellContext`P[
            3]^2) - (($CellContext`q $CellContext`P[1]) $CellContext`P[
            2])/$CellContext`P[
           3]^2 - (((314 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
            2])/(3 $CellContext`P[
            3]^2) - (((40838 $CellContext`q^3) $CellContext`P[
             1]) $CellContext`P[2])/(
          3 $CellContext`P[
            3]^2) - (((
             14 $CellContext`q^2) $CellContext`P[1]^2) $CellContext`P[2])/(
          3 $CellContext`P[
            3]^2) + (((
              3256 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[2])/(
           3 $CellContext`P[
             3]^2) - (($CellContext`q^3 $CellContext`P[1]^3) $CellContext`P[
            2])/$CellContext`P[
           3]^2 - ((232 $CellContext`q^2) $CellContext`P[2]^2)/(
          3 $CellContext`P[3]^2) - ((
            4656 $CellContext`q^3) $CellContext`P[2]^2)/$CellContext`P[
           3]^2 - ((232 $CellContext`q^3) $CellContext`P[2]^2)/((
           3 $CellContext`P[1]^2) $CellContext`P[3]^2) - ((
            14 $CellContext`q^2) $CellContext`P[2]^2)/((
           3 $CellContext`P[1]) $CellContext`P[
            3]^2) + ((3256 $CellContext`q^3) $CellContext`P[2]^2)/((
            3 $CellContext`P[1]) $CellContext`P[3]^2) - (((
             14 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[2]^2)/(
          3 $CellContext`P[
            3]^2) + (((3256 $CellContext`q^3) $CellContext`P[
              1]) $CellContext`P[2]^2)/(
           3 $CellContext`P[3]^2) - (((
             232 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[2]^2)/(
          3 $CellContext`P[3]^2) - ((
            14 $CellContext`q^3) $CellContext`P[2]^3)/(
          3 $CellContext`P[
            3]^2) - ($CellContext`q^3 $CellContext`P[2]^3)/($CellContext`P[
           1] $CellContext`P[
            3]^2) - (($CellContext`q^3 $CellContext`P[1]) $CellContext`P[
             2]^3)/$CellContext`P[3]^2 - 14/(
          3 $CellContext`P[3]) + (3256 $CellContext`q)/(
           3 $CellContext`P[3]) + (43810 $CellContext`q^2)/$CellContext`P[
           3] + (2547976 $CellContext`q^3)/(
           3 $CellContext`P[3]) - $CellContext`q^2/($CellContext`P[
            1]^3 $CellContext`P[3]) - (314 $CellContext`q^3)/((
           3 $CellContext`P[1]^3) $CellContext`P[3]) - (14 $CellContext`q)/((
           3 $CellContext`P[1]^2) $CellContext`P[
           3]) + (3256 $CellContext`q^2)/((
            3 $CellContext`P[1]^2) $CellContext`P[3]) + (
            43810 $CellContext`q^3)/($CellContext`P[1]^2 $CellContext`P[3]) - 
          1/($CellContext`P[1] $CellContext`P[3]) - (314 $CellContext`q)/((
           3 $CellContext`P[1]) $CellContext`P[3]) - (
           40838 $CellContext`q^2)/((3 $CellContext`P[1]) $CellContext`P[
           3]) - (359548 $CellContext`q^3)/($CellContext`P[1] $CellContext`P[
           3]) - $CellContext`P[1]/$CellContext`P[
          3] - ((314 $CellContext`q) $CellContext`P[1])/(
          3 $CellContext`P[
           3]) - ((40838 $CellContext`q^2) $CellContext`P[1])/(
          3 $CellContext`P[
           3]) - ((359548 $CellContext`q^3) $CellContext`P[1])/$CellContext`P[
          3] - ((14 $CellContext`q) $CellContext`P[1]^2)/(
          3 $CellContext`P[
           3]) + ((3256 $CellContext`q^2) $CellContext`P[1]^2)/(
           3 $CellContext`P[
            3]) + ((43810 $CellContext`q^3) $CellContext`P[
              1]^2)/$CellContext`P[
           3] - ($CellContext`q^2 $CellContext`P[1]^3)/$CellContext`P[
          3] - ((314 $CellContext`q^3) $CellContext`P[1]^3)/(
          3 $CellContext`P[
           3]) - $CellContext`q^2/($CellContext`P[2]^3 $CellContext`P[3]) - (
           314 $CellContext`q^3)/((3 $CellContext`P[2]^3) $CellContext`P[
           3]) - $CellContext`q^3/(($CellContext`P[1]^2 $CellContext`P[
             2]^3) $CellContext`P[
           3]) - $CellContext`q^2/(((
            3 $CellContext`P[1]) $CellContext`P[2]^3) $CellContext`P[
           3]) - ($CellContext`q^2 $CellContext`P[1])/((
           3 $CellContext`P[2]^3) $CellContext`P[
           3]) - ($CellContext`q^3 $CellContext`P[1]^2)/($CellContext`P[
            2]^3 $CellContext`P[3]) - (14 $CellContext`q)/((
           3 $CellContext`P[2]^2) $CellContext`P[
           3]) + (3256 $CellContext`q^2)/((
            3 $CellContext`P[2]^2) $CellContext`P[3]) + (
            43810 $CellContext`q^3)/($CellContext`P[2]^2 $CellContext`P[
            3]) - $CellContext`q^3/(($CellContext`P[1]^3 $CellContext`P[
             2]^2) $CellContext`P[3]) - (
           14 $CellContext`q^2)/(((
            3 $CellContext`P[1]^2) $CellContext`P[2]^2) $CellContext`P[
           3]) + (3256 $CellContext`q^3)/(((
             3 $CellContext`P[1]^2) $CellContext`P[2]^2) $CellContext`P[
            3]) - $CellContext`q/(($CellContext`P[
            1] $CellContext`P[2]^2) $CellContext`P[3]) - (
           314 $CellContext`q^2)/(((
            3 $CellContext`P[1]) $CellContext`P[2]^2) $CellContext`P[3]) - (
           40838 $CellContext`q^3)/(((
            3 $CellContext`P[1]) $CellContext`P[2]^2) $CellContext`P[
           3]) - ($CellContext`q $CellContext`P[1])/($CellContext`P[
            2]^2 $CellContext`P[
           3]) - ((314 $CellContext`q^2) $CellContext`P[1])/((
           3 $CellContext`P[2]^2) $CellContext`P[
           3]) - ((40838 $CellContext`q^3) $CellContext`P[1])/((
           3 $CellContext`P[2]^2) $CellContext`P[
           3]) - ((14 $CellContext`q^2) $CellContext`P[1]^2)/((
           3 $CellContext`P[2]^2) $CellContext`P[
           3]) + ((3256 $CellContext`q^3) $CellContext`P[1]^2)/((
            3 $CellContext`P[2]^2) $CellContext`P[
            3]) - ($CellContext`q^3 $CellContext`P[1]^3)/($CellContext`P[
            2]^2 $CellContext`P[3]) - 
          1/($CellContext`P[2] $CellContext`P[3]) - (314 $CellContext`q)/((
           3 $CellContext`P[2]) $CellContext`P[3]) - (
           40838 $CellContext`q^2)/((3 $CellContext`P[2]) $CellContext`P[
           3]) - (359548 $CellContext`q^3)/($CellContext`P[2] $CellContext`P[
           3]) - $CellContext`q^2/(((3 $CellContext`P[1]^3) $CellContext`P[
            2]) $CellContext`P[
           3]) - $CellContext`q/(($CellContext`P[1]^2 $CellContext`P[
            2]) $CellContext`P[3]) - (
           314 $CellContext`q^2)/(((3 $CellContext`P[1]^2) $CellContext`P[
            2]) $CellContext`P[3]) - (
           40838 $CellContext`q^3)/(((3 $CellContext`P[1]^2) $CellContext`P[
            2]) $CellContext`P[3]) - 
          1/(((3 $CellContext`P[1]) $CellContext`P[2]) $CellContext`P[
           3]) + (3073 $CellContext`q^2)/(($CellContext`P[1] $CellContext`P[
             2]) $CellContext`P[3]) + (
            409600 $CellContext`q^3)/(((3 $CellContext`P[1]) $CellContext`P[
             2]) $CellContext`P[3]) - $CellContext`P[1]/((
           3 $CellContext`P[2]) $CellContext`P[
           3]) + ((3073 $CellContext`q^2) $CellContext`P[1])/($CellContext`P[
            2] $CellContext`P[
            3]) + ((409600 $CellContext`q^3) $CellContext`P[1])/((
            3 $CellContext`P[2]) $CellContext`P[
            3]) - ($CellContext`q $CellContext`P[1]^2)/($CellContext`P[
           2] $CellContext`P[
           3]) - ((314 $CellContext`q^2) $CellContext`P[1]^2)/((
           3 $CellContext`P[2]) $CellContext`P[
           3]) - ((40838 $CellContext`q^3) $CellContext`P[1]^2)/((
           3 $CellContext`P[2]) $CellContext`P[
           3]) - ($CellContext`q^2 $CellContext`P[1]^3)/((
           3 $CellContext`P[2]) $CellContext`P[3]) - $CellContext`P[
           2]/$CellContext`P[3] - ((314 $CellContext`q) $CellContext`P[2])/(
          3 $CellContext`P[
           3]) - ((40838 $CellContext`q^2) $CellContext`P[2])/(
          3 $CellContext`P[
           3]) - ((359548 $CellContext`q^3) $CellContext`P[2])/$CellContext`P[
          3] - ($CellContext`q^2 $CellContext`P[2])/((
           3 $CellContext`P[1]^3) $CellContext`P[
           3]) - ($CellContext`q $CellContext`P[2])/($CellContext`P[
            1]^2 $CellContext`P[
           3]) - ((314 $CellContext`q^2) $CellContext`P[2])/((
           3 $CellContext`P[1]^2) $CellContext`P[
           3]) - ((40838 $CellContext`q^3) $CellContext`P[2])/((
           3 $CellContext`P[1]^2) $CellContext`P[3]) - $CellContext`P[2]/((
           3 $CellContext`P[1]) $CellContext`P[
           3]) + ((3073 $CellContext`q^2) $CellContext`P[2])/($CellContext`P[
            1] $CellContext`P[
            3]) + ((409600 $CellContext`q^3) $CellContext`P[2])/((
            3 $CellContext`P[1]) $CellContext`P[3]) - ($CellContext`P[
            1] $CellContext`P[2])/(
          3 $CellContext`P[
           3]) + (((3073 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
             2])/$CellContext`P[
           3] + (((409600 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
             2])/(3 $CellContext`P[
            3]) - (($CellContext`q $CellContext`P[1]^2) $CellContext`P[
            2])/$CellContext`P[
          3] - (((314 $CellContext`q^2) $CellContext`P[1]^2) $CellContext`P[
            2])/(3 $CellContext`P[
           3]) - (((
             40838 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[2])/(
          3 $CellContext`P[
           3]) - (($CellContext`q^2 $CellContext`P[1]^3) $CellContext`P[2])/(
          3 $CellContext`P[3]) - ((14 $CellContext`q) $CellContext`P[2]^2)/(
          3 $CellContext`P[
           3]) + ((3256 $CellContext`q^2) $CellContext`P[2]^2)/(
           3 $CellContext`P[
            3]) + ((43810 $CellContext`q^3) $CellContext`P[
              2]^2)/$CellContext`P[
           3] - ($CellContext`q^3 $CellContext`P[2]^2)/($CellContext`P[
            1]^3 $CellContext`P[
           3]) - ((14 $CellContext`q^2) $CellContext`P[2]^2)/((
           3 $CellContext`P[1]^2) $CellContext`P[
           3]) + ((3256 $CellContext`q^3) $CellContext`P[2]^2)/((
            3 $CellContext`P[1]^2) $CellContext`P[
            3]) - ($CellContext`q $CellContext`P[2]^2)/($CellContext`P[
           1] $CellContext`P[
           3]) - ((314 $CellContext`q^2) $CellContext`P[2]^2)/((
           3 $CellContext`P[1]) $CellContext`P[
           3]) - ((40838 $CellContext`q^3) $CellContext`P[2]^2)/((
           3 $CellContext`P[1]) $CellContext`P[
           3]) - (($CellContext`q $CellContext`P[1]) $CellContext`P[
             2]^2)/$CellContext`P[
          3] - (((314 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
             2]^2)/(3 $CellContext`P[
           3]) - (((40838 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
             2]^2)/(
          3 $CellContext`P[
           3]) - (((14 $CellContext`q^2) $CellContext`P[1]^2) $CellContext`P[
             2]^2)/(3 $CellContext`P[
           3]) + (((
              3256 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[
              2]^2)/(3 $CellContext`P[
            3]) - (($CellContext`q^3 $CellContext`P[1]^3) $CellContext`P[
             2]^2)/$CellContext`P[
          3] - ($CellContext`q^2 $CellContext`P[2]^3)/$CellContext`P[
          3] - ((314 $CellContext`q^3) $CellContext`P[2]^3)/(
          3 $CellContext`P[
           3]) - ($CellContext`q^3 $CellContext`P[2]^3)/($CellContext`P[
            1]^2 $CellContext`P[
           3]) - ($CellContext`q^2 $CellContext`P[2]^3)/((
           3 $CellContext`P[1]) $CellContext`P[
           3]) - (($CellContext`q^2 $CellContext`P[1]) $CellContext`P[2]^3)/(
          3 $CellContext`P[
           3]) - (($CellContext`q^3 $CellContext`P[1]^2) $CellContext`P[
             2]^3)/$CellContext`P[3] - (14 $CellContext`P[3])/
          3 + ((3256 $CellContext`q) $CellContext`P[3])/
           3 + (43810 $CellContext`q^2) $CellContext`P[
            3] + ((2547976 $CellContext`q^3) $CellContext`P[3])/
           3 - ($CellContext`q^2 $CellContext`P[3])/$CellContext`P[
           1]^3 - ((314 $CellContext`q^3) $CellContext`P[3])/(
          3 $CellContext`P[1]^3) - ((14 $CellContext`q) $CellContext`P[3])/(
          3 $CellContext`P[
            1]^2) + ((3256 $CellContext`q^2) $CellContext`P[3])/(
           3 $CellContext`P[1]^2) + ((43810 $CellContext`q^3) $CellContext`P[
             3])/$CellContext`P[1]^2 - $CellContext`P[3]/$CellContext`P[
          1] - ((314 $CellContext`q) $CellContext`P[3])/(
          3 $CellContext`P[
           1]) - ((40838 $CellContext`q^2) $CellContext`P[3])/(
          3 $CellContext`P[
           1]) - ((359548 $CellContext`q^3) $CellContext`P[3])/$CellContext`P[
          1] - $CellContext`P[1] $CellContext`P[
           3] - (((314 $CellContext`q) $CellContext`P[1]) $CellContext`P[3])/
          3 - (((40838 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
            3])/3 - ((359548 $CellContext`q^3) $CellContext`P[
            1]) $CellContext`P[
           3] - (((14 $CellContext`q) $CellContext`P[1]^2) $CellContext`P[3])/
          3 + (((3256 $CellContext`q^2) $CellContext`P[1]^2) $CellContext`P[
             3])/
           3 + ((43810 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[
            3] - ($CellContext`q^2 $CellContext`P[1]^3) $CellContext`P[
           3] - (((314 $CellContext`q^3) $CellContext`P[1]^3) $CellContext`P[
            3])/3 - ($CellContext`q^2 $CellContext`P[3])/$CellContext`P[
           2]^3 - ((314 $CellContext`q^3) $CellContext`P[3])/(
          3 $CellContext`P[2]^3) - ($CellContext`q^3 $CellContext`P[
            3])/($CellContext`P[1]^2 $CellContext`P[
            2]^3) - ($CellContext`q^2 $CellContext`P[3])/((
           3 $CellContext`P[1]) $CellContext`P[
            2]^3) - (($CellContext`q^2 $CellContext`P[1]) $CellContext`P[3])/(
          3 $CellContext`P[
            2]^3) - (($CellContext`q^3 $CellContext`P[1]^2) $CellContext`P[
            3])/$CellContext`P[
           2]^3 - ((14 $CellContext`q) $CellContext`P[3])/(
          3 $CellContext`P[
            2]^2) + ((3256 $CellContext`q^2) $CellContext`P[3])/(
           3 $CellContext`P[2]^2) + ((43810 $CellContext`q^3) $CellContext`P[
             3])/$CellContext`P[2]^2 - ($CellContext`q^3 $CellContext`P[
            3])/($CellContext`P[1]^3 $CellContext`P[2]^2) - ((
            14 $CellContext`q^2) $CellContext`P[3])/((
           3 $CellContext`P[1]^2) $CellContext`P[
            2]^2) + ((3256 $CellContext`q^3) $CellContext`P[3])/((
            3 $CellContext`P[1]^2) $CellContext`P[
             2]^2) - ($CellContext`q $CellContext`P[3])/($CellContext`P[
           1] $CellContext`P[2]^2) - ((314 $CellContext`q^2) $CellContext`P[
            3])/((3 $CellContext`P[1]) $CellContext`P[2]^2) - ((
            40838 $CellContext`q^3) $CellContext`P[3])/((
           3 $CellContext`P[1]) $CellContext`P[
            2]^2) - (($CellContext`q $CellContext`P[1]) $CellContext`P[
            3])/$CellContext`P[
           2]^2 - (((314 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
            3])/(3 $CellContext`P[
            2]^2) - (((40838 $CellContext`q^3) $CellContext`P[
             1]) $CellContext`P[3])/(
          3 $CellContext`P[
            2]^2) - (((
             14 $CellContext`q^2) $CellContext`P[1]^2) $CellContext`P[3])/(
          3 $CellContext`P[
            2]^2) + (((
              3256 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[3])/(
           3 $CellContext`P[
             2]^2) - (($CellContext`q^3 $CellContext`P[1]^3) $CellContext`P[
            3])/$CellContext`P[2]^2 - $CellContext`P[3]/$CellContext`P[
          2] - ((314 $CellContext`q) $CellContext`P[3])/(
          3 $CellContext`P[
           2]) - ((40838 $CellContext`q^2) $CellContext`P[3])/(
          3 $CellContext`P[
           2]) - ((359548 $CellContext`q^3) $CellContext`P[3])/$CellContext`P[
          2] - ($CellContext`q^2 $CellContext`P[3])/((
           3 $CellContext`P[1]^3) $CellContext`P[
           2]) - ($CellContext`q $CellContext`P[3])/($CellContext`P[
            1]^2 $CellContext`P[
           2]) - ((314 $CellContext`q^2) $CellContext`P[3])/((
           3 $CellContext`P[1]^2) $CellContext`P[
           2]) - ((40838 $CellContext`q^3) $CellContext`P[3])/((
           3 $CellContext`P[1]^2) $CellContext`P[2]) - $CellContext`P[3]/((
           3 $CellContext`P[1]) $CellContext`P[
           2]) + ((3073 $CellContext`q^2) $CellContext`P[3])/($CellContext`P[
            1] $CellContext`P[
            2]) + ((409600 $CellContext`q^3) $CellContext`P[3])/((
            3 $CellContext`P[1]) $CellContext`P[2]) - ($CellContext`P[
            1] $CellContext`P[3])/(
          3 $CellContext`P[
           2]) + (((3073 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
             3])/$CellContext`P[
           2] + (((409600 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
             3])/(3 $CellContext`P[
            2]) - (($CellContext`q $CellContext`P[1]^2) $CellContext`P[
            3])/$CellContext`P[
          2] - (((314 $CellContext`q^2) $CellContext`P[1]^2) $CellContext`P[
            3])/(3 $CellContext`P[
           2]) - (((
             40838 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[3])/(
          3 $CellContext`P[
           2]) - (($CellContext`q^2 $CellContext`P[1]^3) $CellContext`P[3])/(
          3 $CellContext`P[2]) - $CellContext`P[2] $CellContext`P[
           3] - (((314 $CellContext`q) $CellContext`P[2]) $CellContext`P[3])/
          3 - (((40838 $CellContext`q^2) $CellContext`P[2]) $CellContext`P[
            3])/3 - ((359548 $CellContext`q^3) $CellContext`P[
            2]) $CellContext`P[
           3] - (($CellContext`q^2 $CellContext`P[2]) $CellContext`P[3])/(
          3 $CellContext`P[
            1]^3) - (($CellContext`q $CellContext`P[2]) $CellContext`P[
            3])/$CellContext`P[
           1]^2 - (((314 $CellContext`q^2) $CellContext`P[2]) $CellContext`P[
            3])/(
          3 $CellContext`P[
            1]^2) - (((40838 $CellContext`q^3) $CellContext`P[
             2]) $CellContext`P[3])/(
          3 $CellContext`P[1]^2) - ($CellContext`P[2] $CellContext`P[3])/(
          3 $CellContext`P[
           1]) + (((3073 $CellContext`q^2) $CellContext`P[2]) $CellContext`P[
             3])/$CellContext`P[
           1] + (((409600 $CellContext`q^3) $CellContext`P[2]) $CellContext`P[
             3])/(3 $CellContext`P[
            1]) - (($CellContext`P[1] $CellContext`P[2]) $CellContext`P[3])/
          3 + (((3073 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
             2]) $CellContext`P[
            3] + ((((409600 $CellContext`q^3) $CellContext`P[
               1]) $CellContext`P[2]) $CellContext`P[3])/
           3 - (($CellContext`q $CellContext`P[1]^2) $CellContext`P[
            2]) $CellContext`P[
           3] - ((((314 $CellContext`q^2) $CellContext`P[1]^2) $CellContext`P[
             2]) $CellContext`P[3])/
          3 - ((((40838 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[
             2]) $CellContext`P[3])/
          3 - ((($CellContext`q^2 $CellContext`P[1]^3) $CellContext`P[
             2]) $CellContext`P[3])/
          3 - (((14 $CellContext`q) $CellContext`P[2]^2) $CellContext`P[3])/
          3 + (((3256 $CellContext`q^2) $CellContext`P[2]^2) $CellContext`P[
             3])/3 + ((
             43810 $CellContext`q^3) $CellContext`P[2]^2) $CellContext`P[
            3] - (($CellContext`q^3 $CellContext`P[2]^2) $CellContext`P[
            3])/$CellContext`P[
           1]^3 - (((14 $CellContext`q^2) $CellContext`P[2]^2) $CellContext`P[
            3])/(3 $CellContext`P[
            1]^2) + (((
              3256 $CellContext`q^3) $CellContext`P[2]^2) $CellContext`P[3])/(
           3 $CellContext`P[
             1]^2) - (($CellContext`q $CellContext`P[2]^2) $CellContext`P[
            3])/$CellContext`P[
          1] - (((314 $CellContext`q^2) $CellContext`P[2]^2) $CellContext`P[
            3])/(3 $CellContext`P[
           1]) - (((
             40838 $CellContext`q^3) $CellContext`P[2]^2) $CellContext`P[3])/(
          3 $CellContext`P[
           1]) - (($CellContext`q $CellContext`P[1]) $CellContext`P[
             2]^2) $CellContext`P[
           3] - ((((314 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
              2]^2) $CellContext`P[3])/
          3 - ((((40838 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
              2]^2) $CellContext`P[3])/
          3 - ((((14 $CellContext`q^2) $CellContext`P[1]^2) $CellContext`P[
              2]^2) $CellContext`P[3])/
          3 + ((((3256 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[
               2]^2) $CellContext`P[3])/
           3 - (($CellContext`q^3 $CellContext`P[1]^3) $CellContext`P[
             2]^2) $CellContext`P[
           3] - ($CellContext`q^2 $CellContext`P[2]^3) $CellContext`P[
           3] - (((314 $CellContext`q^3) $CellContext`P[2]^3) $CellContext`P[
            3])/3 - (($CellContext`q^3 $CellContext`P[2]^3) $CellContext`P[
            3])/$CellContext`P[
           1]^2 - (($CellContext`q^2 $CellContext`P[2]^3) $CellContext`P[3])/(
          3 $CellContext`P[
           1]) - ((($CellContext`q^2 $CellContext`P[1]) $CellContext`P[
              2]^3) $CellContext`P[3])/
          3 - (($CellContext`q^3 $CellContext`P[1]^2) $CellContext`P[
             2]^3) $CellContext`P[
           3] - ((232 $CellContext`q) $CellContext`P[3]^2)/
          3 - (4656 $CellContext`q^2) $CellContext`P[3]^2 - (
           118592 $CellContext`q^3) $CellContext`P[3]^2 - ((
            14 $CellContext`q^3) $CellContext`P[3]^2)/(
          3 $CellContext`P[1]^3) - ((
            232 $CellContext`q^2) $CellContext`P[3]^2)/(
          3 $CellContext`P[1]^2) - ((
            4656 $CellContext`q^3) $CellContext`P[3]^2)/$CellContext`P[
           1]^2 - ((14 $CellContext`q) $CellContext`P[3]^2)/(
          3 $CellContext`P[
           1]) + ((3256 $CellContext`q^2) $CellContext`P[3]^2)/(
           3 $CellContext`P[
            1]) + ((43810 $CellContext`q^3) $CellContext`P[
              3]^2)/$CellContext`P[
           1] - (((14 $CellContext`q) $CellContext`P[1]) $CellContext`P[3]^2)/
          3 + (((3256 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
              3]^2)/3 + ((43810 $CellContext`q^3) $CellContext`P[
             1]) $CellContext`P[3]^2 - (((
             232 $CellContext`q^2) $CellContext`P[1]^2) $CellContext`P[3]^2)/
          3 - ((4656 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[
            3]^2 - (((
             14 $CellContext`q^3) $CellContext`P[1]^3) $CellContext`P[3]^2)/
          3 - ((14 $CellContext`q^3) $CellContext`P[3]^2)/(
          3 $CellContext`P[
            2]^3) - ($CellContext`q^3 $CellContext`P[3]^2)/($CellContext`P[
           1] $CellContext`P[
            2]^3) - (($CellContext`q^3 $CellContext`P[1]) $CellContext`P[
             3]^2)/$CellContext`P[
           2]^3 - ((232 $CellContext`q^2) $CellContext`P[3]^2)/(
          3 $CellContext`P[2]^2) - ((
            4656 $CellContext`q^3) $CellContext`P[3]^2)/$CellContext`P[
           2]^2 - ((232 $CellContext`q^3) $CellContext`P[3]^2)/((
           3 $CellContext`P[1]^2) $CellContext`P[2]^2) - ((
            14 $CellContext`q^2) $CellContext`P[3]^2)/((
           3 $CellContext`P[1]) $CellContext`P[
            2]^2) + ((3256 $CellContext`q^3) $CellContext`P[3]^2)/((
            3 $CellContext`P[1]) $CellContext`P[2]^2) - (((
             14 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[3]^2)/(
          3 $CellContext`P[
            2]^2) + (((3256 $CellContext`q^3) $CellContext`P[
              1]) $CellContext`P[3]^2)/(
           3 $CellContext`P[2]^2) - (((
             232 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[3]^2)/(
          3 $CellContext`P[2]^2) - ((14 $CellContext`q) $CellContext`P[3]^2)/(
          3 $CellContext`P[
           2]) + ((3256 $CellContext`q^2) $CellContext`P[3]^2)/(
           3 $CellContext`P[
            2]) + ((43810 $CellContext`q^3) $CellContext`P[
              3]^2)/$CellContext`P[
           2] - ($CellContext`q^3 $CellContext`P[3]^2)/($CellContext`P[
            1]^3 $CellContext`P[
           2]) - ((14 $CellContext`q^2) $CellContext`P[3]^2)/((
           3 $CellContext`P[1]^2) $CellContext`P[
           2]) + ((3256 $CellContext`q^3) $CellContext`P[3]^2)/((
            3 $CellContext`P[1]^2) $CellContext`P[
            2]) - ($CellContext`q $CellContext`P[3]^2)/($CellContext`P[
           1] $CellContext`P[
           2]) - ((314 $CellContext`q^2) $CellContext`P[3]^2)/((
           3 $CellContext`P[1]) $CellContext`P[
           2]) - ((40838 $CellContext`q^3) $CellContext`P[3]^2)/((
           3 $CellContext`P[1]) $CellContext`P[
           2]) - (($CellContext`q $CellContext`P[1]) $CellContext`P[
             3]^2)/$CellContext`P[
          2] - (((314 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
             3]^2)/(3 $CellContext`P[
           2]) - (((40838 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
             3]^2)/(3 $CellContext`P[
           2]) - (((14 $CellContext`q^2) $CellContext`P[1]^2) $CellContext`P[
             3]^2)/(3 $CellContext`P[
           2]) + (((
              3256 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[
              3]^2)/(3 $CellContext`P[
            2]) - (($CellContext`q^3 $CellContext`P[1]^3) $CellContext`P[
             3]^2)/$CellContext`P[
          2] - (((14 $CellContext`q) $CellContext`P[2]) $CellContext`P[3]^2)/
          3 + (((3256 $CellContext`q^2) $CellContext`P[2]) $CellContext`P[
              3]^2)/3 + ((43810 $CellContext`q^3) $CellContext`P[
             2]) $CellContext`P[3]^2 - (($CellContext`q^3 $CellContext`P[
             2]) $CellContext`P[3]^2)/$CellContext`P[
           1]^3 - (((14 $CellContext`q^2) $CellContext`P[2]) $CellContext`P[
             3]^2)/(3 $CellContext`P[
            1]^2) + (((3256 $CellContext`q^3) $CellContext`P[
              2]) $CellContext`P[3]^2)/(
           3 $CellContext`P[1]^2) - (($CellContext`q $CellContext`P[
             2]) $CellContext`P[3]^2)/$CellContext`P[
          1] - (((314 $CellContext`q^2) $CellContext`P[2]) $CellContext`P[
             3]^2)/(3 $CellContext`P[
           1]) - (((40838 $CellContext`q^3) $CellContext`P[2]) $CellContext`P[
             3]^2)/(3 $CellContext`P[
           1]) - (($CellContext`q $CellContext`P[1]) $CellContext`P[
            2]) $CellContext`P[
            3]^2 - ((((314 $CellContext`q^2) $CellContext`P[
              1]) $CellContext`P[2]) $CellContext`P[3]^2)/
          3 - ((((40838 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
             2]) $CellContext`P[3]^2)/
          3 - ((((14 $CellContext`q^2) $CellContext`P[1]^2) $CellContext`P[
             2]) $CellContext`P[3]^2)/
          3 + ((((3256 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[
              2]) $CellContext`P[3]^2)/
           3 - (($CellContext`q^3 $CellContext`P[1]^3) $CellContext`P[
            2]) $CellContext`P[
            3]^2 - (((
             232 $CellContext`q^2) $CellContext`P[2]^2) $CellContext`P[3]^2)/
          3 - ((4656 $CellContext`q^3) $CellContext`P[2]^2) $CellContext`P[
            3]^2 - (((
             232 $CellContext`q^3) $CellContext`P[2]^2) $CellContext`P[3]^2)/(
          3 $CellContext`P[
            1]^2) - (((
             14 $CellContext`q^2) $CellContext`P[2]^2) $CellContext`P[3]^2)/(
          3 $CellContext`P[
           1]) + (((
              3256 $CellContext`q^3) $CellContext`P[2]^2) $CellContext`P[
              3]^2)/(3 $CellContext`P[
            1]) - ((((14 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
              2]^2) $CellContext`P[3]^2)/
          3 + ((((3256 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
               2]^2) $CellContext`P[3]^2)/
           3 - ((((232 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[
              2]^2) $CellContext`P[3]^2)/
          3 - (((14 $CellContext`q^3) $CellContext`P[2]^3) $CellContext`P[
             3]^2)/3 - (($CellContext`q^3 $CellContext`P[2]^3) $CellContext`P[
             3]^2)/$CellContext`P[
          1] - (($CellContext`q^3 $CellContext`P[1]) $CellContext`P[
             2]^3) $CellContext`P[3]^2 - ((
            14 $CellContext`q^2) $CellContext`P[3]^3)/
          3 + ((3256 $CellContext`q^3) $CellContext`P[3]^3)/
           3 - ((14 $CellContext`q^3) $CellContext`P[3]^3)/(
          3 $CellContext`P[
            1]^2) - ($CellContext`q^2 $CellContext`P[3]^3)/$CellContext`P[
          1] - ((314 $CellContext`q^3) $CellContext`P[3]^3)/(
          3 $CellContext`P[
           1]) - ($CellContext`q^2 $CellContext`P[1]) $CellContext`P[
            3]^3 - (((314 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
             3]^3)/3 - (((
             14 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[3]^3)/
          3 - ((14 $CellContext`q^3) $CellContext`P[3]^3)/(
          3 $CellContext`P[
            2]^2) - ($CellContext`q^3 $CellContext`P[3]^3)/($CellContext`P[
           1] $CellContext`P[
            2]^2) - (($CellContext`q^3 $CellContext`P[1]) $CellContext`P[
             3]^3)/$CellContext`P[
           2]^2 - ($CellContext`q^2 $CellContext`P[3]^3)/$CellContext`P[
          2] - ((314 $CellContext`q^3) $CellContext`P[3]^3)/(
          3 $CellContext`P[
           2]) - ($CellContext`q^3 $CellContext`P[3]^3)/($CellContext`P[
            1]^2 $CellContext`P[
           2]) - ($CellContext`q^2 $CellContext`P[3]^3)/((
           3 $CellContext`P[1]) $CellContext`P[
           2]) - (($CellContext`q^2 $CellContext`P[1]) $CellContext`P[3]^3)/(
          3 $CellContext`P[
           2]) - (($CellContext`q^3 $CellContext`P[1]^2) $CellContext`P[
             3]^3)/$CellContext`P[
          2] - ($CellContext`q^2 $CellContext`P[2]) $CellContext`P[
            3]^3 - (((314 $CellContext`q^3) $CellContext`P[2]) $CellContext`P[
             3]^3)/3 - (($CellContext`q^3 $CellContext`P[2]) $CellContext`P[
             3]^3)/$CellContext`P[
           1]^2 - (($CellContext`q^2 $CellContext`P[2]) $CellContext`P[3]^3)/(
          3 $CellContext`P[
           1]) - ((($CellContext`q^2 $CellContext`P[1]) $CellContext`P[
             2]) $CellContext`P[3]^3)/
          3 - (($CellContext`q^3 $CellContext`P[1]^2) $CellContext`P[
            2]) $CellContext`P[
            3]^3 - (((
             14 $CellContext`q^3) $CellContext`P[2]^2) $CellContext`P[3]^3)/
          3 - (($CellContext`q^3 $CellContext`P[2]^2) $CellContext`P[
             3]^3)/$CellContext`P[
          1] - (($CellContext`q^3 $CellContext`P[1]) $CellContext`P[
             2]^2) $CellContext`P[3]^3, $CellContext`\[Phi][2, LieART`G2] = 
         SeriesData[$CellContext`q, 
           0, {-3 + 1/(2 $CellContext`P[1]) + $CellContext`P[1]/2 + 
            1/(2 $CellContext`P[2]) + 
            1/((2 $CellContext`P[1]) $CellContext`P[2]) + $CellContext`P[2]/
             2 + ($CellContext`P[1] $CellContext`P[2])/2, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -27 + 
            1/(2 $CellContext`P[1]^2) + 7/$CellContext`P[1] + 
            7 $CellContext`P[1] + $CellContext`P[1]^2/2 + 
            1/(2 $CellContext`P[2]^2) + 
            1/((2 $CellContext`P[1]^2) $CellContext`P[2]^2) - 
            3/($CellContext`P[1] $CellContext`P[2]^2) + 7/$CellContext`P[2] - 
            3/($CellContext`P[1]^2 $CellContext`P[2]) + 
            7/($CellContext`P[1] $CellContext`P[2]) - (
             3 $CellContext`P[1])/$CellContext`P[2] + 
            7 $CellContext`P[2] - (3 $CellContext`P[2])/$CellContext`P[
            1] + (7 $CellContext`P[1]) $CellContext`P[2] - (
             3 $CellContext`P[1]^2) $CellContext`P[2] + $CellContext`P[2]^2/
             2 - (3 $CellContext`P[1]) $CellContext`P[
              2]^2 + ($CellContext`P[1]^2 $CellContext`P[2]^2)/2, 0, 0, 0, 0, 
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -162 + 
            7/$CellContext`P[1]^2 + 46/$CellContext`P[1] + 
            46 $CellContext`P[1] + 7 $CellContext`P[1]^2 + 
            1/((2 $CellContext`P[1]^2) $CellContext`P[2]^3) + 
            1/((2 $CellContext`P[1]) $CellContext`P[2]^3) + 
            7/$CellContext`P[2]^2 + 
            1/((2 $CellContext`P[1]^3) $CellContext`P[2]^2) + 
            7/($CellContext`P[1]^2 $CellContext`P[2]^2) - 
            27/($CellContext`P[1] $CellContext`P[2]^2) + $CellContext`P[1]/(
             2 $CellContext`P[2]^2) + 46/$CellContext`P[2] + 
            1/((2 $CellContext`P[1]^3) $CellContext`P[2]) - 
            27/($CellContext`P[1]^2 $CellContext`P[2]) + 
            46/($CellContext`P[1] $CellContext`P[2]) - (
             27 $CellContext`P[1])/$CellContext`P[
            2] + $CellContext`P[1]^2/(2 $CellContext`P[2]) + 
            46 $CellContext`P[2] + $CellContext`P[2]/(
             2 $CellContext`P[1]^2) - (27 $CellContext`P[2])/$CellContext`P[
            1] + (46 $CellContext`P[1]) $CellContext`P[2] - (
             27 $CellContext`P[1]^2) $CellContext`P[
             2] + ($CellContext`P[1]^3 $CellContext`P[2])/2 + 
            7 $CellContext`P[2]^2 + $CellContext`P[2]^2/(
             2 $CellContext`P[1]) - (
             27 $CellContext`P[1]) $CellContext`P[2]^2 + (
              7 $CellContext`P[1]^2) $CellContext`P[
               2]^2 + ($CellContext`P[1]^3 $CellContext`P[2]^2)/
             2 + ($CellContext`P[1] $CellContext`P[2]^3)/
             2 + ($CellContext`P[1]^2 $CellContext`P[2]^3)/2, 0, 0, 0, 0, 0, 
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -756 - 
            3/$CellContext`P[1]^3 + 46/$CellContext`P[1]^2 + 
            231/$CellContext`P[1] + 231 $CellContext`P[1] + 
            46 $CellContext`P[1]^2 - 3 $CellContext`P[1]^3 - 
            3/$CellContext`P[2]^3 - 
            3/($CellContext`P[1]^3 $CellContext`P[2]^3) + 
            7/($CellContext`P[1]^2 $CellContext`P[2]^3) + 
            7/($CellContext`P[1] $CellContext`P[2]^3) + 
            46/$CellContext`P[2]^2 + 
            7/($CellContext`P[1]^3 $CellContext`P[2]^2) + 
            46/($CellContext`P[1]^2 $CellContext`P[2]^2) - 
            162/($CellContext`P[
             1] $CellContext`P[2]^2) + (7 $CellContext`P[1])/$CellContext`P[
              2]^2 + 231/$CellContext`P[2] + 
            7/($CellContext`P[1]^3 $CellContext`P[2]) - 
            162/($CellContext`P[1]^2 $CellContext`P[2]) + 
            231/($CellContext`P[1] $CellContext`P[2]) - (
             162 $CellContext`P[1])/$CellContext`P[
            2] + (7 $CellContext`P[1]^2)/$CellContext`P[2] + 
            231 $CellContext`P[2] + (7 $CellContext`P[2])/$CellContext`P[
              1]^2 - (162 $CellContext`P[2])/$CellContext`P[
            1] + (231 $CellContext`P[1]) $CellContext`P[2] - (
             162 $CellContext`P[1]^2) $CellContext`P[
             2] + (7 $CellContext`P[1]^3) $CellContext`P[2] + 
            46 $CellContext`P[2]^2 + (7 $CellContext`P[2]^2)/$CellContext`P[
             1] - (
             162 $CellContext`P[1]) $CellContext`P[2]^2 + (
              46 $CellContext`P[1]^2) $CellContext`P[2]^2 + (
              7 $CellContext`P[1]^3) $CellContext`P[2]^2 - 
            3 $CellContext`P[2]^3 + (
              7 $CellContext`P[1]) $CellContext`P[2]^3 + (
              7 $CellContext`P[1]^2) $CellContext`P[2]^3 - (
             3 $CellContext`P[1]^3) $CellContext`P[2]^3}, 0, 96, 
           24], $CellContext`\[Phi][2, 
           LieART`Algebra[LieART`A][1]] = 
         SeriesData[$CellContext`q, 0, {
           2 - $CellContext`X^(-1) - $CellContext`X, 0, 0, 0, 0, 0, 0, 0, 0, 
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12 + 
            2/$CellContext`X^2 - 8/$CellContext`X - 8 $CellContext`X + 
            2 $CellContext`X^2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
            0, 0, 0, 0, 0, 0, 0, 0, 56 - $CellContext`X^(-3) + 
            12/$CellContext`X^2 - 39/$CellContext`X - 39 $CellContext`X + 
            12 $CellContext`X^2 - $CellContext`X^3, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 208 - 
            8/$CellContext`X^3 + 56/$CellContext`X^2 - 152/$CellContext`X - 
            152 $CellContext`X + 56 $CellContext`X^2 - 8 $CellContext`X^3}, 0,
            96, 24], $CellContext`\[Phi][2, 
           LieART`Algebra[LieART`A][2]] = 
         SeriesData[$CellContext`q, 
           0, {-3 + 1/(2 $CellContext`P[1]) + $CellContext`P[1]/2 + 
            1/(2 $CellContext`P[2]) + 
            1/((2 $CellContext`P[1]) $CellContext`P[2]) + $CellContext`P[2]/
             2 + ($CellContext`P[1] $CellContext`P[2])/2, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -27 + 
            1/(2 $CellContext`P[1]^2) + 7/$CellContext`P[1] + 
            7 $CellContext`P[1] + $CellContext`P[1]^2/2 + 
            1/(2 $CellContext`P[2]^2) + 
            1/((2 $CellContext`P[1]^2) $CellContext`P[2]^2) - 
            3/($CellContext`P[1] $CellContext`P[2]^2) + 7/$CellContext`P[2] - 
            3/($CellContext`P[1]^2 $CellContext`P[2]) + 
            7/($CellContext`P[1] $CellContext`P[2]) - (
             3 $CellContext`P[1])/$CellContext`P[2] + 
            7 $CellContext`P[2] - (3 $CellContext`P[2])/$CellContext`P[
            1] + (7 $CellContext`P[1]) $CellContext`P[2] - (
             3 $CellContext`P[1]^2) $CellContext`P[2] + $CellContext`P[2]^2/
             2 - (3 $CellContext`P[1]) $CellContext`P[
              2]^2 + ($CellContext`P[1]^2 $CellContext`P[2]^2)/2, 0, 0, 0, 0, 
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -162 + 
            7/$CellContext`P[1]^2 + 46/$CellContext`P[1] + 
            46 $CellContext`P[1] + 7 $CellContext`P[1]^2 + 
            1/((2 $CellContext`P[1]^2) $CellContext`P[2]^3) + 
            1/((2 $CellContext`P[1]) $CellContext`P[2]^3) + 
            7/$CellContext`P[2]^2 + 
            1/((2 $CellContext`P[1]^3) $CellContext`P[2]^2) + 
            7/($CellContext`P[1]^2 $CellContext`P[2]^2) - 
            27/($CellContext`P[1] $CellContext`P[2]^2) + $CellContext`P[1]/(
             2 $CellContext`P[2]^2) + 46/$CellContext`P[2] + 
            1/((2 $CellContext`P[1]^3) $CellContext`P[2]) - 
            27/($CellContext`P[1]^2 $CellContext`P[2]) + 
            46/($CellContext`P[1] $CellContext`P[2]) - (
             27 $CellContext`P[1])/$CellContext`P[
            2] + $CellContext`P[1]^2/(2 $CellContext`P[2]) + 
            46 $CellContext`P[2] + $CellContext`P[2]/(
             2 $CellContext`P[1]^2) - (27 $CellContext`P[2])/$CellContext`P[
            1] + (46 $CellContext`P[1]) $CellContext`P[2] - (
             27 $CellContext`P[1]^2) $CellContext`P[
             2] + ($CellContext`P[1]^3 $CellContext`P[2])/2 + 
            7 $CellContext`P[2]^2 + $CellContext`P[2]^2/(
             2 $CellContext`P[1]) - (
             27 $CellContext`P[1]) $CellContext`P[2]^2 + (
              7 $CellContext`P[1]^2) $CellContext`P[
               2]^2 + ($CellContext`P[1]^3 $CellContext`P[2]^2)/
             2 + ($CellContext`P[1] $CellContext`P[2]^3)/
             2 + ($CellContext`P[1]^2 $CellContext`P[2]^3)/2, 0, 0, 0, 0, 0, 
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -756 - 
            3/$CellContext`P[1]^3 + 46/$CellContext`P[1]^2 + 
            231/$CellContext`P[1] + 231 $CellContext`P[1] + 
            46 $CellContext`P[1]^2 - 3 $CellContext`P[1]^3 - 
            3/$CellContext`P[2]^3 - 
            3/($CellContext`P[1]^3 $CellContext`P[2]^3) + 
            7/($CellContext`P[1]^2 $CellContext`P[2]^3) + 
            7/($CellContext`P[1] $CellContext`P[2]^3) + 
            46/$CellContext`P[2]^2 + 
            7/($CellContext`P[1]^3 $CellContext`P[2]^2) + 
            46/($CellContext`P[1]^2 $CellContext`P[2]^2) - 
            162/($CellContext`P[
             1] $CellContext`P[2]^2) + (7 $CellContext`P[1])/$CellContext`P[
              2]^2 + 231/$CellContext`P[2] + 
            7/($CellContext`P[1]^3 $CellContext`P[2]) - 
            162/($CellContext`P[1]^2 $CellContext`P[2]) + 
            231/($CellContext`P[1] $CellContext`P[2]) - (
             162 $CellContext`P[1])/$CellContext`P[
            2] + (7 $CellContext`P[1]^2)/$CellContext`P[2] + 
            231 $CellContext`P[2] + (7 $CellContext`P[2])/$CellContext`P[
              1]^2 - (162 $CellContext`P[2])/$CellContext`P[
            1] + (231 $CellContext`P[1]) $CellContext`P[2] - (
             162 $CellContext`P[1]^2) $CellContext`P[
             2] + (7 $CellContext`P[1]^3) $CellContext`P[2] + 
            46 $CellContext`P[2]^2 + (7 $CellContext`P[2]^2)/$CellContext`P[
             1] - (162 $CellContext`P[1]) $CellContext`P[2]^2 + (
              46 $CellContext`P[1]^2) $CellContext`P[2]^2 + (
              7 $CellContext`P[1]^3) $CellContext`P[2]^2 - 
            3 $CellContext`P[2]^3 + (
              7 $CellContext`P[1]) $CellContext`P[2]^3 + (
              7 $CellContext`P[1]^2) $CellContext`P[2]^3 - (
             3 $CellContext`P[1]^3) $CellContext`P[2]^3}, 0, 96, 
           24], $CellContext`\[Phi][2, 
           LieART`Algebra[LieART`B][3]] = 
         512 + 16896 $CellContext`q + 297984 $CellContext`q^2 + 
          3581952 $CellContext`q^3 - (56 $CellContext`q^2)/$CellContext`P[
           1]^3 - (5600 $CellContext`q^3)/$CellContext`P[
           1]^3 + (512 $CellContext`q)/$CellContext`P[1]^2 + (
            16896 $CellContext`q^2)/$CellContext`P[1]^2 + (
            297984 $CellContext`q^3)/$CellContext`P[1]^2 - 56/$CellContext`P[
          1] - (5600 $CellContext`q)/$CellContext`P[
          1] - (131112 $CellContext`q^2)/$CellContext`P[
          1] - (1824800 $CellContext`q^3)/$CellContext`P[1] - 
          56 $CellContext`P[1] - (5600 $CellContext`q) $CellContext`P[1] - (
           131112 $CellContext`q^2) $CellContext`P[1] - (
           1824800 $CellContext`q^3) $CellContext`P[
           1] + (512 $CellContext`q) $CellContext`P[1]^2 + (
            16896 $CellContext`q^2) $CellContext`P[1]^2 + (
            297984 $CellContext`q^3) $CellContext`P[1]^2 - (
           56 $CellContext`q^2) $CellContext`P[1]^3 - (
           5600 $CellContext`q^3) $CellContext`P[1]^3 - (
           56 $CellContext`q^2)/$CellContext`P[2]^3 - (
           5600 $CellContext`q^3)/$CellContext`P[2]^3 - (
           56 $CellContext`q^3)/($CellContext`P[1]^2 $CellContext`P[2]^3) - (
           12 $CellContext`q^2)/($CellContext`P[
           1] $CellContext`P[2]^3) + (1336 $CellContext`q^3)/($CellContext`P[
            1] $CellContext`P[2]^3) - ((12 $CellContext`q^2) $CellContext`P[
            1])/$CellContext`P[
           2]^3 + ((1336 $CellContext`q^3) $CellContext`P[1])/$CellContext`P[
            2]^3 - ((56 $CellContext`q^3) $CellContext`P[1]^2)/$CellContext`P[
           2]^3 + (512 $CellContext`q)/$CellContext`P[2]^2 + (
            16896 $CellContext`q^2)/$CellContext`P[2]^2 + (
            297984 $CellContext`q^3)/$CellContext`P[2]^2 - (
           56 $CellContext`q^3)/($CellContext`P[1]^3 $CellContext`P[2]^2) + (
            512 $CellContext`q^2)/($CellContext`P[1]^2 $CellContext`P[
             2]^2) + (
            16896 $CellContext`q^3)/($CellContext`P[1]^2 $CellContext`P[
             2]^2) - (56 $CellContext`q)/($CellContext`P[
           1] $CellContext`P[2]^2) - (5600 $CellContext`q^2)/($CellContext`P[
           1] $CellContext`P[2]^2) - (
           131112 $CellContext`q^3)/($CellContext`P[
           1] $CellContext`P[2]^2) - ((56 $CellContext`q) $CellContext`P[
            1])/$CellContext`P[
           2]^2 - ((5600 $CellContext`q^2) $CellContext`P[1])/$CellContext`P[
           2]^2 - ((131112 $CellContext`q^3) $CellContext`P[
            1])/$CellContext`P[
           2]^2 + ((512 $CellContext`q^2) $CellContext`P[1]^2)/$CellContext`P[
            2]^2 + ((
             16896 $CellContext`q^3) $CellContext`P[1]^2)/$CellContext`P[
            2]^2 - ((56 $CellContext`q^3) $CellContext`P[1]^3)/$CellContext`P[
           2]^2 - 56/$CellContext`P[2] - (5600 $CellContext`q)/$CellContext`P[
          2] - (131112 $CellContext`q^2)/$CellContext`P[
          2] - (1824800 $CellContext`q^3)/$CellContext`P[
          2] - (12 $CellContext`q^2)/($CellContext`P[1]^3 $CellContext`P[
           2]) + (1336 $CellContext`q^3)/($CellContext`P[1]^3 $CellContext`P[
            2]) - (56 $CellContext`q)/($CellContext`P[1]^2 $CellContext`P[
           2]) - (5600 $CellContext`q^2)/($CellContext`P[1]^2 $CellContext`P[
           2]) - (
           131112 $CellContext`q^3)/($CellContext`P[1]^2 $CellContext`P[2]) - 
          12/($CellContext`P[1] $CellContext`P[
           2]) + (1336 $CellContext`q)/($CellContext`P[1] $CellContext`P[
            2]) + (52168 $CellContext`q^2)/($CellContext`P[1] $CellContext`P[
            2]) + (885936 $CellContext`q^3)/($CellContext`P[1] $CellContext`P[
            2]) - (12 $CellContext`P[1])/$CellContext`P[
          2] + ((1336 $CellContext`q) $CellContext`P[1])/$CellContext`P[
           2] + ((52168 $CellContext`q^2) $CellContext`P[1])/$CellContext`P[
           2] + ((885936 $CellContext`q^3) $CellContext`P[1])/$CellContext`P[
           2] - ((56 $CellContext`q) $CellContext`P[1]^2)/$CellContext`P[
          2] - ((5600 $CellContext`q^2) $CellContext`P[1]^2)/$CellContext`P[
          2] - ((131112 $CellContext`q^3) $CellContext`P[1]^2)/$CellContext`P[
          2] - ((12 $CellContext`q^2) $CellContext`P[1]^3)/$CellContext`P[
          2] + ((1336 $CellContext`q^3) $CellContext`P[1]^3)/$CellContext`P[
           2] - 56 $CellContext`P[2] - (5600 $CellContext`q) $CellContext`P[
           2] - (131112 $CellContext`q^2) $CellContext`P[2] - (
           1824800 $CellContext`q^3) $CellContext`P[
           2] - ((12 $CellContext`q^2) $CellContext`P[2])/$CellContext`P[
           1]^3 + ((1336 $CellContext`q^3) $CellContext`P[2])/$CellContext`P[
            1]^3 - ((56 $CellContext`q) $CellContext`P[2])/$CellContext`P[
           1]^2 - ((5600 $CellContext`q^2) $CellContext`P[2])/$CellContext`P[
           1]^2 - ((131112 $CellContext`q^3) $CellContext`P[
            2])/$CellContext`P[1]^2 - (12 $CellContext`P[2])/$CellContext`P[
          1] + ((1336 $CellContext`q) $CellContext`P[2])/$CellContext`P[
           1] + ((52168 $CellContext`q^2) $CellContext`P[2])/$CellContext`P[
           1] + ((885936 $CellContext`q^3) $CellContext`P[2])/$CellContext`P[
           1] - (12 $CellContext`P[1]) $CellContext`P[
           2] + ((1336 $CellContext`q) $CellContext`P[1]) $CellContext`P[
            2] + ((52168 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
            2] + ((885936 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
            2] - ((56 $CellContext`q) $CellContext`P[1]^2) $CellContext`P[
           2] - ((5600 $CellContext`q^2) $CellContext`P[1]^2) $CellContext`P[
           2] - ((131112 $CellContext`q^3) $CellContext`P[
             1]^2) $CellContext`P[
           2] - ((12 $CellContext`q^2) $CellContext`P[1]^3) $CellContext`P[
           2] + ((1336 $CellContext`q^3) $CellContext`P[1]^3) $CellContext`P[
            2] + (512 $CellContext`q) $CellContext`P[2]^2 + (
            16896 $CellContext`q^2) $CellContext`P[2]^2 + (
            297984 $CellContext`q^3) $CellContext`P[2]^2 - ((
            56 $CellContext`q^3) $CellContext`P[2]^2)/$CellContext`P[
           1]^3 + ((512 $CellContext`q^2) $CellContext`P[2]^2)/$CellContext`P[
            1]^2 + ((
             16896 $CellContext`q^3) $CellContext`P[2]^2)/$CellContext`P[
            1]^2 - ((56 $CellContext`q) $CellContext`P[2]^2)/$CellContext`P[
          1] - ((5600 $CellContext`q^2) $CellContext`P[2]^2)/$CellContext`P[
          1] - ((131112 $CellContext`q^3) $CellContext`P[2]^2)/$CellContext`P[
          1] - ((56 $CellContext`q) $CellContext`P[1]) $CellContext`P[
            2]^2 - ((5600 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
            2]^2 - ((131112 $CellContext`q^3) $CellContext`P[
            1]) $CellContext`P[
            2]^2 + ((
             512 $CellContext`q^2) $CellContext`P[1]^2) $CellContext`P[
             2]^2 + ((
             16896 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[
             2]^2 - ((
            56 $CellContext`q^3) $CellContext`P[1]^3) $CellContext`P[2]^2 - (
           56 $CellContext`q^2) $CellContext`P[2]^3 - (
           5600 $CellContext`q^3) $CellContext`P[2]^3 - ((
            56 $CellContext`q^3) $CellContext`P[2]^3)/$CellContext`P[
           1]^2 - ((12 $CellContext`q^2) $CellContext`P[2]^3)/$CellContext`P[
          1] + ((1336 $CellContext`q^3) $CellContext`P[2]^3)/$CellContext`P[
           1] - ((12 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
            2]^3 + ((1336 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
             2]^3 - ((
            56 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[2]^3 - (
           56 $CellContext`q^2)/$CellContext`P[3]^3 - (
           5600 $CellContext`q^3)/$CellContext`P[3]^3 - (
           56 $CellContext`q^3)/($CellContext`P[1]^2 $CellContext`P[3]^3) - (
           12 $CellContext`q^2)/($CellContext`P[
           1] $CellContext`P[3]^3) + (1336 $CellContext`q^3)/($CellContext`P[
            1] $CellContext`P[3]^3) - ((12 $CellContext`q^2) $CellContext`P[
            1])/$CellContext`P[
           3]^3 + ((1336 $CellContext`q^3) $CellContext`P[1])/$CellContext`P[
            3]^3 - ((56 $CellContext`q^3) $CellContext`P[1]^2)/$CellContext`P[
           3]^3 - (56 $CellContext`q^3)/($CellContext`P[2]^2 $CellContext`P[
            3]^3) - (
           12 $CellContext`q^3)/(($CellContext`P[
            1] $CellContext`P[2]^2) $CellContext`P[3]^3) - ((
            12 $CellContext`q^3) $CellContext`P[1])/($CellContext`P[
            2]^2 $CellContext`P[3]^3) - (12 $CellContext`q^2)/($CellContext`P[
           2] $CellContext`P[3]^3) + (1336 $CellContext`q^3)/($CellContext`P[
            2] $CellContext`P[3]^3) - (
           12 $CellContext`q^3)/(($CellContext`P[1]^2 $CellContext`P[
            2]) $CellContext`P[3]^3) - (
           4 $CellContext`q^2)/(($CellContext`P[1] $CellContext`P[
            2]) $CellContext`P[3]^3) - (
           96 $CellContext`q^3)/(($CellContext`P[1] $CellContext`P[
            2]) $CellContext`P[3]^3) - ((4 $CellContext`q^2) $CellContext`P[
            1])/($CellContext`P[
           2] $CellContext`P[3]^3) - ((96 $CellContext`q^3) $CellContext`P[
            1])/($CellContext`P[
           2] $CellContext`P[3]^3) - ((
            12 $CellContext`q^3) $CellContext`P[1]^2)/($CellContext`P[
           2] $CellContext`P[3]^3) - ((12 $CellContext`q^2) $CellContext`P[
            2])/$CellContext`P[
           3]^3 + ((1336 $CellContext`q^3) $CellContext`P[2])/$CellContext`P[
            3]^3 - ((12 $CellContext`q^3) $CellContext`P[2])/($CellContext`P[
            1]^2 $CellContext`P[3]^3) - ((4 $CellContext`q^2) $CellContext`P[
            2])/($CellContext`P[
           1] $CellContext`P[3]^3) - ((96 $CellContext`q^3) $CellContext`P[
            2])/($CellContext`P[
           1] $CellContext`P[
            3]^3) - (((4 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
            2])/$CellContext`P[
           3]^3 - (((96 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
            2])/$CellContext`P[
           3]^3 - (((12 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[
            2])/$CellContext`P[
           3]^3 - ((56 $CellContext`q^3) $CellContext`P[2]^2)/$CellContext`P[
           3]^3 - ((12 $CellContext`q^3) $CellContext`P[2]^2)/($CellContext`P[
           1] $CellContext`P[
            3]^3) - (((12 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
             2]^2)/$CellContext`P[
           3]^3 + (512 $CellContext`q)/$CellContext`P[3]^2 + (
            16896 $CellContext`q^2)/$CellContext`P[3]^2 + (
            297984 $CellContext`q^3)/$CellContext`P[3]^2 - (
           56 $CellContext`q^3)/($CellContext`P[1]^3 $CellContext`P[3]^2) + (
            512 $CellContext`q^2)/($CellContext`P[1]^2 $CellContext`P[
             3]^2) + (
            16896 $CellContext`q^3)/($CellContext`P[1]^2 $CellContext`P[
             3]^2) - (56 $CellContext`q)/($CellContext`P[
           1] $CellContext`P[3]^2) - (5600 $CellContext`q^2)/($CellContext`P[
           1] $CellContext`P[3]^2) - (
           131112 $CellContext`q^3)/($CellContext`P[
           1] $CellContext`P[3]^2) - ((56 $CellContext`q) $CellContext`P[
            1])/$CellContext`P[
           3]^2 - ((5600 $CellContext`q^2) $CellContext`P[1])/$CellContext`P[
           3]^2 - ((131112 $CellContext`q^3) $CellContext`P[
            1])/$CellContext`P[
           3]^2 + ((512 $CellContext`q^2) $CellContext`P[1]^2)/$CellContext`P[
            3]^2 + ((
             16896 $CellContext`q^3) $CellContext`P[1]^2)/$CellContext`P[
            3]^2 - ((56 $CellContext`q^3) $CellContext`P[1]^3)/$CellContext`P[
           3]^2 - (56 $CellContext`q^3)/($CellContext`P[2]^3 $CellContext`P[
            3]^2) - (
           12 $CellContext`q^3)/(($CellContext`P[
            1] $CellContext`P[2]^3) $CellContext`P[3]^2) - ((
            12 $CellContext`q^3) $CellContext`P[1])/($CellContext`P[
            2]^3 $CellContext`P[3]^2) + (
            512 $CellContext`q^2)/($CellContext`P[2]^2 $CellContext`P[
             3]^2) + (
            16896 $CellContext`q^3)/($CellContext`P[2]^2 $CellContext`P[
             3]^2) + (
            512 $CellContext`q^3)/(($CellContext`P[1]^2 $CellContext`P[
              2]^2) $CellContext`P[3]^2) - (
           56 $CellContext`q^2)/(($CellContext`P[
            1] $CellContext`P[2]^2) $CellContext`P[3]^2) - (
           5600 $CellContext`q^3)/(($CellContext`P[
            1] $CellContext`P[2]^2) $CellContext`P[3]^2) - ((
            56 $CellContext`q^2) $CellContext`P[1])/($CellContext`P[
            2]^2 $CellContext`P[3]^2) - ((
            5600 $CellContext`q^3) $CellContext`P[1])/($CellContext`P[
            2]^2 $CellContext`P[
            3]^2) + ((
             512 $CellContext`q^3) $CellContext`P[1]^2)/($CellContext`P[
             2]^2 $CellContext`P[3]^2) - (56 $CellContext`q)/($CellContext`P[
           2] $CellContext`P[3]^2) - (5600 $CellContext`q^2)/($CellContext`P[
           2] $CellContext`P[3]^2) - (
           131112 $CellContext`q^3)/($CellContext`P[
           2] $CellContext`P[3]^2) - (
           12 $CellContext`q^3)/(($CellContext`P[1]^3 $CellContext`P[
            2]) $CellContext`P[3]^2) - (
           56 $CellContext`q^2)/(($CellContext`P[1]^2 $CellContext`P[
            2]) $CellContext`P[3]^2) - (
           5600 $CellContext`q^3)/(($CellContext`P[1]^2 $CellContext`P[
            2]) $CellContext`P[3]^2) - (
           12 $CellContext`q)/(($CellContext`P[1] $CellContext`P[
            2]) $CellContext`P[3]^2) + (
            1336 $CellContext`q^2)/(($CellContext`P[1] $CellContext`P[
             2]) $CellContext`P[3]^2) + (
            52168 $CellContext`q^3)/(($CellContext`P[1] $CellContext`P[
             2]) $CellContext`P[3]^2) - ((12 $CellContext`q) $CellContext`P[
            1])/($CellContext`P[
           2] $CellContext`P[
            3]^2) + ((1336 $CellContext`q^2) $CellContext`P[
             1])/($CellContext`P[
            2] $CellContext`P[3]^2) + ((
             52168 $CellContext`q^3) $CellContext`P[1])/($CellContext`P[
            2] $CellContext`P[3]^2) - ((
            56 $CellContext`q^2) $CellContext`P[1]^2)/($CellContext`P[
           2] $CellContext`P[3]^2) - ((
            5600 $CellContext`q^3) $CellContext`P[1]^2)/($CellContext`P[
           2] $CellContext`P[3]^2) - ((
            12 $CellContext`q^3) $CellContext`P[1]^3)/($CellContext`P[
           2] $CellContext`P[3]^2) - ((56 $CellContext`q) $CellContext`P[
            2])/$CellContext`P[
           3]^2 - ((5600 $CellContext`q^2) $CellContext`P[2])/$CellContext`P[
           3]^2 - ((131112 $CellContext`q^3) $CellContext`P[
            2])/$CellContext`P[
           3]^2 - ((12 $CellContext`q^3) $CellContext`P[2])/($CellContext`P[
            1]^3 $CellContext`P[3]^2) - ((56 $CellContext`q^2) $CellContext`P[
            2])/($CellContext`P[1]^2 $CellContext`P[3]^2) - ((
            5600 $CellContext`q^3) $CellContext`P[2])/($CellContext`P[
            1]^2 $CellContext`P[3]^2) - ((12 $CellContext`q) $CellContext`P[
            2])/($CellContext`P[
           1] $CellContext`P[
            3]^2) + ((1336 $CellContext`q^2) $CellContext`P[
             2])/($CellContext`P[
            1] $CellContext`P[3]^2) + ((
             52168 $CellContext`q^3) $CellContext`P[2])/($CellContext`P[
            1] $CellContext`P[3]^2) - (((12 $CellContext`q) $CellContext`P[
             1]) $CellContext`P[2])/$CellContext`P[
           3]^2 + (((1336 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
             2])/$CellContext`P[
            3]^2 + (((52168 $CellContext`q^3) $CellContext`P[
              1]) $CellContext`P[2])/$CellContext`P[
            3]^2 - (((
             56 $CellContext`q^2) $CellContext`P[1]^2) $CellContext`P[
            2])/$CellContext`P[
           3]^2 - (((
             5600 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[
            2])/$CellContext`P[
           3]^2 - (((12 $CellContext`q^3) $CellContext`P[1]^3) $CellContext`P[
            2])/$CellContext`P[
           3]^2 + ((512 $CellContext`q^2) $CellContext`P[2]^2)/$CellContext`P[
            3]^2 + ((
             16896 $CellContext`q^3) $CellContext`P[2]^2)/$CellContext`P[
            3]^2 + ((
             512 $CellContext`q^3) $CellContext`P[2]^2)/($CellContext`P[
             1]^2 $CellContext`P[3]^2) - ((
            56 $CellContext`q^2) $CellContext`P[2]^2)/($CellContext`P[
           1] $CellContext`P[3]^2) - ((
            5600 $CellContext`q^3) $CellContext`P[2]^2)/($CellContext`P[
           1] $CellContext`P[
            3]^2) - (((56 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
             2]^2)/$CellContext`P[
           3]^2 - (((5600 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
             2]^2)/$CellContext`P[
           3]^2 + (((
              512 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[
              2]^2)/$CellContext`P[3]^2 - ((
            56 $CellContext`q^3) $CellContext`P[2]^3)/$CellContext`P[
           3]^2 - ((12 $CellContext`q^3) $CellContext`P[2]^3)/($CellContext`P[
           1] $CellContext`P[
            3]^2) - (((12 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
             2]^3)/$CellContext`P[3]^2 - 56/$CellContext`P[
          3] - (5600 $CellContext`q)/$CellContext`P[
          3] - (131112 $CellContext`q^2)/$CellContext`P[
          3] - (1824800 $CellContext`q^3)/$CellContext`P[
          3] - (12 $CellContext`q^2)/($CellContext`P[1]^3 $CellContext`P[
           3]) + (1336 $CellContext`q^3)/($CellContext`P[1]^3 $CellContext`P[
            3]) - (56 $CellContext`q)/($CellContext`P[1]^2 $CellContext`P[
           3]) - (5600 $CellContext`q^2)/($CellContext`P[1]^2 $CellContext`P[
           3]) - (131112 $CellContext`q^3)/($CellContext`P[
            1]^2 $CellContext`P[3]) - 
          12/($CellContext`P[1] $CellContext`P[
           3]) + (1336 $CellContext`q)/($CellContext`P[1] $CellContext`P[
            3]) + (52168 $CellContext`q^2)/($CellContext`P[1] $CellContext`P[
            3]) + (885936 $CellContext`q^3)/($CellContext`P[1] $CellContext`P[
            3]) - (12 $CellContext`P[1])/$CellContext`P[
          3] + ((1336 $CellContext`q) $CellContext`P[1])/$CellContext`P[
           3] + ((52168 $CellContext`q^2) $CellContext`P[1])/$CellContext`P[
           3] + ((885936 $CellContext`q^3) $CellContext`P[1])/$CellContext`P[
           3] - ((56 $CellContext`q) $CellContext`P[1]^2)/$CellContext`P[
          3] - ((5600 $CellContext`q^2) $CellContext`P[1]^2)/$CellContext`P[
          3] - ((131112 $CellContext`q^3) $CellContext`P[1]^2)/$CellContext`P[
          3] - ((12 $CellContext`q^2) $CellContext`P[1]^3)/$CellContext`P[
          3] + ((1336 $CellContext`q^3) $CellContext`P[1]^3)/$CellContext`P[
           3] - (12 $CellContext`q^2)/($CellContext`P[2]^3 $CellContext`P[
           3]) + (1336 $CellContext`q^3)/($CellContext`P[2]^3 $CellContext`P[
            3]) - (12 $CellContext`q^3)/(($CellContext`P[1]^2 $CellContext`P[
             2]^3) $CellContext`P[3]) - (
           4 $CellContext`q^2)/(($CellContext`P[
            1] $CellContext`P[2]^3) $CellContext`P[3]) - (
           96 $CellContext`q^3)/(($CellContext`P[
            1] $CellContext`P[2]^3) $CellContext`P[
           3]) - ((4 $CellContext`q^2) $CellContext`P[1])/($CellContext`P[
            2]^3 $CellContext`P[
           3]) - ((96 $CellContext`q^3) $CellContext`P[1])/($CellContext`P[
            2]^3 $CellContext`P[
           3]) - ((12 $CellContext`q^3) $CellContext`P[1]^2)/($CellContext`P[
            2]^3 $CellContext`P[3]) - (
           56 $CellContext`q)/($CellContext`P[2]^2 $CellContext`P[3]) - (
           5600 $CellContext`q^2)/($CellContext`P[2]^2 $CellContext`P[3]) - (
           131112 $CellContext`q^3)/($CellContext`P[2]^2 $CellContext`P[
           3]) - (12 $CellContext`q^3)/(($CellContext`P[1]^3 $CellContext`P[
             2]^2) $CellContext`P[3]) - (
           56 $CellContext`q^2)/(($CellContext`P[1]^2 $CellContext`P[
             2]^2) $CellContext`P[3]) - (
           5600 $CellContext`q^3)/(($CellContext`P[1]^2 $CellContext`P[
             2]^2) $CellContext`P[3]) - (
           12 $CellContext`q)/(($CellContext`P[
            1] $CellContext`P[2]^2) $CellContext`P[
           3]) + (1336 $CellContext`q^2)/(($CellContext`P[
             1] $CellContext`P[2]^2) $CellContext`P[3]) + (
            52168 $CellContext`q^3)/(($CellContext`P[
             1] $CellContext`P[2]^2) $CellContext`P[3]) - ((
            12 $CellContext`q) $CellContext`P[1])/($CellContext`P[
            2]^2 $CellContext`P[
           3]) + ((1336 $CellContext`q^2) $CellContext`P[1])/($CellContext`P[
             2]^2 $CellContext`P[
            3]) + ((52168 $CellContext`q^3) $CellContext`P[
             1])/($CellContext`P[2]^2 $CellContext`P[3]) - ((
            56 $CellContext`q^2) $CellContext`P[1]^2)/($CellContext`P[
            2]^2 $CellContext`P[
           3]) - ((5600 $CellContext`q^3) $CellContext`P[
             1]^2)/($CellContext`P[2]^2 $CellContext`P[
           3]) - ((12 $CellContext`q^3) $CellContext`P[1]^3)/($CellContext`P[
            2]^2 $CellContext`P[3]) - 
          12/($CellContext`P[2] $CellContext`P[
           3]) + (1336 $CellContext`q)/($CellContext`P[2] $CellContext`P[
            3]) + (52168 $CellContext`q^2)/($CellContext`P[2] $CellContext`P[
            3]) + (885936 $CellContext`q^3)/($CellContext`P[2] $CellContext`P[
            3]) - (4 $CellContext`q^2)/(($CellContext`P[1]^3 $CellContext`P[
            2]) $CellContext`P[3]) - (
           96 $CellContext`q^3)/(($CellContext`P[1]^3 $CellContext`P[
            2]) $CellContext`P[3]) - (
           12 $CellContext`q)/(($CellContext`P[1]^2 $CellContext`P[
            2]) $CellContext`P[
           3]) + (1336 $CellContext`q^2)/(($CellContext`P[1]^2 $CellContext`P[
             2]) $CellContext`P[3]) + (
            52168 $CellContext`q^3)/(($CellContext`P[1]^2 $CellContext`P[
             2]) $CellContext`P[3]) - 
          4/(($CellContext`P[1] $CellContext`P[2]) $CellContext`P[3]) - (
           96 $CellContext`q)/(($CellContext`P[1] $CellContext`P[
            2]) $CellContext`P[3]) - (
           17556 $CellContext`q^2)/(($CellContext`P[1] $CellContext`P[
            2]) $CellContext`P[3]) - (
           403040 $CellContext`q^3)/(($CellContext`P[1] $CellContext`P[
            2]) $CellContext`P[3]) - (4 $CellContext`P[1])/($CellContext`P[
           2] $CellContext`P[
           3]) - ((96 $CellContext`q) $CellContext`P[1])/($CellContext`P[
           2] $CellContext`P[
           3]) - ((17556 $CellContext`q^2) $CellContext`P[1])/($CellContext`P[
           2] $CellContext`P[
           3]) - ((403040 $CellContext`q^3) $CellContext`P[
            1])/($CellContext`P[2] $CellContext`P[
           3]) - ((12 $CellContext`q) $CellContext`P[1]^2)/($CellContext`P[
           2] $CellContext`P[
           3]) + ((1336 $CellContext`q^2) $CellContext`P[
              1]^2)/($CellContext`P[2] $CellContext`P[
            3]) + ((52168 $CellContext`q^3) $CellContext`P[
              1]^2)/($CellContext`P[2] $CellContext`P[3]) - ((
            4 $CellContext`q^2) $CellContext`P[1]^3)/($CellContext`P[
           2] $CellContext`P[
           3]) - ((96 $CellContext`q^3) $CellContext`P[1]^3)/($CellContext`P[
           2] $CellContext`P[3]) - (12 $CellContext`P[2])/$CellContext`P[
          3] + ((1336 $CellContext`q) $CellContext`P[2])/$CellContext`P[
           3] + ((52168 $CellContext`q^2) $CellContext`P[2])/$CellContext`P[
           3] + ((885936 $CellContext`q^3) $CellContext`P[2])/$CellContext`P[
           3] - ((4 $CellContext`q^2) $CellContext`P[2])/($CellContext`P[
            1]^3 $CellContext`P[
           3]) - ((96 $CellContext`q^3) $CellContext`P[2])/($CellContext`P[
            1]^3 $CellContext`P[
           3]) - ((12 $CellContext`q) $CellContext`P[2])/($CellContext`P[
            1]^2 $CellContext`P[
           3]) + ((1336 $CellContext`q^2) $CellContext`P[2])/($CellContext`P[
             1]^2 $CellContext`P[
            3]) + ((52168 $CellContext`q^3) $CellContext`P[
             2])/($CellContext`P[1]^2 $CellContext`P[3]) - (
           4 $CellContext`P[2])/($CellContext`P[1] $CellContext`P[
           3]) - ((96 $CellContext`q) $CellContext`P[2])/($CellContext`P[
           1] $CellContext`P[
           3]) - ((17556 $CellContext`q^2) $CellContext`P[2])/($CellContext`P[
           1] $CellContext`P[
           3]) - ((403040 $CellContext`q^3) $CellContext`P[
            2])/($CellContext`P[1] $CellContext`P[
           3]) - ((4 $CellContext`P[1]) $CellContext`P[2])/$CellContext`P[
          3] - (((96 $CellContext`q) $CellContext`P[1]) $CellContext`P[
            2])/$CellContext`P[
          3] - (((17556 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
            2])/$CellContext`P[
          3] - (((403040 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
            2])/$CellContext`P[
          3] - (((12 $CellContext`q) $CellContext`P[1]^2) $CellContext`P[
            2])/$CellContext`P[
          3] + (((1336 $CellContext`q^2) $CellContext`P[1]^2) $CellContext`P[
             2])/$CellContext`P[
           3] + (((52168 $CellContext`q^3) $CellContext`P[
               1]^2) $CellContext`P[2])/$CellContext`P[
           3] - (((4 $CellContext`q^2) $CellContext`P[1]^3) $CellContext`P[
            2])/$CellContext`P[
          3] - (((96 $CellContext`q^3) $CellContext`P[1]^3) $CellContext`P[
            2])/$CellContext`P[
          3] - ((56 $CellContext`q) $CellContext`P[2]^2)/$CellContext`P[
          3] - ((5600 $CellContext`q^2) $CellContext`P[2]^2)/$CellContext`P[
          3] - ((131112 $CellContext`q^3) $CellContext`P[2]^2)/$CellContext`P[
          3] - ((12 $CellContext`q^3) $CellContext`P[2]^2)/($CellContext`P[
            1]^3 $CellContext`P[
           3]) - ((56 $CellContext`q^2) $CellContext`P[2]^2)/($CellContext`P[
            1]^2 $CellContext`P[
           3]) - ((5600 $CellContext`q^3) $CellContext`P[
             2]^2)/($CellContext`P[1]^2 $CellContext`P[
           3]) - ((12 $CellContext`q) $CellContext`P[2]^2)/($CellContext`P[
           1] $CellContext`P[
           3]) + ((1336 $CellContext`q^2) $CellContext`P[
              2]^2)/($CellContext`P[1] $CellContext`P[
            3]) + ((52168 $CellContext`q^3) $CellContext`P[
              2]^2)/($CellContext`P[1] $CellContext`P[
            3]) - (((12 $CellContext`q) $CellContext`P[1]) $CellContext`P[
             2]^2)/$CellContext`P[
          3] + (((1336 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
              2]^2)/$CellContext`P[
           3] + (((52168 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
              2]^2)/$CellContext`P[
           3] - (((56 $CellContext`q^2) $CellContext`P[1]^2) $CellContext`P[
             2]^2)/$CellContext`P[
          3] - (((5600 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[
             2]^2)/$CellContext`P[
          3] - (((12 $CellContext`q^3) $CellContext`P[1]^3) $CellContext`P[
             2]^2)/$CellContext`P[
          3] - ((12 $CellContext`q^2) $CellContext`P[2]^3)/$CellContext`P[
          3] + ((1336 $CellContext`q^3) $CellContext`P[2]^3)/$CellContext`P[
           3] - ((12 $CellContext`q^3) $CellContext`P[2]^3)/($CellContext`P[
            1]^2 $CellContext`P[
           3]) - ((4 $CellContext`q^2) $CellContext`P[2]^3)/($CellContext`P[
           1] $CellContext`P[
           3]) - ((96 $CellContext`q^3) $CellContext`P[2]^3)/($CellContext`P[
           1] $CellContext`P[
           3]) - (((4 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
             2]^3)/$CellContext`P[
          3] - (((96 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
             2]^3)/$CellContext`P[
          3] - (((12 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[
             2]^3)/$CellContext`P[3] - 
          56 $CellContext`P[3] - (5600 $CellContext`q) $CellContext`P[3] - (
           131112 $CellContext`q^2) $CellContext`P[3] - (
           1824800 $CellContext`q^3) $CellContext`P[
           3] - ((12 $CellContext`q^2) $CellContext`P[3])/$CellContext`P[
           1]^3 + ((1336 $CellContext`q^3) $CellContext`P[3])/$CellContext`P[
            1]^3 - ((56 $CellContext`q) $CellContext`P[3])/$CellContext`P[
           1]^2 - ((5600 $CellContext`q^2) $CellContext`P[3])/$CellContext`P[
           1]^2 - ((131112 $CellContext`q^3) $CellContext`P[
            3])/$CellContext`P[1]^2 - (12 $CellContext`P[3])/$CellContext`P[
          1] + ((1336 $CellContext`q) $CellContext`P[3])/$CellContext`P[
           1] + ((52168 $CellContext`q^2) $CellContext`P[3])/$CellContext`P[
           1] + ((885936 $CellContext`q^3) $CellContext`P[3])/$CellContext`P[
           1] - (12 $CellContext`P[1]) $CellContext`P[
           3] + ((1336 $CellContext`q) $CellContext`P[1]) $CellContext`P[
            3] + ((52168 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
            3] + ((885936 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
            3] - ((56 $CellContext`q) $CellContext`P[1]^2) $CellContext`P[
           3] - ((5600 $CellContext`q^2) $CellContext`P[1]^2) $CellContext`P[
           3] - ((131112 $CellContext`q^3) $CellContext`P[
             1]^2) $CellContext`P[
           3] - ((12 $CellContext`q^2) $CellContext`P[1]^3) $CellContext`P[
           3] + ((1336 $CellContext`q^3) $CellContext`P[1]^3) $CellContext`P[
            3] - ((12 $CellContext`q^2) $CellContext`P[3])/$CellContext`P[
           2]^3 + ((1336 $CellContext`q^3) $CellContext`P[3])/$CellContext`P[
            2]^3 - ((12 $CellContext`q^3) $CellContext`P[3])/($CellContext`P[
            1]^2 $CellContext`P[2]^3) - ((4 $CellContext`q^2) $CellContext`P[
            3])/($CellContext`P[
           1] $CellContext`P[2]^3) - ((96 $CellContext`q^3) $CellContext`P[
            3])/($CellContext`P[
           1] $CellContext`P[
            2]^3) - (((4 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
            3])/$CellContext`P[
           2]^3 - (((96 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
            3])/$CellContext`P[
           2]^3 - (((12 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[
            3])/$CellContext`P[
           2]^3 - ((56 $CellContext`q) $CellContext`P[3])/$CellContext`P[
           2]^2 - ((5600 $CellContext`q^2) $CellContext`P[3])/$CellContext`P[
           2]^2 - ((131112 $CellContext`q^3) $CellContext`P[
            3])/$CellContext`P[
           2]^2 - ((12 $CellContext`q^3) $CellContext`P[3])/($CellContext`P[
            1]^3 $CellContext`P[2]^2) - ((56 $CellContext`q^2) $CellContext`P[
            3])/($CellContext`P[1]^2 $CellContext`P[2]^2) - ((
            5600 $CellContext`q^3) $CellContext`P[3])/($CellContext`P[
            1]^2 $CellContext`P[2]^2) - ((12 $CellContext`q) $CellContext`P[
            3])/($CellContext`P[
           1] $CellContext`P[
            2]^2) + ((1336 $CellContext`q^2) $CellContext`P[
             3])/($CellContext`P[
            1] $CellContext`P[2]^2) + ((
             52168 $CellContext`q^3) $CellContext`P[3])/($CellContext`P[
            1] $CellContext`P[2]^2) - (((12 $CellContext`q) $CellContext`P[
             1]) $CellContext`P[3])/$CellContext`P[
           2]^2 + (((1336 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
             3])/$CellContext`P[
            2]^2 + (((52168 $CellContext`q^3) $CellContext`P[
              1]) $CellContext`P[3])/$CellContext`P[
            2]^2 - (((
             56 $CellContext`q^2) $CellContext`P[1]^2) $CellContext`P[
            3])/$CellContext`P[
           2]^2 - (((
             5600 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[
            3])/$CellContext`P[
           2]^2 - (((12 $CellContext`q^3) $CellContext`P[1]^3) $CellContext`P[
            3])/$CellContext`P[2]^2 - (12 $CellContext`P[3])/$CellContext`P[
          2] + ((1336 $CellContext`q) $CellContext`P[3])/$CellContext`P[
           2] + ((52168 $CellContext`q^2) $CellContext`P[3])/$CellContext`P[
           2] + ((885936 $CellContext`q^3) $CellContext`P[3])/$CellContext`P[
           2] - ((4 $CellContext`q^2) $CellContext`P[3])/($CellContext`P[
            1]^3 $CellContext`P[
           2]) - ((96 $CellContext`q^3) $CellContext`P[3])/($CellContext`P[
            1]^3 $CellContext`P[
           2]) - ((12 $CellContext`q) $CellContext`P[3])/($CellContext`P[
            1]^2 $CellContext`P[
           2]) + ((1336 $CellContext`q^2) $CellContext`P[3])/($CellContext`P[
             1]^2 $CellContext`P[
            2]) + ((52168 $CellContext`q^3) $CellContext`P[
             3])/($CellContext`P[1]^2 $CellContext`P[2]) - (
           4 $CellContext`P[3])/($CellContext`P[1] $CellContext`P[
           2]) - ((96 $CellContext`q) $CellContext`P[3])/($CellContext`P[
           1] $CellContext`P[
           2]) - ((17556 $CellContext`q^2) $CellContext`P[3])/($CellContext`P[
           1] $CellContext`P[
           2]) - ((403040 $CellContext`q^3) $CellContext`P[
            3])/($CellContext`P[1] $CellContext`P[
           2]) - ((4 $CellContext`P[1]) $CellContext`P[3])/$CellContext`P[
          2] - (((96 $CellContext`q) $CellContext`P[1]) $CellContext`P[
            3])/$CellContext`P[
          2] - (((17556 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
            3])/$CellContext`P[
          2] - (((403040 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
            3])/$CellContext`P[
          2] - (((12 $CellContext`q) $CellContext`P[1]^2) $CellContext`P[
            3])/$CellContext`P[
          2] + (((1336 $CellContext`q^2) $CellContext`P[1]^2) $CellContext`P[
             3])/$CellContext`P[
           2] + (((52168 $CellContext`q^3) $CellContext`P[
               1]^2) $CellContext`P[3])/$CellContext`P[
           2] - (((4 $CellContext`q^2) $CellContext`P[1]^3) $CellContext`P[
            3])/$CellContext`P[
          2] - (((96 $CellContext`q^3) $CellContext`P[1]^3) $CellContext`P[
            3])/$CellContext`P[
          2] - (12 $CellContext`P[2]) $CellContext`P[
           3] + ((1336 $CellContext`q) $CellContext`P[2]) $CellContext`P[
            3] + ((52168 $CellContext`q^2) $CellContext`P[2]) $CellContext`P[
            3] + ((885936 $CellContext`q^3) $CellContext`P[2]) $CellContext`P[
            3] - (((4 $CellContext`q^2) $CellContext`P[2]) $CellContext`P[
            3])/$CellContext`P[
           1]^3 - (((96 $CellContext`q^3) $CellContext`P[2]) $CellContext`P[
            3])/$CellContext`P[
           1]^3 - (((12 $CellContext`q) $CellContext`P[2]) $CellContext`P[
            3])/$CellContext`P[
           1]^2 + (((1336 $CellContext`q^2) $CellContext`P[2]) $CellContext`P[
             3])/$CellContext`P[
            1]^2 + (((52168 $CellContext`q^3) $CellContext`P[
              2]) $CellContext`P[3])/$CellContext`P[1]^2 - ((
            4 $CellContext`P[2]) $CellContext`P[3])/$CellContext`P[
          1] - (((96 $CellContext`q) $CellContext`P[2]) $CellContext`P[
            3])/$CellContext`P[
          1] - (((17556 $CellContext`q^2) $CellContext`P[2]) $CellContext`P[
            3])/$CellContext`P[
          1] - (((403040 $CellContext`q^3) $CellContext`P[2]) $CellContext`P[
            3])/$CellContext`P[
          1] - ((4 $CellContext`P[1]) $CellContext`P[2]) $CellContext`P[
           3] - (((96 $CellContext`q) $CellContext`P[1]) $CellContext`P[
            2]) $CellContext`P[
           3] - (((17556 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
            2]) $CellContext`P[
           3] - (((403040 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
            2]) $CellContext`P[
           3] - (((12 $CellContext`q) $CellContext`P[1]^2) $CellContext`P[
            2]) $CellContext`P[
           3] + (((1336 $CellContext`q^2) $CellContext`P[1]^2) $CellContext`P[
             2]) $CellContext`P[
            3] + (((52168 $CellContext`q^3) $CellContext`P[
               1]^2) $CellContext`P[2]) $CellContext`P[
            3] - (((4 $CellContext`q^2) $CellContext`P[1]^3) $CellContext`P[
            2]) $CellContext`P[
           3] - (((96 $CellContext`q^3) $CellContext`P[1]^3) $CellContext`P[
            2]) $CellContext`P[
           3] - ((56 $CellContext`q) $CellContext`P[2]^2) $CellContext`P[
           3] - ((5600 $CellContext`q^2) $CellContext`P[2]^2) $CellContext`P[
           3] - ((131112 $CellContext`q^3) $CellContext`P[
             2]^2) $CellContext`P[
           3] - (((12 $CellContext`q^3) $CellContext`P[2]^2) $CellContext`P[
            3])/$CellContext`P[
           1]^3 - (((56 $CellContext`q^2) $CellContext`P[2]^2) $CellContext`P[
            3])/$CellContext`P[
           1]^2 - (((
             5600 $CellContext`q^3) $CellContext`P[2]^2) $CellContext`P[
            3])/$CellContext`P[
           1]^2 - (((12 $CellContext`q) $CellContext`P[2]^2) $CellContext`P[
            3])/$CellContext`P[
          1] + (((1336 $CellContext`q^2) $CellContext`P[2]^2) $CellContext`P[
             3])/$CellContext`P[
           1] + (((52168 $CellContext`q^3) $CellContext`P[
               2]^2) $CellContext`P[3])/$CellContext`P[
           1] - (((12 $CellContext`q) $CellContext`P[1]) $CellContext`P[
             2]^2) $CellContext`P[
           3] + (((1336 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
              2]^2) $CellContext`P[
            3] + (((52168 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
              2]^2) $CellContext`P[
            3] - (((56 $CellContext`q^2) $CellContext`P[1]^2) $CellContext`P[
             2]^2) $CellContext`P[
           3] - (((5600 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[
             2]^2) $CellContext`P[
           3] - (((12 $CellContext`q^3) $CellContext`P[1]^3) $CellContext`P[
             2]^2) $CellContext`P[
           3] - ((12 $CellContext`q^2) $CellContext`P[2]^3) $CellContext`P[
           3] + ((1336 $CellContext`q^3) $CellContext`P[2]^3) $CellContext`P[
            3] - (((12 $CellContext`q^3) $CellContext`P[2]^3) $CellContext`P[
            3])/$CellContext`P[
           1]^2 - (((4 $CellContext`q^2) $CellContext`P[2]^3) $CellContext`P[
            3])/$CellContext`P[
          1] - (((96 $CellContext`q^3) $CellContext`P[2]^3) $CellContext`P[
            3])/$CellContext`P[
          1] - (((4 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
             2]^3) $CellContext`P[
           3] - (((96 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
             2]^3) $CellContext`P[
           3] - (((12 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[
             2]^3) $CellContext`P[
           3] + (512 $CellContext`q) $CellContext`P[3]^2 + (
            16896 $CellContext`q^2) $CellContext`P[3]^2 + (
            297984 $CellContext`q^3) $CellContext`P[3]^2 - ((
            56 $CellContext`q^3) $CellContext`P[3]^2)/$CellContext`P[
           1]^3 + ((512 $CellContext`q^2) $CellContext`P[3]^2)/$CellContext`P[
            1]^2 + ((
             16896 $CellContext`q^3) $CellContext`P[3]^2)/$CellContext`P[
            1]^2 - ((56 $CellContext`q) $CellContext`P[3]^2)/$CellContext`P[
          1] - ((5600 $CellContext`q^2) $CellContext`P[3]^2)/$CellContext`P[
          1] - ((131112 $CellContext`q^3) $CellContext`P[3]^2)/$CellContext`P[
          1] - ((56 $CellContext`q) $CellContext`P[1]) $CellContext`P[
            3]^2 - ((5600 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
            3]^2 - ((131112 $CellContext`q^3) $CellContext`P[
            1]) $CellContext`P[
            3]^2 + ((
             512 $CellContext`q^2) $CellContext`P[1]^2) $CellContext`P[
             3]^2 + ((
             16896 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[
             3]^2 - ((
            56 $CellContext`q^3) $CellContext`P[1]^3) $CellContext`P[3]^2 - ((
            56 $CellContext`q^3) $CellContext`P[3]^2)/$CellContext`P[
           2]^3 - ((12 $CellContext`q^3) $CellContext`P[3]^2)/($CellContext`P[
           1] $CellContext`P[
            2]^3) - (((12 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
             3]^2)/$CellContext`P[
           2]^3 + ((512 $CellContext`q^2) $CellContext`P[3]^2)/$CellContext`P[
            2]^2 + ((
             16896 $CellContext`q^3) $CellContext`P[3]^2)/$CellContext`P[
            2]^2 + ((
             512 $CellContext`q^3) $CellContext`P[3]^2)/($CellContext`P[
             1]^2 $CellContext`P[2]^2) - ((
            56 $CellContext`q^2) $CellContext`P[3]^2)/($CellContext`P[
           1] $CellContext`P[2]^2) - ((
            5600 $CellContext`q^3) $CellContext`P[3]^2)/($CellContext`P[
           1] $CellContext`P[
            2]^2) - (((56 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
             3]^2)/$CellContext`P[
           2]^2 - (((5600 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
             3]^2)/$CellContext`P[
           2]^2 + (((
              512 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[
              3]^2)/$CellContext`P[2]^2 - ((
            56 $CellContext`q) $CellContext`P[3]^2)/$CellContext`P[
          2] - ((5600 $CellContext`q^2) $CellContext`P[3]^2)/$CellContext`P[
          2] - ((131112 $CellContext`q^3) $CellContext`P[3]^2)/$CellContext`P[
          2] - ((12 $CellContext`q^3) $CellContext`P[3]^2)/($CellContext`P[
            1]^3 $CellContext`P[
           2]) - ((56 $CellContext`q^2) $CellContext`P[3]^2)/($CellContext`P[
            1]^2 $CellContext`P[
           2]) - ((
            5600 $CellContext`q^3) $CellContext`P[3]^2)/($CellContext`P[
            1]^2 $CellContext`P[
           2]) - ((12 $CellContext`q) $CellContext`P[3]^2)/($CellContext`P[
           1] $CellContext`P[
           2]) + ((1336 $CellContext`q^2) $CellContext`P[
              3]^2)/($CellContext`P[1] $CellContext`P[
            2]) + ((52168 $CellContext`q^3) $CellContext`P[
              3]^2)/($CellContext`P[1] $CellContext`P[
            2]) - (((12 $CellContext`q) $CellContext`P[1]) $CellContext`P[
             3]^2)/$CellContext`P[
          2] + (((1336 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
              3]^2)/$CellContext`P[
           2] + (((52168 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
              3]^2)/$CellContext`P[
           2] - (((56 $CellContext`q^2) $CellContext`P[1]^2) $CellContext`P[
             3]^2)/$CellContext`P[
          2] - (((5600 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[
             3]^2)/$CellContext`P[
          2] - (((12 $CellContext`q^3) $CellContext`P[1]^3) $CellContext`P[
             3]^2)/$CellContext`P[
          2] - ((56 $CellContext`q) $CellContext`P[2]) $CellContext`P[
            3]^2 - ((5600 $CellContext`q^2) $CellContext`P[2]) $CellContext`P[
            3]^2 - ((131112 $CellContext`q^3) $CellContext`P[
            2]) $CellContext`P[
            3]^2 - (((12 $CellContext`q^3) $CellContext`P[2]) $CellContext`P[
             3]^2)/$CellContext`P[
           1]^3 - (((56 $CellContext`q^2) $CellContext`P[2]) $CellContext`P[
             3]^2)/$CellContext`P[
           1]^2 - (((5600 $CellContext`q^3) $CellContext`P[2]) $CellContext`P[
             3]^2)/$CellContext`P[
           1]^2 - (((12 $CellContext`q) $CellContext`P[2]) $CellContext`P[
             3]^2)/$CellContext`P[
          1] + (((1336 $CellContext`q^2) $CellContext`P[2]) $CellContext`P[
              3]^2)/$CellContext`P[
           1] + (((52168 $CellContext`q^3) $CellContext`P[2]) $CellContext`P[
              3]^2)/$CellContext`P[
           1] - (((12 $CellContext`q) $CellContext`P[1]) $CellContext`P[
            2]) $CellContext`P[
            3]^2 + (((1336 $CellContext`q^2) $CellContext`P[
              1]) $CellContext`P[2]) $CellContext`P[
             3]^2 + (((52168 $CellContext`q^3) $CellContext`P[
              1]) $CellContext`P[2]) $CellContext`P[3]^2 - (((
             56 $CellContext`q^2) $CellContext`P[1]^2) $CellContext`P[
            2]) $CellContext`P[
            3]^2 - (((
             5600 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[
            2]) $CellContext`P[
            3]^2 - (((
             12 $CellContext`q^3) $CellContext`P[1]^3) $CellContext`P[
            2]) $CellContext`P[
            3]^2 + ((
             512 $CellContext`q^2) $CellContext`P[2]^2) $CellContext`P[
             3]^2 + ((
             16896 $CellContext`q^3) $CellContext`P[2]^2) $CellContext`P[
             3]^2 + (((
              512 $CellContext`q^3) $CellContext`P[2]^2) $CellContext`P[
              3]^2)/$CellContext`P[
            1]^2 - (((
             56 $CellContext`q^2) $CellContext`P[2]^2) $CellContext`P[
             3]^2)/$CellContext`P[
          1] - (((5600 $CellContext`q^3) $CellContext`P[2]^2) $CellContext`P[
             3]^2)/$CellContext`P[
          1] - (((56 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
             2]^2) $CellContext`P[
            3]^2 - (((5600 $CellContext`q^3) $CellContext`P[
             1]) $CellContext`P[2]^2) $CellContext`P[
            3]^2 + (((
              512 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[
              2]^2) $CellContext`P[3]^2 - ((
            56 $CellContext`q^3) $CellContext`P[2]^3) $CellContext`P[
            3]^2 - (((
             12 $CellContext`q^3) $CellContext`P[2]^3) $CellContext`P[
             3]^2)/$CellContext`P[
          1] - (((12 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
             2]^3) $CellContext`P[3]^2 - (
           56 $CellContext`q^2) $CellContext`P[3]^3 - (
           5600 $CellContext`q^3) $CellContext`P[3]^3 - ((
            56 $CellContext`q^3) $CellContext`P[3]^3)/$CellContext`P[
           1]^2 - ((12 $CellContext`q^2) $CellContext`P[3]^3)/$CellContext`P[
          1] + ((1336 $CellContext`q^3) $CellContext`P[3]^3)/$CellContext`P[
           1] - ((12 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
            3]^3 + ((1336 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
             3]^3 - ((
            56 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[3]^3 - ((
            56 $CellContext`q^3) $CellContext`P[3]^3)/$CellContext`P[
           2]^2 - ((12 $CellContext`q^3) $CellContext`P[3]^3)/($CellContext`P[
           1] $CellContext`P[
            2]^2) - (((12 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
             3]^3)/$CellContext`P[
           2]^2 - ((12 $CellContext`q^2) $CellContext`P[3]^3)/$CellContext`P[
          2] + ((1336 $CellContext`q^3) $CellContext`P[3]^3)/$CellContext`P[
           2] - ((12 $CellContext`q^3) $CellContext`P[3]^3)/($CellContext`P[
            1]^2 $CellContext`P[
           2]) - ((4 $CellContext`q^2) $CellContext`P[3]^3)/($CellContext`P[
           1] $CellContext`P[
           2]) - ((96 $CellContext`q^3) $CellContext`P[3]^3)/($CellContext`P[
           1] $CellContext`P[
           2]) - (((4 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
             3]^3)/$CellContext`P[
          2] - (((96 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
             3]^3)/$CellContext`P[
          2] - (((12 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[
             3]^3)/$CellContext`P[
          2] - ((12 $CellContext`q^2) $CellContext`P[2]) $CellContext`P[
            3]^3 + ((1336 $CellContext`q^3) $CellContext`P[2]) $CellContext`P[
             3]^3 - (((12 $CellContext`q^3) $CellContext`P[2]) $CellContext`P[
             3]^3)/$CellContext`P[
           1]^2 - (((4 $CellContext`q^2) $CellContext`P[2]) $CellContext`P[
             3]^3)/$CellContext`P[
          1] - (((96 $CellContext`q^3) $CellContext`P[2]) $CellContext`P[
             3]^3)/$CellContext`P[
          1] - (((4 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
            2]) $CellContext`P[
            3]^3 - (((96 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
            2]) $CellContext`P[
            3]^3 - (((
             12 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[
            2]) $CellContext`P[3]^3 - ((
            56 $CellContext`q^3) $CellContext`P[2]^2) $CellContext`P[
            3]^3 - (((
             12 $CellContext`q^3) $CellContext`P[2]^2) $CellContext`P[
             3]^3)/$CellContext`P[
          1] - (((12 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
             2]^2) $CellContext`P[3]^3, $CellContext`\[Phi][3, 
           LieART`Algebra[LieART`A][2]] = 
         SeriesData[$CellContext`q, 
           0, {$CellContext`P[1]^(-1) - $CellContext`P[
            1] + $CellContext`P[2]^(-1) - 
            1/($CellContext`P[1] $CellContext`P[2]) - $CellContext`P[
            2] + $CellContext`P[1] $CellContext`P[2], 0, 0, 0, 0, 0, 0, 0, 0, 
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
            0, (-1) $CellContext`P[1]^(-2) + 8/$CellContext`P[1] - 
            8 $CellContext`P[1] + $CellContext`P[1]^2 - $CellContext`P[
             2]^(-2) + 1/($CellContext`P[1]^2 $CellContext`P[2]^2) + 
            8/$CellContext`P[2] - 8/($CellContext`P[1] $CellContext`P[2]) - 
            8 $CellContext`P[
             2] + (8 $CellContext`P[1]) $CellContext`P[2] + $CellContext`P[
              2]^2 - $CellContext`P[1]^2 $CellContext`P[2]^2, 0, 0, 0, 0, 0, 
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
            0, (-8)/$CellContext`P[1]^2 + 44/$CellContext`P[1] - 
            44 $CellContext`P[1] + 8 $CellContext`P[1]^2 - 
            1/($CellContext`P[1]^2 $CellContext`P[2]^3) + 
            1/($CellContext`P[1] $CellContext`P[2]^3) - 8/$CellContext`P[2]^2 - 
            1/($CellContext`P[1]^3 $CellContext`P[2]^2) + 
            8/($CellContext`P[1]^2 $CellContext`P[2]^2) + $CellContext`P[
              1]/$CellContext`P[2]^2 + 44/$CellContext`P[2] + 
            1/($CellContext`P[1]^3 $CellContext`P[2]) - 
            44/($CellContext`P[1] $CellContext`P[
             2]) - $CellContext`P[1]^2/$CellContext`P[2] - 
            44 $CellContext`P[
             2] + $CellContext`P[2]/$CellContext`P[1]^2 + (
              44 $CellContext`P[1]) $CellContext`P[2] - $CellContext`P[
              1]^3 $CellContext`P[2] + 
            8 $CellContext`P[2]^2 - $CellContext`P[2]^2/$CellContext`P[
            1] - (8 $CellContext`P[1]^2) $CellContext`P[
              2]^2 + $CellContext`P[1]^3 $CellContext`P[2]^2 - $CellContext`P[
             1] $CellContext`P[2]^3 + $CellContext`P[1]^2 $CellContext`P[2]^3,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, (-44)/$CellContext`P[1]^2 + 192/$CellContext`P[1] - 
            192 $CellContext`P[1] + 44 $CellContext`P[1]^2 - 
            8/($CellContext`P[1]^2 $CellContext`P[2]^3) + 
            8/($CellContext`P[1] $CellContext`P[2]^3) - 
            44/$CellContext`P[2]^2 - 
            8/($CellContext`P[1]^3 $CellContext`P[2]^2) + 
            44/($CellContext`P[1]^2 $CellContext`P[2]^2) + (
              8 $CellContext`P[1])/$CellContext`P[2]^2 + 
            192/$CellContext`P[2] + 8/($CellContext`P[1]^3 $CellContext`P[2]) - 
            192/($CellContext`P[1] $CellContext`P[2]) - (
             8 $CellContext`P[1]^2)/$CellContext`P[2] - 
            192 $CellContext`P[
             2] + (8 $CellContext`P[2])/$CellContext`P[1]^2 + (
              192 $CellContext`P[1]) $CellContext`P[2] - (
             8 $CellContext`P[1]^3) $CellContext`P[2] + 
            44 $CellContext`P[2]^2 - (8 $CellContext`P[2]^2)/$CellContext`P[
            1] - (44 $CellContext`P[1]^2) $CellContext`P[2]^2 + (
              8 $CellContext`P[1]^3) $CellContext`P[2]^2 - (
             8 $CellContext`P[1]) $CellContext`P[2]^3 + (
              8 $CellContext`P[1]^2) $CellContext`P[2]^3}, 0, 96, 
           24], $CellContext`\[Phi][4, 
           LieART`Algebra[LieART`B][3]] = 
         200 + 4560 $CellContext`q + 60480 $CellContext`q^2 + 
          581760 $CellContext`q^3 - (60 $CellContext`q^2)/$CellContext`P[
           1]^3 - (2000 $CellContext`q^3)/$CellContext`P[
           1]^3 + (200 $CellContext`q)/$CellContext`P[1]^2 + (
            4560 $CellContext`q^2)/$CellContext`P[1]^2 + (
            60480 $CellContext`q^3)/$CellContext`P[1]^2 - 60/$CellContext`P[
          1] - (2000 $CellContext`q)/$CellContext`P[
          1] - (31060 $CellContext`q^2)/$CellContext`P[
          1] - (327600 $CellContext`q^3)/$CellContext`P[1] - 
          60 $CellContext`P[1] - (2000 $CellContext`q) $CellContext`P[1] - (
           31060 $CellContext`q^2) $CellContext`P[1] - (
           327600 $CellContext`q^3) $CellContext`P[
           1] + (200 $CellContext`q) $CellContext`P[1]^2 + (
            4560 $CellContext`q^2) $CellContext`P[1]^2 + (
            60480 $CellContext`q^3) $CellContext`P[1]^2 - (
           60 $CellContext`q^2) $CellContext`P[1]^3 - (
           2000 $CellContext`q^3) $CellContext`P[1]^3 - (
           60 $CellContext`q^2)/$CellContext`P[2]^3 - (
           2000 $CellContext`q^3)/$CellContext`P[2]^3 - (
           60 $CellContext`q^3)/($CellContext`P[1]^2 $CellContext`P[2]^3) + (
            10 $CellContext`q^2)/($CellContext`P[1] $CellContext`P[2]^3) + (
            780 $CellContext`q^3)/($CellContext`P[
            1] $CellContext`P[2]^3) + ((10 $CellContext`q^2) $CellContext`P[
             1])/$CellContext`P[
            2]^3 + ((780 $CellContext`q^3) $CellContext`P[1])/$CellContext`P[
            2]^3 - ((60 $CellContext`q^3) $CellContext`P[1]^2)/$CellContext`P[
           2]^3 + (200 $CellContext`q)/$CellContext`P[2]^2 + (
            4560 $CellContext`q^2)/$CellContext`P[2]^2 + (
            60480 $CellContext`q^3)/$CellContext`P[2]^2 - (
           60 $CellContext`q^3)/($CellContext`P[1]^3 $CellContext`P[2]^2) + (
            200 $CellContext`q^2)/($CellContext`P[1]^2 $CellContext`P[
             2]^2) + (
            4560 $CellContext`q^3)/($CellContext`P[1]^2 $CellContext`P[
             2]^2) - (60 $CellContext`q)/($CellContext`P[
           1] $CellContext`P[2]^2) - (2000 $CellContext`q^2)/($CellContext`P[
           1] $CellContext`P[2]^2) - (31060 $CellContext`q^3)/($CellContext`P[
           1] $CellContext`P[2]^2) - ((60 $CellContext`q) $CellContext`P[
            1])/$CellContext`P[
           2]^2 - ((2000 $CellContext`q^2) $CellContext`P[1])/$CellContext`P[
           2]^2 - ((31060 $CellContext`q^3) $CellContext`P[1])/$CellContext`P[
           2]^2 + ((200 $CellContext`q^2) $CellContext`P[1]^2)/$CellContext`P[
            2]^2 + ((
             4560 $CellContext`q^3) $CellContext`P[1]^2)/$CellContext`P[
            2]^2 - ((60 $CellContext`q^3) $CellContext`P[1]^3)/$CellContext`P[
           2]^2 - 60/$CellContext`P[2] - (2000 $CellContext`q)/$CellContext`P[
          2] - (31060 $CellContext`q^2)/$CellContext`P[
          2] - (327600 $CellContext`q^3)/$CellContext`P[
          2] + (10 $CellContext`q^2)/($CellContext`P[1]^3 $CellContext`P[
            2]) + (780 $CellContext`q^3)/($CellContext`P[1]^3 $CellContext`P[
            2]) - (60 $CellContext`q)/($CellContext`P[1]^2 $CellContext`P[
           2]) - (2000 $CellContext`q^2)/($CellContext`P[1]^2 $CellContext`P[
           2]) - (31060 $CellContext`q^3)/($CellContext`P[1]^2 $CellContext`P[
           2]) + 10/($CellContext`P[1] $CellContext`P[2]) + (
            780 $CellContext`q)/($CellContext`P[1] $CellContext`P[2]) + (
            15220 $CellContext`q^2)/($CellContext`P[1] $CellContext`P[2]) + (
            179800 $CellContext`q^3)/($CellContext`P[1] $CellContext`P[2]) + (
            10 $CellContext`P[1])/$CellContext`P[
           2] + ((780 $CellContext`q) $CellContext`P[1])/$CellContext`P[
           2] + ((15220 $CellContext`q^2) $CellContext`P[1])/$CellContext`P[
           2] + ((179800 $CellContext`q^3) $CellContext`P[1])/$CellContext`P[
           2] - ((60 $CellContext`q) $CellContext`P[1]^2)/$CellContext`P[
          2] - ((2000 $CellContext`q^2) $CellContext`P[1]^2)/$CellContext`P[
          2] - ((31060 $CellContext`q^3) $CellContext`P[1]^2)/$CellContext`P[
          2] + ((10 $CellContext`q^2) $CellContext`P[1]^3)/$CellContext`P[
           2] + ((780 $CellContext`q^3) $CellContext`P[1]^3)/$CellContext`P[
           2] - 60 $CellContext`P[2] - (2000 $CellContext`q) $CellContext`P[
           2] - (31060 $CellContext`q^2) $CellContext`P[2] - (
           327600 $CellContext`q^3) $CellContext`P[
           2] + ((10 $CellContext`q^2) $CellContext`P[2])/$CellContext`P[
            1]^3 + ((780 $CellContext`q^3) $CellContext`P[2])/$CellContext`P[
            1]^3 - ((60 $CellContext`q) $CellContext`P[2])/$CellContext`P[
           1]^2 - ((2000 $CellContext`q^2) $CellContext`P[2])/$CellContext`P[
           1]^2 - ((31060 $CellContext`q^3) $CellContext`P[2])/$CellContext`P[
           1]^2 + (10 $CellContext`P[2])/$CellContext`P[
           1] + ((780 $CellContext`q) $CellContext`P[2])/$CellContext`P[
           1] + ((15220 $CellContext`q^2) $CellContext`P[2])/$CellContext`P[
           1] + ((179800 $CellContext`q^3) $CellContext`P[2])/$CellContext`P[
           1] + (10 $CellContext`P[1]) $CellContext`P[
            2] + ((780 $CellContext`q) $CellContext`P[1]) $CellContext`P[
            2] + ((15220 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
            2] + ((179800 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
            2] - ((60 $CellContext`q) $CellContext`P[1]^2) $CellContext`P[
           2] - ((2000 $CellContext`q^2) $CellContext`P[1]^2) $CellContext`P[
           2] - ((31060 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[
           2] + ((10 $CellContext`q^2) $CellContext`P[1]^3) $CellContext`P[
            2] + ((780 $CellContext`q^3) $CellContext`P[1]^3) $CellContext`P[
            2] + (200 $CellContext`q) $CellContext`P[2]^2 + (
            4560 $CellContext`q^2) $CellContext`P[2]^2 + (
            60480 $CellContext`q^3) $CellContext`P[2]^2 - ((
            60 $CellContext`q^3) $CellContext`P[2]^2)/$CellContext`P[
           1]^3 + ((200 $CellContext`q^2) $CellContext`P[2]^2)/$CellContext`P[
            1]^2 + ((
             4560 $CellContext`q^3) $CellContext`P[2]^2)/$CellContext`P[
            1]^2 - ((60 $CellContext`q) $CellContext`P[2]^2)/$CellContext`P[
          1] - ((2000 $CellContext`q^2) $CellContext`P[2]^2)/$CellContext`P[
          1] - ((31060 $CellContext`q^3) $CellContext`P[2]^2)/$CellContext`P[
          1] - ((60 $CellContext`q) $CellContext`P[1]) $CellContext`P[
            2]^2 - ((2000 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
            2]^2 - ((31060 $CellContext`q^3) $CellContext`P[
            1]) $CellContext`P[
            2]^2 + ((
             200 $CellContext`q^2) $CellContext`P[1]^2) $CellContext`P[
             2]^2 + ((
             4560 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[
             2]^2 - ((
            60 $CellContext`q^3) $CellContext`P[1]^3) $CellContext`P[2]^2 - (
           60 $CellContext`q^2) $CellContext`P[2]^3 - (
           2000 $CellContext`q^3) $CellContext`P[2]^3 - ((
            60 $CellContext`q^3) $CellContext`P[2]^3)/$CellContext`P[
           1]^2 + ((10 $CellContext`q^2) $CellContext`P[2]^3)/$CellContext`P[
           1] + ((780 $CellContext`q^3) $CellContext`P[2]^3)/$CellContext`P[
           1] + ((10 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
             2]^3 + ((780 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
             2]^3 - ((
            60 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[2]^3 - (
           60 $CellContext`q^2)/$CellContext`P[3]^3 - (
           2000 $CellContext`q^3)/$CellContext`P[3]^3 - (
           60 $CellContext`q^3)/($CellContext`P[1]^2 $CellContext`P[3]^3) + (
            10 $CellContext`q^2)/($CellContext`P[1] $CellContext`P[3]^3) + (
            780 $CellContext`q^3)/($CellContext`P[
            1] $CellContext`P[3]^3) + ((10 $CellContext`q^2) $CellContext`P[
             1])/$CellContext`P[
            3]^3 + ((780 $CellContext`q^3) $CellContext`P[1])/$CellContext`P[
            3]^3 - ((60 $CellContext`q^3) $CellContext`P[1]^2)/$CellContext`P[
           3]^3 - (60 $CellContext`q^3)/($CellContext`P[2]^2 $CellContext`P[
            3]^3) + (
            10 $CellContext`q^3)/(($CellContext`P[
             1] $CellContext`P[2]^2) $CellContext`P[3]^3) + ((
             10 $CellContext`q^3) $CellContext`P[1])/($CellContext`P[
             2]^2 $CellContext`P[3]^3) + (
            10 $CellContext`q^2)/($CellContext`P[2] $CellContext`P[3]^3) + (
            780 $CellContext`q^3)/($CellContext`P[2] $CellContext`P[3]^3) + (
            10 $CellContext`q^3)/(($CellContext`P[1]^2 $CellContext`P[
             2]) $CellContext`P[3]^3) + (
            5 $CellContext`q^2)/(($CellContext`P[1] $CellContext`P[
             2]) $CellContext`P[3]^3) - (
           240 $CellContext`q^3)/(($CellContext`P[1] $CellContext`P[
            2]) $CellContext`P[
            3]^3) + ((5 $CellContext`q^2) $CellContext`P[1])/($CellContext`P[
            2] $CellContext`P[3]^3) - ((240 $CellContext`q^3) $CellContext`P[
            1])/($CellContext`P[
           2] $CellContext`P[
            3]^3) + ((
             10 $CellContext`q^3) $CellContext`P[1]^2)/($CellContext`P[
            2] $CellContext`P[3]^3) + ((10 $CellContext`q^2) $CellContext`P[
             2])/$CellContext`P[
            3]^3 + ((780 $CellContext`q^3) $CellContext`P[2])/$CellContext`P[
            3]^3 + ((10 $CellContext`q^3) $CellContext`P[2])/($CellContext`P[
             1]^2 $CellContext`P[3]^3) + ((5 $CellContext`q^2) $CellContext`P[
             2])/($CellContext`P[1] $CellContext`P[3]^3) - ((
            240 $CellContext`q^3) $CellContext`P[2])/($CellContext`P[
           1] $CellContext`P[
            3]^3) + (((5 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
             2])/$CellContext`P[
            3]^3 - (((240 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
            2])/$CellContext`P[
           3]^3 + (((10 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[
             2])/$CellContext`P[3]^3 - ((
            60 $CellContext`q^3) $CellContext`P[2]^2)/$CellContext`P[
           3]^3 + ((10 $CellContext`q^3) $CellContext`P[2]^2)/($CellContext`P[
            1] $CellContext`P[
             3]^3) + (((10 $CellContext`q^3) $CellContext`P[
              1]) $CellContext`P[2]^2)/$CellContext`P[3]^3 + (
            200 $CellContext`q)/$CellContext`P[3]^2 + (
            4560 $CellContext`q^2)/$CellContext`P[3]^2 + (
            60480 $CellContext`q^3)/$CellContext`P[3]^2 - (
           60 $CellContext`q^3)/($CellContext`P[1]^3 $CellContext`P[3]^2) + (
            200 $CellContext`q^2)/($CellContext`P[1]^2 $CellContext`P[
             3]^2) + (
            4560 $CellContext`q^3)/($CellContext`P[1]^2 $CellContext`P[
             3]^2) - (60 $CellContext`q)/($CellContext`P[
           1] $CellContext`P[3]^2) - (2000 $CellContext`q^2)/($CellContext`P[
           1] $CellContext`P[3]^2) - (31060 $CellContext`q^3)/($CellContext`P[
           1] $CellContext`P[3]^2) - ((60 $CellContext`q) $CellContext`P[
            1])/$CellContext`P[
           3]^2 - ((2000 $CellContext`q^2) $CellContext`P[1])/$CellContext`P[
           3]^2 - ((31060 $CellContext`q^3) $CellContext`P[1])/$CellContext`P[
           3]^2 + ((200 $CellContext`q^2) $CellContext`P[1]^2)/$CellContext`P[
            3]^2 + ((
             4560 $CellContext`q^3) $CellContext`P[1]^2)/$CellContext`P[
            3]^2 - ((60 $CellContext`q^3) $CellContext`P[1]^3)/$CellContext`P[
           3]^2 - (60 $CellContext`q^3)/($CellContext`P[2]^3 $CellContext`P[
            3]^2) + (
            10 $CellContext`q^3)/(($CellContext`P[
             1] $CellContext`P[2]^3) $CellContext`P[3]^2) + ((
             10 $CellContext`q^3) $CellContext`P[1])/($CellContext`P[
             2]^3 $CellContext`P[3]^2) + (
            200 $CellContext`q^2)/($CellContext`P[2]^2 $CellContext`P[
             3]^2) + (
            4560 $CellContext`q^3)/($CellContext`P[2]^2 $CellContext`P[
             3]^2) + (
            200 $CellContext`q^3)/(($CellContext`P[1]^2 $CellContext`P[
              2]^2) $CellContext`P[3]^2) - (
           60 $CellContext`q^2)/(($CellContext`P[
            1] $CellContext`P[2]^2) $CellContext`P[3]^2) - (
           2000 $CellContext`q^3)/(($CellContext`P[
            1] $CellContext`P[2]^2) $CellContext`P[3]^2) - ((
            60 $CellContext`q^2) $CellContext`P[1])/($CellContext`P[
            2]^2 $CellContext`P[3]^2) - ((
            2000 $CellContext`q^3) $CellContext`P[1])/($CellContext`P[
            2]^2 $CellContext`P[
            3]^2) + ((
             200 $CellContext`q^3) $CellContext`P[1]^2)/($CellContext`P[
             2]^2 $CellContext`P[3]^2) - (60 $CellContext`q)/($CellContext`P[
           2] $CellContext`P[3]^2) - (2000 $CellContext`q^2)/($CellContext`P[
           2] $CellContext`P[3]^2) - (31060 $CellContext`q^3)/($CellContext`P[
           2] $CellContext`P[3]^2) + (
            10 $CellContext`q^3)/(($CellContext`P[1]^3 $CellContext`P[
             2]) $CellContext`P[3]^2) - (
           60 $CellContext`q^2)/(($CellContext`P[1]^2 $CellContext`P[
            2]) $CellContext`P[3]^2) - (
           2000 $CellContext`q^3)/(($CellContext`P[1]^2 $CellContext`P[
            2]) $CellContext`P[3]^2) + (
            10 $CellContext`q)/(($CellContext`P[1] $CellContext`P[
             2]) $CellContext`P[3]^2) + (
            780 $CellContext`q^2)/(($CellContext`P[1] $CellContext`P[
             2]) $CellContext`P[3]^2) + (
            15220 $CellContext`q^3)/(($CellContext`P[1] $CellContext`P[
             2]) $CellContext`P[3]^2) + ((10 $CellContext`q) $CellContext`P[
             1])/($CellContext`P[
            2] $CellContext`P[3]^2) + ((780 $CellContext`q^2) $CellContext`P[
             1])/($CellContext`P[
            2] $CellContext`P[3]^2) + ((
             15220 $CellContext`q^3) $CellContext`P[1])/($CellContext`P[
            2] $CellContext`P[3]^2) - ((
            60 $CellContext`q^2) $CellContext`P[1]^2)/($CellContext`P[
           2] $CellContext`P[3]^2) - ((
            2000 $CellContext`q^3) $CellContext`P[1]^2)/($CellContext`P[
           2] $CellContext`P[
            3]^2) + ((
             10 $CellContext`q^3) $CellContext`P[1]^3)/($CellContext`P[
            2] $CellContext`P[3]^2) - ((60 $CellContext`q) $CellContext`P[
            2])/$CellContext`P[
           3]^2 - ((2000 $CellContext`q^2) $CellContext`P[2])/$CellContext`P[
           3]^2 - ((31060 $CellContext`q^3) $CellContext`P[2])/$CellContext`P[
           3]^2 + ((10 $CellContext`q^3) $CellContext`P[2])/($CellContext`P[
             1]^3 $CellContext`P[3]^2) - ((
            60 $CellContext`q^2) $CellContext`P[2])/($CellContext`P[
            1]^2 $CellContext`P[3]^2) - ((
            2000 $CellContext`q^3) $CellContext`P[2])/($CellContext`P[
            1]^2 $CellContext`P[
            3]^2) + ((10 $CellContext`q) $CellContext`P[2])/($CellContext`P[
            1] $CellContext`P[3]^2) + ((780 $CellContext`q^2) $CellContext`P[
             2])/($CellContext`P[
            1] $CellContext`P[3]^2) + ((
             15220 $CellContext`q^3) $CellContext`P[2])/($CellContext`P[
            1] $CellContext`P[
             3]^2) + (((10 $CellContext`q) $CellContext`P[1]) $CellContext`P[
             2])/$CellContext`P[
            3]^2 + (((780 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
             2])/$CellContext`P[
            3]^2 + (((15220 $CellContext`q^3) $CellContext`P[
              1]) $CellContext`P[2])/$CellContext`P[
            3]^2 - (((
             60 $CellContext`q^2) $CellContext`P[1]^2) $CellContext`P[
            2])/$CellContext`P[
           3]^2 - (((
             2000 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[
            2])/$CellContext`P[
           3]^2 + (((10 $CellContext`q^3) $CellContext`P[1]^3) $CellContext`P[
             2])/$CellContext`P[
            3]^2 + ((
             200 $CellContext`q^2) $CellContext`P[2]^2)/$CellContext`P[
            3]^2 + ((
             4560 $CellContext`q^3) $CellContext`P[2]^2)/$CellContext`P[
            3]^2 + ((
             200 $CellContext`q^3) $CellContext`P[2]^2)/($CellContext`P[
             1]^2 $CellContext`P[3]^2) - ((
            60 $CellContext`q^2) $CellContext`P[2]^2)/($CellContext`P[
           1] $CellContext`P[3]^2) - ((
            2000 $CellContext`q^3) $CellContext`P[2]^2)/($CellContext`P[
           1] $CellContext`P[
            3]^2) - (((60 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
             2]^2)/$CellContext`P[
           3]^2 - (((2000 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
             2]^2)/$CellContext`P[
           3]^2 + (((
              200 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[
              2]^2)/$CellContext`P[3]^2 - ((
            60 $CellContext`q^3) $CellContext`P[2]^3)/$CellContext`P[
           3]^2 + ((10 $CellContext`q^3) $CellContext`P[2]^3)/($CellContext`P[
            1] $CellContext`P[
             3]^2) + (((10 $CellContext`q^3) $CellContext`P[
              1]) $CellContext`P[2]^3)/$CellContext`P[3]^2 - 
          60/$CellContext`P[3] - (2000 $CellContext`q)/$CellContext`P[
          3] - (31060 $CellContext`q^2)/$CellContext`P[
          3] - (327600 $CellContext`q^3)/$CellContext`P[
          3] + (10 $CellContext`q^2)/($CellContext`P[1]^3 $CellContext`P[
            3]) + (780 $CellContext`q^3)/($CellContext`P[1]^3 $CellContext`P[
            3]) - (60 $CellContext`q)/($CellContext`P[1]^2 $CellContext`P[
           3]) - (2000 $CellContext`q^2)/($CellContext`P[1]^2 $CellContext`P[
           3]) - (31060 $CellContext`q^3)/($CellContext`P[1]^2 $CellContext`P[
           3]) + 10/($CellContext`P[1] $CellContext`P[3]) + (
            780 $CellContext`q)/($CellContext`P[1] $CellContext`P[3]) + (
            15220 $CellContext`q^2)/($CellContext`P[1] $CellContext`P[3]) + (
            179800 $CellContext`q^3)/($CellContext`P[1] $CellContext`P[3]) + (
            10 $CellContext`P[1])/$CellContext`P[
           3] + ((780 $CellContext`q) $CellContext`P[1])/$CellContext`P[
           3] + ((15220 $CellContext`q^2) $CellContext`P[1])/$CellContext`P[
           3] + ((179800 $CellContext`q^3) $CellContext`P[1])/$CellContext`P[
           3] - ((60 $CellContext`q) $CellContext`P[1]^2)/$CellContext`P[
          3] - ((2000 $CellContext`q^2) $CellContext`P[1]^2)/$CellContext`P[
          3] - ((31060 $CellContext`q^3) $CellContext`P[1]^2)/$CellContext`P[
          3] + ((10 $CellContext`q^2) $CellContext`P[1]^3)/$CellContext`P[
           3] + ((780 $CellContext`q^3) $CellContext`P[1]^3)/$CellContext`P[
           3] + (10 $CellContext`q^2)/($CellContext`P[2]^3 $CellContext`P[
            3]) + (780 $CellContext`q^3)/($CellContext`P[2]^3 $CellContext`P[
            3]) + (10 $CellContext`q^3)/(($CellContext`P[1]^2 $CellContext`P[
              2]^3) $CellContext`P[3]) + (
            5 $CellContext`q^2)/(($CellContext`P[
             1] $CellContext`P[2]^3) $CellContext`P[3]) - (
           240 $CellContext`q^3)/(($CellContext`P[
            1] $CellContext`P[2]^3) $CellContext`P[
           3]) + ((5 $CellContext`q^2) $CellContext`P[1])/($CellContext`P[
             2]^3 $CellContext`P[3]) - ((240 $CellContext`q^3) $CellContext`P[
            1])/($CellContext`P[2]^3 $CellContext`P[
           3]) + ((10 $CellContext`q^3) $CellContext`P[1]^2)/($CellContext`P[
             2]^3 $CellContext`P[3]) - (
           60 $CellContext`q)/($CellContext`P[2]^2 $CellContext`P[3]) - (
           2000 $CellContext`q^2)/($CellContext`P[2]^2 $CellContext`P[3]) - (
           31060 $CellContext`q^3)/($CellContext`P[2]^2 $CellContext`P[
           3]) + (10 $CellContext`q^3)/(($CellContext`P[1]^3 $CellContext`P[
              2]^2) $CellContext`P[3]) - (
           60 $CellContext`q^2)/(($CellContext`P[1]^2 $CellContext`P[
             2]^2) $CellContext`P[3]) - (
           2000 $CellContext`q^3)/(($CellContext`P[1]^2 $CellContext`P[
             2]^2) $CellContext`P[
           3]) + (10 $CellContext`q)/(($CellContext`P[
             1] $CellContext`P[2]^2) $CellContext`P[3]) + (
            780 $CellContext`q^2)/(($CellContext`P[
             1] $CellContext`P[2]^2) $CellContext`P[3]) + (
            15220 $CellContext`q^3)/(($CellContext`P[
             1] $CellContext`P[2]^2) $CellContext`P[
            3]) + ((10 $CellContext`q) $CellContext`P[1])/($CellContext`P[
             2]^2 $CellContext`P[
            3]) + ((780 $CellContext`q^2) $CellContext`P[1])/($CellContext`P[
             2]^2 $CellContext`P[
            3]) + ((15220 $CellContext`q^3) $CellContext`P[
             1])/($CellContext`P[2]^2 $CellContext`P[3]) - ((
            60 $CellContext`q^2) $CellContext`P[1]^2)/($CellContext`P[
            2]^2 $CellContext`P[
           3]) - ((2000 $CellContext`q^3) $CellContext`P[
             1]^2)/($CellContext`P[2]^2 $CellContext`P[
           3]) + ((10 $CellContext`q^3) $CellContext`P[1]^3)/($CellContext`P[
             2]^2 $CellContext`P[3]) + 
          10/($CellContext`P[2] $CellContext`P[3]) + (
            780 $CellContext`q)/($CellContext`P[2] $CellContext`P[3]) + (
            15220 $CellContext`q^2)/($CellContext`P[2] $CellContext`P[3]) + (
            179800 $CellContext`q^3)/($CellContext`P[2] $CellContext`P[3]) + (
            5 $CellContext`q^2)/(($CellContext`P[1]^3 $CellContext`P[
             2]) $CellContext`P[3]) - (
           240 $CellContext`q^3)/(($CellContext`P[1]^3 $CellContext`P[
            2]) $CellContext`P[
           3]) + (10 $CellContext`q)/(($CellContext`P[1]^2 $CellContext`P[
             2]) $CellContext`P[3]) + (
            780 $CellContext`q^2)/(($CellContext`P[1]^2 $CellContext`P[
             2]) $CellContext`P[3]) + (
            15220 $CellContext`q^3)/(($CellContext`P[1]^2 $CellContext`P[
             2]) $CellContext`P[3]) + 
          5/(($CellContext`P[1] $CellContext`P[2]) $CellContext`P[3]) - (
           240 $CellContext`q)/(($CellContext`P[1] $CellContext`P[
            2]) $CellContext`P[3]) - (
           6975 $CellContext`q^2)/(($CellContext`P[1] $CellContext`P[
            2]) $CellContext`P[3]) - (
           95600 $CellContext`q^3)/(($CellContext`P[1] $CellContext`P[
            2]) $CellContext`P[
           3]) + (5 $CellContext`P[1])/($CellContext`P[2] $CellContext`P[
            3]) - ((240 $CellContext`q) $CellContext`P[1])/($CellContext`P[
           2] $CellContext`P[
           3]) - ((6975 $CellContext`q^2) $CellContext`P[1])/($CellContext`P[
           2] $CellContext`P[
           3]) - ((95600 $CellContext`q^3) $CellContext`P[1])/($CellContext`P[
           2] $CellContext`P[
           3]) + ((10 $CellContext`q) $CellContext`P[1]^2)/($CellContext`P[
            2] $CellContext`P[
            3]) + ((780 $CellContext`q^2) $CellContext`P[
              1]^2)/($CellContext`P[2] $CellContext`P[
            3]) + ((15220 $CellContext`q^3) $CellContext`P[
              1]^2)/($CellContext`P[2] $CellContext`P[
            3]) + ((5 $CellContext`q^2) $CellContext`P[1]^3)/($CellContext`P[
            2] $CellContext`P[3]) - ((
            240 $CellContext`q^3) $CellContext`P[1]^3)/($CellContext`P[
           2] $CellContext`P[3]) + (10 $CellContext`P[2])/$CellContext`P[
           3] + ((780 $CellContext`q) $CellContext`P[2])/$CellContext`P[
           3] + ((15220 $CellContext`q^2) $CellContext`P[2])/$CellContext`P[
           3] + ((179800 $CellContext`q^3) $CellContext`P[2])/$CellContext`P[
           3] + ((5 $CellContext`q^2) $CellContext`P[2])/($CellContext`P[
             1]^3 $CellContext`P[3]) - ((240 $CellContext`q^3) $CellContext`P[
            2])/($CellContext`P[1]^3 $CellContext`P[
           3]) + ((10 $CellContext`q) $CellContext`P[2])/($CellContext`P[
             1]^2 $CellContext`P[
            3]) + ((780 $CellContext`q^2) $CellContext`P[2])/($CellContext`P[
             1]^2 $CellContext`P[
            3]) + ((15220 $CellContext`q^3) $CellContext`P[
             2])/($CellContext`P[1]^2 $CellContext`P[3]) + (
            5 $CellContext`P[2])/($CellContext`P[1] $CellContext`P[3]) - ((
            240 $CellContext`q) $CellContext`P[2])/($CellContext`P[
           1] $CellContext`P[
           3]) - ((6975 $CellContext`q^2) $CellContext`P[2])/($CellContext`P[
           1] $CellContext`P[
           3]) - ((95600 $CellContext`q^3) $CellContext`P[2])/($CellContext`P[
           1] $CellContext`P[
           3]) + ((5 $CellContext`P[1]) $CellContext`P[2])/$CellContext`P[
           3] - (((240 $CellContext`q) $CellContext`P[1]) $CellContext`P[
            2])/$CellContext`P[
          3] - (((6975 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
            2])/$CellContext`P[
          3] - (((95600 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
            2])/$CellContext`P[
          3] + (((10 $CellContext`q) $CellContext`P[1]^2) $CellContext`P[
             2])/$CellContext`P[
           3] + (((780 $CellContext`q^2) $CellContext`P[1]^2) $CellContext`P[
             2])/$CellContext`P[
           3] + (((15220 $CellContext`q^3) $CellContext`P[
               1]^2) $CellContext`P[2])/$CellContext`P[
           3] + (((5 $CellContext`q^2) $CellContext`P[1]^3) $CellContext`P[
             2])/$CellContext`P[
           3] - (((240 $CellContext`q^3) $CellContext`P[1]^3) $CellContext`P[
            2])/$CellContext`P[
          3] - ((60 $CellContext`q) $CellContext`P[2]^2)/$CellContext`P[
          3] - ((2000 $CellContext`q^2) $CellContext`P[2]^2)/$CellContext`P[
          3] - ((31060 $CellContext`q^3) $CellContext`P[2]^2)/$CellContext`P[
          3] + ((10 $CellContext`q^3) $CellContext`P[2]^2)/($CellContext`P[
             1]^3 $CellContext`P[3]) - ((
            60 $CellContext`q^2) $CellContext`P[2]^2)/($CellContext`P[
            1]^2 $CellContext`P[
           3]) - ((2000 $CellContext`q^3) $CellContext`P[
             2]^2)/($CellContext`P[1]^2 $CellContext`P[
           3]) + ((10 $CellContext`q) $CellContext`P[2]^2)/($CellContext`P[
            1] $CellContext`P[
            3]) + ((780 $CellContext`q^2) $CellContext`P[
              2]^2)/($CellContext`P[1] $CellContext`P[
            3]) + ((15220 $CellContext`q^3) $CellContext`P[
              2]^2)/($CellContext`P[1] $CellContext`P[
            3]) + (((10 $CellContext`q) $CellContext`P[1]) $CellContext`P[
              2]^2)/$CellContext`P[
           3] + (((780 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
              2]^2)/$CellContext`P[
           3] + (((15220 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
              2]^2)/$CellContext`P[
           3] - (((60 $CellContext`q^2) $CellContext`P[1]^2) $CellContext`P[
             2]^2)/$CellContext`P[
          3] - (((2000 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[
             2]^2)/$CellContext`P[
          3] + (((10 $CellContext`q^3) $CellContext`P[1]^3) $CellContext`P[
              2]^2)/$CellContext`P[
           3] + ((10 $CellContext`q^2) $CellContext`P[2]^3)/$CellContext`P[
           3] + ((780 $CellContext`q^3) $CellContext`P[2]^3)/$CellContext`P[
           3] + ((10 $CellContext`q^3) $CellContext`P[2]^3)/($CellContext`P[
             1]^2 $CellContext`P[
            3]) + ((5 $CellContext`q^2) $CellContext`P[2]^3)/($CellContext`P[
            1] $CellContext`P[3]) - ((
            240 $CellContext`q^3) $CellContext`P[2]^3)/($CellContext`P[
           1] $CellContext`P[
           3]) + (((5 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
              2]^3)/$CellContext`P[
           3] - (((240 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
             2]^3)/$CellContext`P[
          3] + (((10 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[
              2]^3)/$CellContext`P[3] - 
          60 $CellContext`P[3] - (2000 $CellContext`q) $CellContext`P[3] - (
           31060 $CellContext`q^2) $CellContext`P[3] - (
           327600 $CellContext`q^3) $CellContext`P[
           3] + ((10 $CellContext`q^2) $CellContext`P[3])/$CellContext`P[
            1]^3 + ((780 $CellContext`q^3) $CellContext`P[3])/$CellContext`P[
            1]^3 - ((60 $CellContext`q) $CellContext`P[3])/$CellContext`P[
           1]^2 - ((2000 $CellContext`q^2) $CellContext`P[3])/$CellContext`P[
           1]^2 - ((31060 $CellContext`q^3) $CellContext`P[3])/$CellContext`P[
           1]^2 + (10 $CellContext`P[3])/$CellContext`P[
           1] + ((780 $CellContext`q) $CellContext`P[3])/$CellContext`P[
           1] + ((15220 $CellContext`q^2) $CellContext`P[3])/$CellContext`P[
           1] + ((179800 $CellContext`q^3) $CellContext`P[3])/$CellContext`P[
           1] + (10 $CellContext`P[1]) $CellContext`P[
            3] + ((780 $CellContext`q) $CellContext`P[1]) $CellContext`P[
            3] + ((15220 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
            3] + ((179800 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
            3] - ((60 $CellContext`q) $CellContext`P[1]^2) $CellContext`P[
           3] - ((2000 $CellContext`q^2) $CellContext`P[1]^2) $CellContext`P[
           3] - ((31060 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[
           3] + ((10 $CellContext`q^2) $CellContext`P[1]^3) $CellContext`P[
            3] + ((780 $CellContext`q^3) $CellContext`P[1]^3) $CellContext`P[
            3] + ((10 $CellContext`q^2) $CellContext`P[3])/$CellContext`P[
            2]^3 + ((780 $CellContext`q^3) $CellContext`P[3])/$CellContext`P[
            2]^3 + ((10 $CellContext`q^3) $CellContext`P[3])/($CellContext`P[
             1]^2 $CellContext`P[2]^3) + ((5 $CellContext`q^2) $CellContext`P[
             3])/($CellContext`P[1] $CellContext`P[2]^3) - ((
            240 $CellContext`q^3) $CellContext`P[3])/($CellContext`P[
           1] $CellContext`P[
            2]^3) + (((5 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
             3])/$CellContext`P[
            2]^3 - (((240 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
            3])/$CellContext`P[
           2]^3 + (((10 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[
             3])/$CellContext`P[2]^3 - ((60 $CellContext`q) $CellContext`P[
            3])/$CellContext`P[
           2]^2 - ((2000 $CellContext`q^2) $CellContext`P[3])/$CellContext`P[
           2]^2 - ((31060 $CellContext`q^3) $CellContext`P[3])/$CellContext`P[
           2]^2 + ((10 $CellContext`q^3) $CellContext`P[3])/($CellContext`P[
             1]^3 $CellContext`P[2]^2) - ((
            60 $CellContext`q^2) $CellContext`P[3])/($CellContext`P[
            1]^2 $CellContext`P[2]^2) - ((
            2000 $CellContext`q^3) $CellContext`P[3])/($CellContext`P[
            1]^2 $CellContext`P[
            2]^2) + ((10 $CellContext`q) $CellContext`P[3])/($CellContext`P[
            1] $CellContext`P[2]^2) + ((780 $CellContext`q^2) $CellContext`P[
             3])/($CellContext`P[
            1] $CellContext`P[2]^2) + ((
             15220 $CellContext`q^3) $CellContext`P[3])/($CellContext`P[
            1] $CellContext`P[
             2]^2) + (((10 $CellContext`q) $CellContext`P[1]) $CellContext`P[
             3])/$CellContext`P[
            2]^2 + (((780 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
             3])/$CellContext`P[
            2]^2 + (((15220 $CellContext`q^3) $CellContext`P[
              1]) $CellContext`P[3])/$CellContext`P[
            2]^2 - (((
             60 $CellContext`q^2) $CellContext`P[1]^2) $CellContext`P[
            3])/$CellContext`P[
           2]^2 - (((
             2000 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[
            3])/$CellContext`P[
           2]^2 + (((10 $CellContext`q^3) $CellContext`P[1]^3) $CellContext`P[
             3])/$CellContext`P[2]^2 + (10 $CellContext`P[3])/$CellContext`P[
           2] + ((780 $CellContext`q) $CellContext`P[3])/$CellContext`P[
           2] + ((15220 $CellContext`q^2) $CellContext`P[3])/$CellContext`P[
           2] + ((179800 $CellContext`q^3) $CellContext`P[3])/$CellContext`P[
           2] + ((5 $CellContext`q^2) $CellContext`P[3])/($CellContext`P[
             1]^3 $CellContext`P[2]) - ((240 $CellContext`q^3) $CellContext`P[
            3])/($CellContext`P[1]^3 $CellContext`P[
           2]) + ((10 $CellContext`q) $CellContext`P[3])/($CellContext`P[
             1]^2 $CellContext`P[
            2]) + ((780 $CellContext`q^2) $CellContext`P[3])/($CellContext`P[
             1]^2 $CellContext`P[
            2]) + ((15220 $CellContext`q^3) $CellContext`P[
             3])/($CellContext`P[1]^2 $CellContext`P[2]) + (
            5 $CellContext`P[3])/($CellContext`P[1] $CellContext`P[2]) - ((
            240 $CellContext`q) $CellContext`P[3])/($CellContext`P[
           1] $CellContext`P[
           2]) - ((6975 $CellContext`q^2) $CellContext`P[3])/($CellContext`P[
           1] $CellContext`P[
           2]) - ((95600 $CellContext`q^3) $CellContext`P[3])/($CellContext`P[
           1] $CellContext`P[
           2]) + ((5 $CellContext`P[1]) $CellContext`P[3])/$CellContext`P[
           2] - (((240 $CellContext`q) $CellContext`P[1]) $CellContext`P[
            3])/$CellContext`P[
          2] - (((6975 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
            3])/$CellContext`P[
          2] - (((95600 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
            3])/$CellContext`P[
          2] + (((10 $CellContext`q) $CellContext`P[1]^2) $CellContext`P[
             3])/$CellContext`P[
           2] + (((780 $CellContext`q^2) $CellContext`P[1]^2) $CellContext`P[
             3])/$CellContext`P[
           2] + (((15220 $CellContext`q^3) $CellContext`P[
               1]^2) $CellContext`P[3])/$CellContext`P[
           2] + (((5 $CellContext`q^2) $CellContext`P[1]^3) $CellContext`P[
             3])/$CellContext`P[
           2] - (((240 $CellContext`q^3) $CellContext`P[1]^3) $CellContext`P[
            3])/$CellContext`P[
          2] + (10 $CellContext`P[2]) $CellContext`P[
            3] + ((780 $CellContext`q) $CellContext`P[2]) $CellContext`P[
            3] + ((15220 $CellContext`q^2) $CellContext`P[2]) $CellContext`P[
            3] + ((179800 $CellContext`q^3) $CellContext`P[2]) $CellContext`P[
            3] + (((5 $CellContext`q^2) $CellContext`P[2]) $CellContext`P[
             3])/$CellContext`P[
            1]^3 - (((240 $CellContext`q^3) $CellContext`P[2]) $CellContext`P[
            3])/$CellContext`P[
           1]^3 + (((10 $CellContext`q) $CellContext`P[2]) $CellContext`P[
             3])/$CellContext`P[
            1]^2 + (((780 $CellContext`q^2) $CellContext`P[2]) $CellContext`P[
             3])/$CellContext`P[
            1]^2 + (((15220 $CellContext`q^3) $CellContext`P[
              2]) $CellContext`P[3])/$CellContext`P[
            1]^2 + ((5 $CellContext`P[2]) $CellContext`P[3])/$CellContext`P[
           1] - (((240 $CellContext`q) $CellContext`P[2]) $CellContext`P[
            3])/$CellContext`P[
          1] - (((6975 $CellContext`q^2) $CellContext`P[2]) $CellContext`P[
            3])/$CellContext`P[
          1] - (((95600 $CellContext`q^3) $CellContext`P[2]) $CellContext`P[
            3])/$CellContext`P[
          1] + ((5 $CellContext`P[1]) $CellContext`P[2]) $CellContext`P[
            3] - (((240 $CellContext`q) $CellContext`P[1]) $CellContext`P[
            2]) $CellContext`P[
           3] - (((6975 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
            2]) $CellContext`P[
           3] - (((95600 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
            2]) $CellContext`P[
           3] + (((10 $CellContext`q) $CellContext`P[1]^2) $CellContext`P[
             2]) $CellContext`P[
            3] + (((780 $CellContext`q^2) $CellContext`P[1]^2) $CellContext`P[
             2]) $CellContext`P[
            3] + (((15220 $CellContext`q^3) $CellContext`P[
               1]^2) $CellContext`P[2]) $CellContext`P[
            3] + (((5 $CellContext`q^2) $CellContext`P[1]^3) $CellContext`P[
             2]) $CellContext`P[
            3] - (((240 $CellContext`q^3) $CellContext`P[1]^3) $CellContext`P[
            2]) $CellContext`P[
           3] - ((60 $CellContext`q) $CellContext`P[2]^2) $CellContext`P[
           3] - ((2000 $CellContext`q^2) $CellContext`P[2]^2) $CellContext`P[
           3] - ((31060 $CellContext`q^3) $CellContext`P[2]^2) $CellContext`P[
           3] + (((10 $CellContext`q^3) $CellContext`P[2]^2) $CellContext`P[
             3])/$CellContext`P[
            1]^3 - (((
             60 $CellContext`q^2) $CellContext`P[2]^2) $CellContext`P[
            3])/$CellContext`P[
           1]^2 - (((
             2000 $CellContext`q^3) $CellContext`P[2]^2) $CellContext`P[
            3])/$CellContext`P[
           1]^2 + (((10 $CellContext`q) $CellContext`P[2]^2) $CellContext`P[
             3])/$CellContext`P[
           1] + (((780 $CellContext`q^2) $CellContext`P[2]^2) $CellContext`P[
             3])/$CellContext`P[
           1] + (((15220 $CellContext`q^3) $CellContext`P[
               2]^2) $CellContext`P[3])/$CellContext`P[
           1] + (((10 $CellContext`q) $CellContext`P[1]) $CellContext`P[
              2]^2) $CellContext`P[
            3] + (((780 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
              2]^2) $CellContext`P[
            3] + (((15220 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
              2]^2) $CellContext`P[
            3] - (((60 $CellContext`q^2) $CellContext`P[1]^2) $CellContext`P[
             2]^2) $CellContext`P[
           3] - (((2000 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[
             2]^2) $CellContext`P[
           3] + (((10 $CellContext`q^3) $CellContext`P[1]^3) $CellContext`P[
              2]^2) $CellContext`P[
            3] + ((10 $CellContext`q^2) $CellContext`P[2]^3) $CellContext`P[
            3] + ((780 $CellContext`q^3) $CellContext`P[2]^3) $CellContext`P[
            3] + (((10 $CellContext`q^3) $CellContext`P[2]^3) $CellContext`P[
             3])/$CellContext`P[
            1]^2 + (((5 $CellContext`q^2) $CellContext`P[2]^3) $CellContext`P[
             3])/$CellContext`P[
           1] - (((240 $CellContext`q^3) $CellContext`P[2]^3) $CellContext`P[
            3])/$CellContext`P[
          1] + (((5 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
              2]^3) $CellContext`P[
            3] - (((240 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
             2]^3) $CellContext`P[
           3] + (((10 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[
              2]^3) $CellContext`P[3] + (
            200 $CellContext`q) $CellContext`P[3]^2 + (
            4560 $CellContext`q^2) $CellContext`P[3]^2 + (
            60480 $CellContext`q^3) $CellContext`P[3]^2 - ((
            60 $CellContext`q^3) $CellContext`P[3]^2)/$CellContext`P[
           1]^3 + ((200 $CellContext`q^2) $CellContext`P[3]^2)/$CellContext`P[
            1]^2 + ((
             4560 $CellContext`q^3) $CellContext`P[3]^2)/$CellContext`P[
            1]^2 - ((60 $CellContext`q) $CellContext`P[3]^2)/$CellContext`P[
          1] - ((2000 $CellContext`q^2) $CellContext`P[3]^2)/$CellContext`P[
          1] - ((31060 $CellContext`q^3) $CellContext`P[3]^2)/$CellContext`P[
          1] - ((60 $CellContext`q) $CellContext`P[1]) $CellContext`P[
            3]^2 - ((2000 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
            3]^2 - ((31060 $CellContext`q^3) $CellContext`P[
            1]) $CellContext`P[
            3]^2 + ((
             200 $CellContext`q^2) $CellContext`P[1]^2) $CellContext`P[
             3]^2 + ((
             4560 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[
             3]^2 - ((
            60 $CellContext`q^3) $CellContext`P[1]^3) $CellContext`P[3]^2 - ((
            60 $CellContext`q^3) $CellContext`P[3]^2)/$CellContext`P[
           2]^3 + ((10 $CellContext`q^3) $CellContext`P[3]^2)/($CellContext`P[
            1] $CellContext`P[
             2]^3) + (((10 $CellContext`q^3) $CellContext`P[
              1]) $CellContext`P[3]^2)/$CellContext`P[
            2]^3 + ((
             200 $CellContext`q^2) $CellContext`P[3]^2)/$CellContext`P[
            2]^2 + ((
             4560 $CellContext`q^3) $CellContext`P[3]^2)/$CellContext`P[
            2]^2 + ((
             200 $CellContext`q^3) $CellContext`P[3]^2)/($CellContext`P[
             1]^2 $CellContext`P[2]^2) - ((
            60 $CellContext`q^2) $CellContext`P[3]^2)/($CellContext`P[
           1] $CellContext`P[2]^2) - ((
            2000 $CellContext`q^3) $CellContext`P[3]^2)/($CellContext`P[
           1] $CellContext`P[
            2]^2) - (((60 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
             3]^2)/$CellContext`P[
           2]^2 - (((2000 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
             3]^2)/$CellContext`P[
           2]^2 + (((
              200 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[
              3]^2)/$CellContext`P[2]^2 - ((
            60 $CellContext`q) $CellContext`P[3]^2)/$CellContext`P[
          2] - ((2000 $CellContext`q^2) $CellContext`P[3]^2)/$CellContext`P[
          2] - ((31060 $CellContext`q^3) $CellContext`P[3]^2)/$CellContext`P[
          2] + ((10 $CellContext`q^3) $CellContext`P[3]^2)/($CellContext`P[
             1]^3 $CellContext`P[2]) - ((
            60 $CellContext`q^2) $CellContext`P[3]^2)/($CellContext`P[
            1]^2 $CellContext`P[
           2]) - ((2000 $CellContext`q^3) $CellContext`P[
             3]^2)/($CellContext`P[1]^2 $CellContext`P[
           2]) + ((10 $CellContext`q) $CellContext`P[3]^2)/($CellContext`P[
            1] $CellContext`P[
            2]) + ((780 $CellContext`q^2) $CellContext`P[
              3]^2)/($CellContext`P[1] $CellContext`P[
            2]) + ((15220 $CellContext`q^3) $CellContext`P[
              3]^2)/($CellContext`P[1] $CellContext`P[
            2]) + (((10 $CellContext`q) $CellContext`P[1]) $CellContext`P[
              3]^2)/$CellContext`P[
           2] + (((780 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
              3]^2)/$CellContext`P[
           2] + (((15220 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
              3]^2)/$CellContext`P[
           2] - (((60 $CellContext`q^2) $CellContext`P[1]^2) $CellContext`P[
             3]^2)/$CellContext`P[
          2] - (((2000 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[
             3]^2)/$CellContext`P[
          2] + (((10 $CellContext`q^3) $CellContext`P[1]^3) $CellContext`P[
              3]^2)/$CellContext`P[
           2] - ((60 $CellContext`q) $CellContext`P[2]) $CellContext`P[
            3]^2 - ((2000 $CellContext`q^2) $CellContext`P[2]) $CellContext`P[
            3]^2 - ((31060 $CellContext`q^3) $CellContext`P[
            2]) $CellContext`P[
            3]^2 + (((10 $CellContext`q^3) $CellContext`P[2]) $CellContext`P[
              3]^2)/$CellContext`P[
            1]^3 - (((60 $CellContext`q^2) $CellContext`P[2]) $CellContext`P[
             3]^2)/$CellContext`P[
           1]^2 - (((2000 $CellContext`q^3) $CellContext`P[2]) $CellContext`P[
             3]^2)/$CellContext`P[
           1]^2 + (((10 $CellContext`q) $CellContext`P[2]) $CellContext`P[
              3]^2)/$CellContext`P[
           1] + (((780 $CellContext`q^2) $CellContext`P[2]) $CellContext`P[
              3]^2)/$CellContext`P[
           1] + (((15220 $CellContext`q^3) $CellContext`P[2]) $CellContext`P[
              3]^2)/$CellContext`P[
           1] + (((10 $CellContext`q) $CellContext`P[1]) $CellContext`P[
             2]) $CellContext`P[
             3]^2 + (((780 $CellContext`q^2) $CellContext`P[
              1]) $CellContext`P[2]) $CellContext`P[
             3]^2 + (((15220 $CellContext`q^3) $CellContext`P[
              1]) $CellContext`P[2]) $CellContext`P[3]^2 - (((
             60 $CellContext`q^2) $CellContext`P[1]^2) $CellContext`P[
            2]) $CellContext`P[
            3]^2 - (((
             2000 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[
            2]) $CellContext`P[
            3]^2 + (((
              10 $CellContext`q^3) $CellContext`P[1]^3) $CellContext`P[
             2]) $CellContext`P[3]^2 + ((
             200 $CellContext`q^2) $CellContext`P[2]^2) $CellContext`P[
             3]^2 + ((
             4560 $CellContext`q^3) $CellContext`P[2]^2) $CellContext`P[
             3]^2 + (((
              200 $CellContext`q^3) $CellContext`P[2]^2) $CellContext`P[
              3]^2)/$CellContext`P[
            1]^2 - (((
             60 $CellContext`q^2) $CellContext`P[2]^2) $CellContext`P[
             3]^2)/$CellContext`P[
          1] - (((2000 $CellContext`q^3) $CellContext`P[2]^2) $CellContext`P[
             3]^2)/$CellContext`P[
          1] - (((60 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
             2]^2) $CellContext`P[
            3]^2 - (((2000 $CellContext`q^3) $CellContext`P[
             1]) $CellContext`P[2]^2) $CellContext`P[
            3]^2 + (((
              200 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[
              2]^2) $CellContext`P[3]^2 - ((
            60 $CellContext`q^3) $CellContext`P[2]^3) $CellContext`P[
            3]^2 + (((
              10 $CellContext`q^3) $CellContext`P[2]^3) $CellContext`P[
              3]^2)/$CellContext`P[
           1] + (((10 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
              2]^3) $CellContext`P[3]^2 - (
           60 $CellContext`q^2) $CellContext`P[3]^3 - (
           2000 $CellContext`q^3) $CellContext`P[3]^3 - ((
            60 $CellContext`q^3) $CellContext`P[3]^3)/$CellContext`P[
           1]^2 + ((10 $CellContext`q^2) $CellContext`P[3]^3)/$CellContext`P[
           1] + ((780 $CellContext`q^3) $CellContext`P[3]^3)/$CellContext`P[
           1] + ((10 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
             3]^3 + ((780 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
             3]^3 - ((
            60 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[3]^3 - ((
            60 $CellContext`q^3) $CellContext`P[3]^3)/$CellContext`P[
           2]^2 + ((10 $CellContext`q^3) $CellContext`P[3]^3)/($CellContext`P[
            1] $CellContext`P[
             2]^2) + (((10 $CellContext`q^3) $CellContext`P[
              1]) $CellContext`P[3]^3)/$CellContext`P[
            2]^2 + ((10 $CellContext`q^2) $CellContext`P[3]^3)/$CellContext`P[
           2] + ((780 $CellContext`q^3) $CellContext`P[3]^3)/$CellContext`P[
           2] + ((10 $CellContext`q^3) $CellContext`P[3]^3)/($CellContext`P[
             1]^2 $CellContext`P[
            2]) + ((5 $CellContext`q^2) $CellContext`P[3]^3)/($CellContext`P[
            1] $CellContext`P[2]) - ((
            240 $CellContext`q^3) $CellContext`P[3]^3)/($CellContext`P[
           1] $CellContext`P[
           2]) + (((5 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
              3]^3)/$CellContext`P[
           2] - (((240 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
             3]^3)/$CellContext`P[
          2] + (((10 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[
              3]^3)/$CellContext`P[
           2] + ((10 $CellContext`q^2) $CellContext`P[2]) $CellContext`P[
             3]^3 + ((780 $CellContext`q^3) $CellContext`P[2]) $CellContext`P[
             3]^3 + (((10 $CellContext`q^3) $CellContext`P[2]) $CellContext`P[
              3]^3)/$CellContext`P[
            1]^2 + (((5 $CellContext`q^2) $CellContext`P[2]) $CellContext`P[
              3]^3)/$CellContext`P[
           1] - (((240 $CellContext`q^3) $CellContext`P[2]) $CellContext`P[
             3]^3)/$CellContext`P[
          1] + (((5 $CellContext`q^2) $CellContext`P[1]) $CellContext`P[
             2]) $CellContext`P[3]^3 - (((
             240 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
            2]) $CellContext`P[
            3]^3 + (((
              10 $CellContext`q^3) $CellContext`P[1]^2) $CellContext`P[
             2]) $CellContext`P[3]^3 - ((
            60 $CellContext`q^3) $CellContext`P[2]^2) $CellContext`P[
            3]^3 + (((
              10 $CellContext`q^3) $CellContext`P[2]^2) $CellContext`P[
              3]^3)/$CellContext`P[
           1] + (((10 $CellContext`q^3) $CellContext`P[1]) $CellContext`P[
              2]^2) $CellContext`P[3]^3, $CellContext`\[Phi][6, LieART`G2] = 
         SeriesData[$CellContext`q, 
           0, {-6 + $CellContext`P[1]^(-2) + 2/$CellContext`P[1] + 
            2 $CellContext`P[1] + $CellContext`P[1]^2 + $CellContext`P[
              2]^(-2) + 1/($CellContext`P[1]^2 $CellContext`P[2]^2) - 
            2/($CellContext`P[1] $CellContext`P[2]^2) + 2/$CellContext`P[2] - 
            2/($CellContext`P[1]^2 $CellContext`P[2]) + 
            2/($CellContext`P[1] $CellContext`P[2]) - (
             2 $CellContext`P[1])/$CellContext`P[2] + 
            2 $CellContext`P[2] - (2 $CellContext`P[2])/$CellContext`P[
            1] + (2 $CellContext`P[1]) $CellContext`P[2] - (
             2 $CellContext`P[1]^2) $CellContext`P[
             2] + $CellContext`P[2]^2 - (
             2 $CellContext`P[1]) $CellContext`P[
              2]^2 + $CellContext`P[1]^2 $CellContext`P[2]^2, 0, 0, 0, 0, 0, 
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -96 - 
            2/$CellContext`P[1]^3 + 16/$CellContext`P[1]^2 + 
            34/$CellContext`P[1] + 34 $CellContext`P[1] + 
            16 $CellContext`P[1]^2 - 2 $CellContext`P[1]^3 - 
            2/$CellContext`P[2]^3 - 
            2/($CellContext`P[1]^3 $CellContext`P[2]^3) + 
            2/($CellContext`P[1]^2 $CellContext`P[2]^3) + 
            2/($CellContext`P[1] $CellContext`P[2]^3) + 
            16/$CellContext`P[2]^2 + 
            2/($CellContext`P[1]^3 $CellContext`P[2]^2) + 
            16/($CellContext`P[1]^2 $CellContext`P[2]^2) - 
            36/($CellContext`P[
             1] $CellContext`P[2]^2) + (2 $CellContext`P[1])/$CellContext`P[
              2]^2 + 34/$CellContext`P[2] + 
            2/($CellContext`P[1]^3 $CellContext`P[2]) - 
            36/($CellContext`P[1]^2 $CellContext`P[2]) + 
            34/($CellContext`P[1] $CellContext`P[2]) - (
             36 $CellContext`P[1])/$CellContext`P[
            2] + (2 $CellContext`P[1]^2)/$CellContext`P[2] + 
            34 $CellContext`P[2] + (2 $CellContext`P[2])/$CellContext`P[
              1]^2 - (36 $CellContext`P[2])/$CellContext`P[
            1] + (34 $CellContext`P[1]) $CellContext`P[2] - (
             36 $CellContext`P[1]^2) $CellContext`P[
             2] + (2 $CellContext`P[1]^3) $CellContext`P[2] + 
            16 $CellContext`P[2]^2 + (2 $CellContext`P[2]^2)/$CellContext`P[
             1] - (36 $CellContext`P[1]) $CellContext`P[2]^2 + (
              16 $CellContext`P[1]^2) $CellContext`P[2]^2 + (
              2 $CellContext`P[1]^3) $CellContext`P[2]^2 - 
            2 $CellContext`P[2]^3 + (
              2 $CellContext`P[1]) $CellContext`P[2]^3 + (
              2 $CellContext`P[1]^2) $CellContext`P[2]^3 - (
             2 $CellContext`P[1]^3) $CellContext`P[2]^3, 0, 0, 0, 0, 0, 0, 0, 
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
            0, -918 + $CellContext`P[1]^(-4) - 36/$CellContext`P[1]^3 + 
            158/$CellContext`P[1]^2 + 336/$CellContext`P[1] + 
            336 $CellContext`P[1] + 158 $CellContext`P[1]^2 - 
            36 $CellContext`P[1]^3 + $CellContext`P[1]^4 + $CellContext`P[
              2]^(-4) + 1/($CellContext`P[1]^4 $CellContext`P[2]^4) + 
            2/($CellContext`P[1]^3 $CellContext`P[2]^4) - 
            6/($CellContext`P[1]^2 $CellContext`P[2]^4) + 
            2/($CellContext`P[1] $CellContext`P[2]^4) - 
            36/$CellContext`P[2]^3 + 
            2/($CellContext`P[1]^4 $CellContext`P[2]^3) - 
            36/($CellContext`P[1]^3 $CellContext`P[2]^3) + 
            34/($CellContext`P[1]^2 $CellContext`P[2]^3) + 
            34/($CellContext`P[1] $CellContext`P[2]^3) + (
              2 $CellContext`P[1])/$CellContext`P[2]^3 + 
            158/$CellContext`P[2]^2 - 
            6/($CellContext`P[1]^4 $CellContext`P[2]^2) + 
            34/($CellContext`P[1]^3 $CellContext`P[2]^2) + 
            158/($CellContext`P[1]^2 $CellContext`P[2]^2) - 
            372/($CellContext`P[
             1] $CellContext`P[2]^2) + (34 $CellContext`P[1])/$CellContext`P[
              2]^2 - (6 $CellContext`P[1]^2)/$CellContext`P[2]^2 + 
            336/$CellContext`P[2] + 2/($CellContext`P[1]^4 $CellContext`P[2]) + 
            34/($CellContext`P[1]^3 $CellContext`P[2]) - 
            372/($CellContext`P[1]^2 $CellContext`P[2]) + 
            336/($CellContext`P[1] $CellContext`P[2]) - (
             372 $CellContext`P[1])/$CellContext`P[
            2] + (34 $CellContext`P[1]^2)/$CellContext`P[
             2] + (2 $CellContext`P[1]^3)/$CellContext`P[2] + 
            336 $CellContext`P[2] + (2 $CellContext`P[2])/$CellContext`P[
              1]^3 + (34 $CellContext`P[2])/$CellContext`P[1]^2 - (
             372 $CellContext`P[2])/$CellContext`P[
            1] + (336 $CellContext`P[1]) $CellContext`P[2] - (
             372 $CellContext`P[1]^2) $CellContext`P[
             2] + (34 $CellContext`P[1]^3) $CellContext`P[2] + (
              2 $CellContext`P[1]^4) $CellContext`P[2] + 
            158 $CellContext`P[2]^2 - (6 $CellContext`P[2]^2)/$CellContext`P[
             1]^2 + (34 $CellContext`P[2]^2)/$CellContext`P[1] - (
             372 $CellContext`P[1]) $CellContext`P[2]^2 + (
              158 $CellContext`P[1]^2) $CellContext`P[2]^2 + (
              34 $CellContext`P[1]^3) $CellContext`P[2]^2 - (
             6 $CellContext`P[1]^4) $CellContext`P[2]^2 - 
            36 $CellContext`P[2]^3 + (2 $CellContext`P[2]^3)/$CellContext`P[
             1] + (34 $CellContext`P[1]) $CellContext`P[2]^3 + (
              34 $CellContext`P[1]^2) $CellContext`P[2]^3 - (
             36 $CellContext`P[1]^3) $CellContext`P[2]^3 + (
              2 $CellContext`P[1]^4) $CellContext`P[2]^3 + $CellContext`P[
              2]^4 + (2 $CellContext`P[1]) $CellContext`P[2]^4 - (
             6 $CellContext`P[1]^2) $CellContext`P[2]^4 + (
              2 $CellContext`P[1]^3) $CellContext`P[2]^4 + $CellContext`P[
               1]^4 $CellContext`P[2]^4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -6624 + 16/$CellContext`P[1]^4 - 
            372/$CellContext`P[1]^3 + 1184/$CellContext`P[1]^2 + 
            2484/$CellContext`P[1] + 2484 $CellContext`P[1] + 
            1184 $CellContext`P[1]^2 - 372 $CellContext`P[1]^3 + 
            16 $CellContext`P[1]^4 - 
            2/($CellContext`P[1]^4 $CellContext`P[2]^5) + 
            2/($CellContext`P[1]^3 $CellContext`P[2]^5) + 
            2/($CellContext`P[1]^2 $CellContext`P[2]^5) - 
            2/($CellContext`P[1] $CellContext`P[2]^5) + 
            16/$CellContext`P[2]^4 - 
            2/($CellContext`P[1]^5 $CellContext`P[2]^4) + 
            16/($CellContext`P[1]^4 $CellContext`P[2]^4) + 
            34/($CellContext`P[1]^3 $CellContext`P[2]^4) - 
            96/($CellContext`P[1]^2 $CellContext`P[2]^4) + 
            34/($CellContext`P[1] $CellContext`P[2]^4) - (
             2 $CellContext`P[1])/$CellContext`P[2]^4 - 
            372/$CellContext`P[2]^3 + 
            2/($CellContext`P[1]^5 $CellContext`P[2]^3) + 
            34/($CellContext`P[1]^4 $CellContext`P[2]^3) - 
            372/($CellContext`P[1]^3 $CellContext`P[2]^3) + 
            336/($CellContext`P[1]^2 $CellContext`P[2]^3) + 
            336/($CellContext`P[1] $CellContext`P[2]^3) + (
              34 $CellContext`P[1])/$CellContext`P[2]^3 + (
              2 $CellContext`P[1]^2)/$CellContext`P[2]^3 + 
            1184/$CellContext`P[2]^2 + 
            2/($CellContext`P[1]^5 $CellContext`P[2]^2) - 
            96/($CellContext`P[1]^4 $CellContext`P[2]^2) + 
            336/($CellContext`P[1]^3 $CellContext`P[2]^2) + 
            1184/($CellContext`P[1]^2 $CellContext`P[2]^2) - 
            2852/($CellContext`P[
             1] $CellContext`P[2]^2) + (336 $CellContext`P[1])/$CellContext`P[
              2]^2 - (96 $CellContext`P[1]^2)/$CellContext`P[
             2]^2 + (2 $CellContext`P[1]^3)/$CellContext`P[2]^2 + 
            2484/$CellContext`P[2] - 
            2/($CellContext`P[1]^5 $CellContext`P[2]) + 
            34/($CellContext`P[1]^4 $CellContext`P[2]) + 
            336/($CellContext`P[1]^3 $CellContext`P[2]) - 
            2852/($CellContext`P[1]^2 $CellContext`P[2]) + 
            2484/($CellContext`P[1] $CellContext`P[2]) - (
             2852 $CellContext`P[1])/$CellContext`P[
            2] + (336 $CellContext`P[1]^2)/$CellContext`P[
             2] + (34 $CellContext`P[1]^3)/$CellContext`P[2] - (
             2 $CellContext`P[1]^4)/$CellContext`P[2] + 
            2484 $CellContext`P[2] - (2 $CellContext`P[2])/$CellContext`P[
             1]^4 + (34 $CellContext`P[2])/$CellContext`P[1]^3 + (
              336 $CellContext`P[2])/$CellContext`P[1]^2 - (
             2852 $CellContext`P[2])/$CellContext`P[
            1] + (2484 $CellContext`P[1]) $CellContext`P[2] - (
             2852 $CellContext`P[1]^2) $CellContext`P[
             2] + (336 $CellContext`P[1]^3) $CellContext`P[2] + (
              34 $CellContext`P[1]^4) $CellContext`P[2] - (
             2 $CellContext`P[1]^5) $CellContext`P[2] + 
            1184 $CellContext`P[2]^2 + (2 $CellContext`P[2]^2)/$CellContext`P[
              1]^3 - (96 $CellContext`P[2]^2)/$CellContext`P[
             1]^2 + (336 $CellContext`P[2]^2)/$CellContext`P[1] - (
             2852 $CellContext`P[1]) $CellContext`P[2]^2 + (
              1184 $CellContext`P[1]^2) $CellContext`P[2]^2 + (
              336 $CellContext`P[1]^3) $CellContext`P[2]^2 - (
             96 $CellContext`P[1]^4) $CellContext`P[2]^2 + (
              2 $CellContext`P[1]^5) $CellContext`P[2]^2 - 
            372 $CellContext`P[2]^3 + (2 $CellContext`P[2]^3)/$CellContext`P[
              1]^2 + (34 $CellContext`P[2]^3)/$CellContext`P[
             1] + (336 $CellContext`P[1]) $CellContext`P[2]^3 + (
              336 $CellContext`P[1]^2) $CellContext`P[2]^3 - (
             372 $CellContext`P[1]^3) $CellContext`P[2]^3 + (
              34 $CellContext`P[1]^4) $CellContext`P[2]^3 + (
              2 $CellContext`P[1]^5) $CellContext`P[2]^3 + 
            16 $CellContext`P[2]^4 - (2 $CellContext`P[2]^4)/$CellContext`P[
            1] + (34 $CellContext`P[1]) $CellContext`P[2]^4 - (
             96 $CellContext`P[1]^2) $CellContext`P[2]^4 + (
              34 $CellContext`P[1]^3) $CellContext`P[2]^4 + (
              16 $CellContext`P[1]^4) $CellContext`P[2]^4 - (
             2 $CellContext`P[1]^5) $CellContext`P[2]^4 - (
             2 $CellContext`P[1]) $CellContext`P[2]^5 + (
              2 $CellContext`P[1]^2) $CellContext`P[2]^5 + (
              2 $CellContext`P[1]^3) $CellContext`P[2]^5 - (
             2 $CellContext`P[1]^4) $CellContext`P[2]^5}, 0, 96, 
           24], $CellContext`\[Phi][6, 
           LieART`Algebra[LieART`B][3]] = 
         8 - 4/$CellContext`P[1] - 4 $CellContext`P[1] - 4/$CellContext`P[2] + 
          2/($CellContext`P[1] $CellContext`P[2]) + (
            2 $CellContext`P[1])/$CellContext`P[2] - 
          4 $CellContext`P[2] + (2 $CellContext`P[2])/$CellContext`P[
           1] + (2 $CellContext`P[1]) $CellContext`P[2] - 4/$CellContext`P[3] + 
          2/($CellContext`P[1] $CellContext`P[3]) + (
            2 $CellContext`P[1])/$CellContext`P[3] + 
          2/($CellContext`P[2] $CellContext`P[3]) - 
          1/(($CellContext`P[1] $CellContext`P[2]) $CellContext`P[
           3]) - $CellContext`P[1]/($CellContext`P[2] $CellContext`P[
           3]) + (2 $CellContext`P[2])/$CellContext`P[3] - $CellContext`P[
           2]/($CellContext`P[1] $CellContext`P[
           3]) - ($CellContext`P[1] $CellContext`P[2])/$CellContext`P[3] - 
          4 $CellContext`P[3] + (2 $CellContext`P[3])/$CellContext`P[
           1] + (2 $CellContext`P[1]) $CellContext`P[3] + (
            2 $CellContext`P[3])/$CellContext`P[2] - $CellContext`P[
           3]/($CellContext`P[1] $CellContext`P[
           2]) - ($CellContext`P[1] $CellContext`P[3])/$CellContext`P[
          2] + (2 $CellContext`P[2]) $CellContext`P[3] - ($CellContext`P[
            2] $CellContext`P[3])/$CellContext`P[
          1] - ($CellContext`P[1] $CellContext`P[2]) $CellContext`P[
           3] - $CellContext`q (-144 - 8/$CellContext`P[1]^2 + 
           80/$CellContext`P[1] + 80 $CellContext`P[1] - 
           8 $CellContext`P[1]^2 - 8/$CellContext`P[2]^2 + 
           4/($CellContext`P[1] $CellContext`P[2]^2) + (
             4 $CellContext`P[1])/$CellContext`P[2]^2 + 80/$CellContext`P[2] + 
           4/($CellContext`P[1]^2 $CellContext`P[2]) - 
           44/($CellContext`P[1] $CellContext`P[2]) - (
            44 $CellContext`P[1])/$CellContext`P[
           2] + (4 $CellContext`P[1]^2)/$CellContext`P[2] + 
           80 $CellContext`P[2] + (4 $CellContext`P[2])/$CellContext`P[
             1]^2 - (44 $CellContext`P[2])/$CellContext`P[
           1] - (44 $CellContext`P[1]) $CellContext`P[
            2] + (4 $CellContext`P[1]^2) $CellContext`P[2] - 
           8 $CellContext`P[2]^2 + (4 $CellContext`P[2]^2)/$CellContext`P[
            1] + (4 $CellContext`P[1]) $CellContext`P[2]^2 - 
           8/$CellContext`P[3]^2 + 
           4/($CellContext`P[1] $CellContext`P[3]^2) + (
             4 $CellContext`P[1])/$CellContext`P[3]^2 + 
           4/($CellContext`P[2] $CellContext`P[3]^2) - 
           2/(($CellContext`P[1] $CellContext`P[2]) $CellContext`P[3]^2) - (
            2 $CellContext`P[1])/($CellContext`P[
            2] $CellContext`P[3]^2) + (4 $CellContext`P[2])/$CellContext`P[
             3]^2 - (2 $CellContext`P[2])/($CellContext`P[
            1] $CellContext`P[3]^2) - ((2 $CellContext`P[1]) $CellContext`P[
             2])/$CellContext`P[3]^2 + 80/$CellContext`P[3] + 
           4/($CellContext`P[1]^2 $CellContext`P[3]) - 
           44/($CellContext`P[1] $CellContext`P[3]) - (
            44 $CellContext`P[1])/$CellContext`P[
           3] + (4 $CellContext`P[1]^2)/$CellContext`P[3] + 
           4/($CellContext`P[2]^2 $CellContext`P[3]) - 
           2/(($CellContext`P[1] $CellContext`P[2]^2) $CellContext`P[3]) - (
            2 $CellContext`P[1])/($CellContext`P[2]^2 $CellContext`P[3]) - 
           44/($CellContext`P[2] $CellContext`P[3]) - 
           2/(($CellContext`P[1]^2 $CellContext`P[2]) $CellContext`P[3]) + 
           24/(($CellContext`P[1] $CellContext`P[2]) $CellContext`P[3]) + (
             24 $CellContext`P[1])/($CellContext`P[2] $CellContext`P[3]) - (
            2 $CellContext`P[1]^2)/($CellContext`P[2] $CellContext`P[3]) - (
            44 $CellContext`P[2])/$CellContext`P[
           3] - (2 $CellContext`P[2])/($CellContext`P[1]^2 $CellContext`P[
            3]) + (24 $CellContext`P[2])/($CellContext`P[1] $CellContext`P[
             3]) + ((24 $CellContext`P[1]) $CellContext`P[2])/$CellContext`P[
            3] - ((2 $CellContext`P[1]^2) $CellContext`P[2])/$CellContext`P[
           3] + (4 $CellContext`P[2]^2)/$CellContext`P[3] - (
            2 $CellContext`P[2]^2)/($CellContext`P[1] $CellContext`P[
            3]) - ((2 $CellContext`P[1]) $CellContext`P[2]^2)/$CellContext`P[
           3] + 80 $CellContext`P[3] + (4 $CellContext`P[3])/$CellContext`P[
             1]^2 - (44 $CellContext`P[3])/$CellContext`P[
           1] - (44 $CellContext`P[1]) $CellContext`P[
            3] + (4 $CellContext`P[1]^2) $CellContext`P[3] + (
             4 $CellContext`P[3])/$CellContext`P[2]^2 - (
            2 $CellContext`P[3])/($CellContext`P[
            1] $CellContext`P[2]^2) - ((2 $CellContext`P[1]) $CellContext`P[
             3])/$CellContext`P[2]^2 - (44 $CellContext`P[3])/$CellContext`P[
           2] - (2 $CellContext`P[3])/($CellContext`P[1]^2 $CellContext`P[
            2]) + (24 $CellContext`P[3])/($CellContext`P[1] $CellContext`P[
             2]) + ((24 $CellContext`P[1]) $CellContext`P[3])/$CellContext`P[
            2] - ((2 $CellContext`P[1]^2) $CellContext`P[3])/$CellContext`P[
           2] - (44 $CellContext`P[2]) $CellContext`P[
            3] - ((2 $CellContext`P[2]) $CellContext`P[3])/$CellContext`P[
            1]^2 + ((24 $CellContext`P[2]) $CellContext`P[3])/$CellContext`P[
            1] + ((24 $CellContext`P[1]) $CellContext`P[2]) $CellContext`P[
             3] - ((2 $CellContext`P[1]^2) $CellContext`P[2]) $CellContext`P[
            3] + (4 $CellContext`P[2]^2) $CellContext`P[3] - ((
             2 $CellContext`P[2]^2) $CellContext`P[3])/$CellContext`P[
           1] - ((2 $CellContext`P[1]) $CellContext`P[2]^2) $CellContext`P[3] - 
           8 $CellContext`P[3]^2 + (4 $CellContext`P[3]^2)/$CellContext`P[
            1] + (4 $CellContext`P[1]) $CellContext`P[3]^2 + (
             4 $CellContext`P[3]^2)/$CellContext`P[2] - (
            2 $CellContext`P[3]^2)/($CellContext`P[1] $CellContext`P[
            2]) - ((2 $CellContext`P[1]) $CellContext`P[3]^2)/$CellContext`P[
           2] + (4 $CellContext`P[2]) $CellContext`P[3]^2 - ((
             2 $CellContext`P[2]) $CellContext`P[3]^2)/$CellContext`P[
           1] - ((2 $CellContext`P[1]) $CellContext`P[2]) $CellContext`P[
             3]^2) - $CellContext`q^2 (-1536 + 4/$CellContext`P[1]^3 - 
           144/$CellContext`P[1]^2 + 908/$CellContext`P[1] + 
           908 $CellContext`P[1] - 144 $CellContext`P[1]^2 + 
           4 $CellContext`P[1]^3 + 4/$CellContext`P[2]^3 - 
           2/($CellContext`P[1] $CellContext`P[2]^3) - (
            2 $CellContext`P[1])/$CellContext`P[2]^3 - 
           144/$CellContext`P[2]^2 - 
           8/($CellContext`P[1]^2 $CellContext`P[2]^2) + 
           80/($CellContext`P[1] $CellContext`P[2]^2) + (
             80 $CellContext`P[1])/$CellContext`P[2]^2 - (
            8 $CellContext`P[1]^2)/$CellContext`P[2]^2 + 
           908/$CellContext`P[2] - 2/($CellContext`P[1]^3 $CellContext`P[2]) + 
           80/($CellContext`P[1]^2 $CellContext`P[2]) - 
           532/($CellContext`P[1] $CellContext`P[2]) - (
            532 $CellContext`P[1])/$CellContext`P[
           2] + (80 $CellContext`P[1]^2)/$CellContext`P[2] - (
            2 $CellContext`P[1]^3)/$CellContext`P[2] + 
           908 $CellContext`P[2] - (2 $CellContext`P[2])/$CellContext`P[
            1]^3 + (80 $CellContext`P[2])/$CellContext`P[1]^2 - (
            532 $CellContext`P[2])/$CellContext`P[
           1] - (532 $CellContext`P[1]) $CellContext`P[
            2] + (80 $CellContext`P[1]^2) $CellContext`P[2] - (
            2 $CellContext`P[1]^3) $CellContext`P[2] - 
           144 $CellContext`P[2]^2 - (8 $CellContext`P[2]^2)/$CellContext`P[
            1]^2 + (80 $CellContext`P[2]^2)/$CellContext`P[
            1] + (80 $CellContext`P[1]) $CellContext`P[2]^2 - (
            8 $CellContext`P[1]^2) $CellContext`P[2]^2 + 
           4 $CellContext`P[2]^3 - (2 $CellContext`P[2]^3)/$CellContext`P[
           1] - (2 $CellContext`P[1]) $CellContext`P[2]^3 + 
           4/$CellContext`P[3]^3 - 
           2/($CellContext`P[1] $CellContext`P[3]^3) - (
            2 $CellContext`P[1])/$CellContext`P[3]^3 - 
           2/($CellContext`P[2] $CellContext`P[3]^3) + 
           1/(($CellContext`P[1] $CellContext`P[2]) $CellContext`P[
              3]^3) + $CellContext`P[1]/($CellContext`P[
             2] $CellContext`P[3]^3) - (2 $CellContext`P[2])/$CellContext`P[
            3]^3 + $CellContext`P[2]/($CellContext`P[
             1] $CellContext`P[3]^3) + ($CellContext`P[1] $CellContext`P[
              2])/$CellContext`P[3]^3 - 144/$CellContext`P[3]^2 - 
           8/($CellContext`P[1]^2 $CellContext`P[3]^2) + 
           80/($CellContext`P[1] $CellContext`P[3]^2) + (
             80 $CellContext`P[1])/$CellContext`P[3]^2 - (
            8 $CellContext`P[1]^2)/$CellContext`P[3]^2 - 
           8/($CellContext`P[2]^2 $CellContext`P[3]^2) + 
           4/(($CellContext`P[1] $CellContext`P[2]^2) $CellContext`P[3]^2) + (
             4 $CellContext`P[1])/($CellContext`P[2]^2 $CellContext`P[3]^2) + 
           80/($CellContext`P[2] $CellContext`P[3]^2) + 
           4/(($CellContext`P[1]^2 $CellContext`P[2]) $CellContext`P[3]^2) - 
           44/(($CellContext`P[1] $CellContext`P[2]) $CellContext`P[3]^2) - (
            44 $CellContext`P[1])/($CellContext`P[
            2] $CellContext`P[3]^2) + (4 $CellContext`P[1]^2)/($CellContext`P[
             2] $CellContext`P[3]^2) + (80 $CellContext`P[2])/$CellContext`P[
             3]^2 + (4 $CellContext`P[2])/($CellContext`P[1]^2 $CellContext`P[
              3]^2) - (44 $CellContext`P[2])/($CellContext`P[
            1] $CellContext`P[3]^2) - ((44 $CellContext`P[1]) $CellContext`P[
             2])/$CellContext`P[
            3]^2 + ((4 $CellContext`P[1]^2) $CellContext`P[2])/$CellContext`P[
             3]^2 - (8 $CellContext`P[2]^2)/$CellContext`P[
            3]^2 + (4 $CellContext`P[2]^2)/($CellContext`P[
             1] $CellContext`P[3]^2) + ((
              4 $CellContext`P[1]) $CellContext`P[2]^2)/$CellContext`P[3]^2 + 
           908/$CellContext`P[3] - 2/($CellContext`P[1]^3 $CellContext`P[3]) + 
           80/($CellContext`P[1]^2 $CellContext`P[3]) - 
           532/($CellContext`P[1] $CellContext`P[3]) - (
            532 $CellContext`P[1])/$CellContext`P[
           3] + (80 $CellContext`P[1]^2)/$CellContext`P[3] - (
            2 $CellContext`P[1]^3)/$CellContext`P[3] - 
           2/($CellContext`P[2]^3 $CellContext`P[3]) + 
           1/(($CellContext`P[1] $CellContext`P[2]^3) $CellContext`P[
             3]) + $CellContext`P[1]/($CellContext`P[2]^3 $CellContext`P[3]) + 
           80/($CellContext`P[2]^2 $CellContext`P[3]) + 
           4/(($CellContext`P[1]^2 $CellContext`P[2]^2) $CellContext`P[3]) - 
           44/(($CellContext`P[1] $CellContext`P[2]^2) $CellContext`P[3]) - (
            44 $CellContext`P[1])/($CellContext`P[2]^2 $CellContext`P[
            3]) + (4 $CellContext`P[1]^2)/($CellContext`P[2]^2 $CellContext`P[
             3]) - 532/($CellContext`P[2] $CellContext`P[3]) + 
           1/(($CellContext`P[1]^3 $CellContext`P[2]) $CellContext`P[3]) - 
           44/(($CellContext`P[1]^2 $CellContext`P[2]) $CellContext`P[3]) + 
           309/(($CellContext`P[1] $CellContext`P[2]) $CellContext`P[3]) + (
             309 $CellContext`P[1])/($CellContext`P[2] $CellContext`P[3]) - (
            44 $CellContext`P[1]^2)/($CellContext`P[2] $CellContext`P[
            3]) + $CellContext`P[1]^3/($CellContext`P[2] $CellContext`P[
             3]) - (532 $CellContext`P[2])/$CellContext`P[
           3] + $CellContext`P[2]/($CellContext`P[1]^3 $CellContext`P[3]) - (
            44 $CellContext`P[2])/($CellContext`P[1]^2 $CellContext`P[
            3]) + (309 $CellContext`P[2])/($CellContext`P[1] $CellContext`P[
             3]) + ((309 $CellContext`P[1]) $CellContext`P[2])/$CellContext`P[
            3] - ((44 $CellContext`P[1]^2) $CellContext`P[2])/$CellContext`P[
           3] + ($CellContext`P[1]^3 $CellContext`P[2])/$CellContext`P[
            3] + (80 $CellContext`P[2]^2)/$CellContext`P[
            3] + (4 $CellContext`P[2]^2)/($CellContext`P[1]^2 $CellContext`P[
             3]) - (44 $CellContext`P[2]^2)/($CellContext`P[1] $CellContext`P[
            3]) - ((44 $CellContext`P[1]) $CellContext`P[2]^2)/$CellContext`P[
           3] + ((4 $CellContext`P[1]^2) $CellContext`P[2]^2)/$CellContext`P[
            3] - (2 $CellContext`P[2]^3)/$CellContext`P[
           3] + $CellContext`P[2]^3/($CellContext`P[1] $CellContext`P[
             3]) + ($CellContext`P[1] $CellContext`P[2]^3)/$CellContext`P[3] + 
           908 $CellContext`P[3] - (2 $CellContext`P[3])/$CellContext`P[
            1]^3 + (80 $CellContext`P[3])/$CellContext`P[1]^2 - (
            532 $CellContext`P[3])/$CellContext`P[
           1] - (532 $CellContext`P[1]) $CellContext`P[
            3] + (80 $CellContext`P[1]^2) $CellContext`P[3] - (
            2 $CellContext`P[1]^3) $CellContext`P[3] - (
            2 $CellContext`P[3])/$CellContext`P[
            2]^3 + $CellContext`P[3]/($CellContext`P[
             1] $CellContext`P[2]^3) + ($CellContext`P[1] $CellContext`P[
              3])/$CellContext`P[2]^3 + (80 $CellContext`P[3])/$CellContext`P[
             2]^2 + (4 $CellContext`P[3])/($CellContext`P[1]^2 $CellContext`P[
              2]^2) - (44 $CellContext`P[3])/($CellContext`P[
            1] $CellContext`P[2]^2) - ((44 $CellContext`P[1]) $CellContext`P[
             3])/$CellContext`P[
            2]^2 + ((4 $CellContext`P[1]^2) $CellContext`P[3])/$CellContext`P[
             2]^2 - (532 $CellContext`P[3])/$CellContext`P[
           2] + $CellContext`P[3]/($CellContext`P[1]^3 $CellContext`P[2]) - (
            44 $CellContext`P[3])/($CellContext`P[1]^2 $CellContext`P[
            2]) + (309 $CellContext`P[3])/($CellContext`P[1] $CellContext`P[
             2]) + ((309 $CellContext`P[1]) $CellContext`P[3])/$CellContext`P[
            2] - ((44 $CellContext`P[1]^2) $CellContext`P[3])/$CellContext`P[
           2] + ($CellContext`P[1]^3 $CellContext`P[3])/$CellContext`P[2] - (
            532 $CellContext`P[2]) $CellContext`P[
            3] + ($CellContext`P[2] $CellContext`P[3])/$CellContext`P[
             1]^3 - ((44 $CellContext`P[2]) $CellContext`P[3])/$CellContext`P[
            1]^2 + ((309 $CellContext`P[2]) $CellContext`P[3])/$CellContext`P[
            1] + ((309 $CellContext`P[1]) $CellContext`P[2]) $CellContext`P[
             3] - ((44 $CellContext`P[1]^2) $CellContext`P[2]) $CellContext`P[
            3] + ($CellContext`P[1]^3 $CellContext`P[2]) $CellContext`P[3] + (
             80 $CellContext`P[2]^2) $CellContext`P[
             3] + ((4 $CellContext`P[2]^2) $CellContext`P[3])/$CellContext`P[
             1]^2 - ((44 $CellContext`P[2]^2) $CellContext`P[
             3])/$CellContext`P[
           1] - ((44 $CellContext`P[1]) $CellContext`P[2]^2) $CellContext`P[
            3] + ((4 $CellContext`P[1]^2) $CellContext`P[2]^2) $CellContext`P[
             3] - (2 $CellContext`P[2]^3) $CellContext`P[
            3] + ($CellContext`P[2]^3 $CellContext`P[3])/$CellContext`P[
            1] + ($CellContext`P[1] $CellContext`P[2]^3) $CellContext`P[3] - 
           144 $CellContext`P[3]^2 - (8 $CellContext`P[3]^2)/$CellContext`P[
            1]^2 + (80 $CellContext`P[3]^2)/$CellContext`P[
            1] + (80 $CellContext`P[1]) $CellContext`P[3]^2 - (
            8 $CellContext`P[1]^2) $CellContext`P[3]^2 - (
            8 $CellContext`P[3]^2)/$CellContext`P[
            2]^2 + (4 $CellContext`P[3]^2)/($CellContext`P[
             1] $CellContext`P[2]^2) + ((
              4 $CellContext`P[1]) $CellContext`P[3]^2)/$CellContext`P[
             2]^2 + (80 $CellContext`P[3]^2)/$CellContext`P[
            2] + (4 $CellContext`P[3]^2)/($CellContext`P[1]^2 $CellContext`P[
             2]) - (44 $CellContext`P[3]^2)/($CellContext`P[1] $CellContext`P[
            2]) - ((44 $CellContext`P[1]) $CellContext`P[3]^2)/$CellContext`P[
           2] + ((4 $CellContext`P[1]^2) $CellContext`P[3]^2)/$CellContext`P[
            2] + (80 $CellContext`P[2]) $CellContext`P[3]^2 + ((
              4 $CellContext`P[2]) $CellContext`P[3]^2)/$CellContext`P[
             1]^2 - ((
             44 $CellContext`P[2]) $CellContext`P[3]^2)/$CellContext`P[
           1] - ((44 $CellContext`P[1]) $CellContext`P[2]) $CellContext`P[
             3]^2 + ((4 $CellContext`P[1]^2) $CellContext`P[
              2]) $CellContext`P[3]^2 - (
            8 $CellContext`P[2]^2) $CellContext`P[
             3]^2 + ((
              4 $CellContext`P[2]^2) $CellContext`P[3]^2)/$CellContext`P[
            1] + ((4 $CellContext`P[1]) $CellContext`P[2]^2) $CellContext`P[
              3]^2 + 4 $CellContext`P[3]^3 - (
            2 $CellContext`P[3]^3)/$CellContext`P[
           1] - (2 $CellContext`P[1]) $CellContext`P[3]^3 - (
            2 $CellContext`P[3]^3)/$CellContext`P[
           2] + $CellContext`P[3]^3/($CellContext`P[1] $CellContext`P[
             2]) + ($CellContext`P[1] $CellContext`P[3]^3)/$CellContext`P[
            2] - (2 $CellContext`P[2]) $CellContext`P[
             3]^3 + ($CellContext`P[2] $CellContext`P[3]^3)/$CellContext`P[
            1] + ($CellContext`P[1] $CellContext`P[2]) $CellContext`P[
              3]^3) - $CellContext`q^3 (-12288 + 80/$CellContext`P[1]^3 - 
           1536/$CellContext`P[1]^2 + 7600/$CellContext`P[1] + 
           7600 $CellContext`P[1] - 1536 $CellContext`P[1]^2 + 
           80 $CellContext`P[1]^3 + 80/$CellContext`P[2]^3 + 
           4/($CellContext`P[1]^2 $CellContext`P[2]^3) - 
           44/($CellContext`P[1] $CellContext`P[2]^3) - (
            44 $CellContext`P[1])/$CellContext`P[
            2]^3 + (4 $CellContext`P[1]^2)/$CellContext`P[2]^3 - 
           1536/$CellContext`P[2]^2 + 
           4/($CellContext`P[1]^3 $CellContext`P[2]^2) - 
           144/($CellContext`P[1]^2 $CellContext`P[2]^2) + 
           908/($CellContext`P[1] $CellContext`P[2]^2) + (
             908 $CellContext`P[1])/$CellContext`P[2]^2 - (
            144 $CellContext`P[1]^2)/$CellContext`P[
            2]^2 + (4 $CellContext`P[1]^3)/$CellContext`P[2]^2 + 
           7600/$CellContext`P[2] - 
           44/($CellContext`P[1]^3 $CellContext`P[2]) + 
           908/($CellContext`P[1]^2 $CellContext`P[2]) - 
           4664/($CellContext`P[1] $CellContext`P[2]) - (
            4664 $CellContext`P[1])/$CellContext`P[
           2] + (908 $CellContext`P[1]^2)/$CellContext`P[2] - (
            44 $CellContext`P[1]^3)/$CellContext`P[2] + 
           7600 $CellContext`P[2] - (44 $CellContext`P[2])/$CellContext`P[
            1]^3 + (908 $CellContext`P[2])/$CellContext`P[1]^2 - (
            4664 $CellContext`P[2])/$CellContext`P[
           1] - (4664 $CellContext`P[1]) $CellContext`P[
            2] + (908 $CellContext`P[1]^2) $CellContext`P[2] - (
            44 $CellContext`P[1]^3) $CellContext`P[2] - 
           1536 $CellContext`P[2]^2 + (4 $CellContext`P[2]^2)/$CellContext`P[
             1]^3 - (144 $CellContext`P[2]^2)/$CellContext`P[
            1]^2 + (908 $CellContext`P[2]^2)/$CellContext`P[
            1] + (908 $CellContext`P[1]) $CellContext`P[2]^2 - (
            144 $CellContext`P[1]^2) $CellContext`P[2]^2 + (
             4 $CellContext`P[1]^3) $CellContext`P[2]^2 + 
           80 $CellContext`P[2]^3 + (4 $CellContext`P[2]^3)/$CellContext`P[
             1]^2 - (44 $CellContext`P[2]^3)/$CellContext`P[
           1] - (44 $CellContext`P[1]) $CellContext`P[2]^3 + (
             4 $CellContext`P[1]^2) $CellContext`P[2]^3 + 
           80/$CellContext`P[3]^3 + 
           4/($CellContext`P[1]^2 $CellContext`P[3]^3) - 
           44/($CellContext`P[1] $CellContext`P[3]^3) - (
            44 $CellContext`P[1])/$CellContext`P[
            3]^3 + (4 $CellContext`P[1]^2)/$CellContext`P[3]^3 + 
           4/($CellContext`P[2]^2 $CellContext`P[3]^3) - 
           2/(($CellContext`P[1] $CellContext`P[2]^2) $CellContext`P[3]^3) - (
            2 $CellContext`P[1])/($CellContext`P[2]^2 $CellContext`P[3]^3) - 
           44/($CellContext`P[2] $CellContext`P[3]^3) - 
           2/(($CellContext`P[1]^2 $CellContext`P[2]) $CellContext`P[3]^3) + 
           24/(($CellContext`P[1] $CellContext`P[2]) $CellContext`P[3]^3) + (
             24 $CellContext`P[1])/($CellContext`P[2] $CellContext`P[3]^3) - (
            2 $CellContext`P[1]^2)/($CellContext`P[2] $CellContext`P[3]^3) - (
            44 $CellContext`P[2])/$CellContext`P[3]^3 - (
            2 $CellContext`P[2])/($CellContext`P[1]^2 $CellContext`P[3]^3) + (
             24 $CellContext`P[2])/($CellContext`P[
             1] $CellContext`P[3]^3) + ((24 $CellContext`P[1]) $CellContext`P[
              2])/$CellContext`P[3]^3 - ((
             2 $CellContext`P[1]^2) $CellContext`P[2])/$CellContext`P[
            3]^3 + (4 $CellContext`P[2]^2)/$CellContext`P[3]^3 - (
            2 $CellContext`P[2]^2)/($CellContext`P[
            1] $CellContext`P[3]^3) - ((
             2 $CellContext`P[1]) $CellContext`P[2]^2)/$CellContext`P[3]^3 - 
           1536/$CellContext`P[3]^2 + 
           4/($CellContext`P[1]^3 $CellContext`P[3]^2) - 
           144/($CellContext`P[1]^2 $CellContext`P[3]^2) + 
           908/($CellContext`P[1] $CellContext`P[3]^2) + (
             908 $CellContext`P[1])/$CellContext`P[3]^2 - (
            144 $CellContext`P[1]^2)/$CellContext`P[
            3]^2 + (4 $CellContext`P[1]^3)/$CellContext`P[3]^2 + 
           4/($CellContext`P[2]^3 $CellContext`P[3]^2) - 
           2/(($CellContext`P[1] $CellContext`P[2]^3) $CellContext`P[3]^2) - (
            2 $CellContext`P[1])/($CellContext`P[2]^3 $CellContext`P[3]^2) - 
           144/($CellContext`P[2]^2 $CellContext`P[3]^2) - 
           8/(($CellContext`P[1]^2 $CellContext`P[2]^2) $CellContext`P[3]^2) + 
           80/(($CellContext`P[1] $CellContext`P[2]^2) $CellContext`P[
              3]^2) + (
             80 $CellContext`P[1])/($CellContext`P[2]^2 $CellContext`P[
              3]^2) - (
            8 $CellContext`P[1]^2)/($CellContext`P[2]^2 $CellContext`P[3]^2) + 
           908/($CellContext`P[2] $CellContext`P[3]^2) - 
           2/(($CellContext`P[1]^3 $CellContext`P[2]) $CellContext`P[3]^2) + 
           80/(($CellContext`P[1]^2 $CellContext`P[2]) $CellContext`P[3]^2) - 
           532/(($CellContext`P[1] $CellContext`P[2]) $CellContext`P[3]^2) - (
            532 $CellContext`P[1])/($CellContext`P[
            2] $CellContext`P[3]^2) + (
             80 $CellContext`P[1]^2)/($CellContext`P[
             2] $CellContext`P[3]^2) - (
            2 $CellContext`P[1]^3)/($CellContext`P[
            2] $CellContext`P[3]^2) + (908 $CellContext`P[2])/$CellContext`P[
             3]^2 - (2 $CellContext`P[2])/($CellContext`P[1]^3 $CellContext`P[
             3]^2) + (
             80 $CellContext`P[2])/($CellContext`P[1]^2 $CellContext`P[
              3]^2) - (532 $CellContext`P[2])/($CellContext`P[
            1] $CellContext`P[3]^2) - ((532 $CellContext`P[1]) $CellContext`P[
             2])/$CellContext`P[
            3]^2 + ((80 $CellContext`P[1]^2) $CellContext`P[
              2])/$CellContext`P[3]^2 - ((
             2 $CellContext`P[1]^3) $CellContext`P[2])/$CellContext`P[3]^2 - (
            144 $CellContext`P[2]^2)/$CellContext`P[3]^2 - (
            8 $CellContext`P[2]^2)/($CellContext`P[1]^2 $CellContext`P[
             3]^2) + (80 $CellContext`P[2]^2)/($CellContext`P[
             1] $CellContext`P[3]^2) + ((
              80 $CellContext`P[1]) $CellContext`P[2]^2)/$CellContext`P[
             3]^2 - ((
             8 $CellContext`P[1]^2) $CellContext`P[2]^2)/$CellContext`P[
            3]^2 + (4 $CellContext`P[2]^3)/$CellContext`P[3]^2 - (
            2 $CellContext`P[2]^3)/($CellContext`P[
            1] $CellContext`P[3]^2) - ((
             2 $CellContext`P[1]) $CellContext`P[2]^3)/$CellContext`P[3]^2 + 
           7600/$CellContext`P[3] - 
           44/($CellContext`P[1]^3 $CellContext`P[3]) + 
           908/($CellContext`P[1]^2 $CellContext`P[3]) - 
           4664/($CellContext`P[1] $CellContext`P[3]) - (
            4664 $CellContext`P[1])/$CellContext`P[
           3] + (908 $CellContext`P[1]^2)/$CellContext`P[3] - (
            44 $CellContext`P[1]^3)/$CellContext`P[3] - 
           44/($CellContext`P[2]^3 $CellContext`P[3]) - 
           2/(($CellContext`P[1]^2 $CellContext`P[2]^3) $CellContext`P[3]) + 
           24/(($CellContext`P[1] $CellContext`P[2]^3) $CellContext`P[3]) + (
             24 $CellContext`P[1])/($CellContext`P[2]^3 $CellContext`P[3]) - (
            2 $CellContext`P[1]^2)/($CellContext`P[2]^3 $CellContext`P[3]) + 
           908/($CellContext`P[2]^2 $CellContext`P[3]) - 
           2/(($CellContext`P[1]^3 $CellContext`P[2]^2) $CellContext`P[3]) + 
           80/(($CellContext`P[1]^2 $CellContext`P[2]^2) $CellContext`P[3]) - 
           532/(($CellContext`P[1] $CellContext`P[2]^2) $CellContext`P[3]) - (
            532 $CellContext`P[1])/($CellContext`P[2]^2 $CellContext`P[
            3]) + (80 $CellContext`P[1]^2)/($CellContext`P[
              2]^2 $CellContext`P[3]) - (
            2 $CellContext`P[1]^3)/($CellContext`P[2]^2 $CellContext`P[3]) - 
           4664/($CellContext`P[2] $CellContext`P[3]) + 
           24/(($CellContext`P[1]^3 $CellContext`P[2]) $CellContext`P[3]) - 
           532/(($CellContext`P[1]^2 $CellContext`P[2]) $CellContext`P[3]) + 
           2840/(($CellContext`P[1] $CellContext`P[2]) $CellContext`P[3]) + (
             2840 $CellContext`P[1])/($CellContext`P[2] $CellContext`P[3]) - (
            532 $CellContext`P[1]^2)/($CellContext`P[2] $CellContext`P[
            3]) + (24 $CellContext`P[1]^3)/($CellContext`P[2] $CellContext`P[
             3]) - (4664 $CellContext`P[2])/$CellContext`P[
           3] + (24 $CellContext`P[2])/($CellContext`P[1]^3 $CellContext`P[
             3]) - (532 $CellContext`P[2])/($CellContext`P[
             1]^2 $CellContext`P[
            3]) + (2840 $CellContext`P[2])/($CellContext`P[1] $CellContext`P[
             3]) + ((2840 $CellContext`P[1]) $CellContext`P[
              2])/$CellContext`P[
            3] - ((532 $CellContext`P[1]^2) $CellContext`P[2])/$CellContext`P[
           3] + ((24 $CellContext`P[1]^3) $CellContext`P[2])/$CellContext`P[
            3] + (908 $CellContext`P[2]^2)/$CellContext`P[3] - (
            2 $CellContext`P[2]^2)/($CellContext`P[1]^3 $CellContext`P[
            3]) + (
             80 $CellContext`P[2]^2)/($CellContext`P[1]^2 $CellContext`P[
             3]) - (532 $CellContext`P[2]^2)/($CellContext`P[
            1] $CellContext`P[
            3]) - ((532 $CellContext`P[1]) $CellContext`P[
              2]^2)/$CellContext`P[
           3] + ((80 $CellContext`P[1]^2) $CellContext`P[2]^2)/$CellContext`P[
            3] - ((2 $CellContext`P[1]^3) $CellContext`P[2]^2)/$CellContext`P[
           3] - (44 $CellContext`P[2]^3)/$CellContext`P[
           3] - (2 $CellContext`P[2]^3)/($CellContext`P[1]^2 $CellContext`P[
            3]) + (24 $CellContext`P[2]^3)/($CellContext`P[1] $CellContext`P[
             3]) + ((24 $CellContext`P[1]) $CellContext`P[
               2]^3)/$CellContext`P[
            3] - ((2 $CellContext`P[1]^2) $CellContext`P[2]^3)/$CellContext`P[
           3] + 7600 $CellContext`P[3] - (
            44 $CellContext`P[3])/$CellContext`P[
            1]^3 + (908 $CellContext`P[3])/$CellContext`P[1]^2 - (
            4664 $CellContext`P[3])/$CellContext`P[
           1] - (4664 $CellContext`P[1]) $CellContext`P[
            3] + (908 $CellContext`P[1]^2) $CellContext`P[3] - (
            44 $CellContext`P[1]^3) $CellContext`P[3] - (
            44 $CellContext`P[3])/$CellContext`P[2]^3 - (
            2 $CellContext`P[3])/($CellContext`P[1]^2 $CellContext`P[2]^3) + (
             24 $CellContext`P[3])/($CellContext`P[
             1] $CellContext`P[2]^3) + ((24 $CellContext`P[1]) $CellContext`P[
              3])/$CellContext`P[2]^3 - ((
             2 $CellContext`P[1]^2) $CellContext`P[3])/$CellContext`P[
            2]^3 + (908 $CellContext`P[3])/$CellContext`P[2]^2 - (
            2 $CellContext`P[3])/($CellContext`P[1]^3 $CellContext`P[2]^2) + (
             80 $CellContext`P[3])/($CellContext`P[1]^2 $CellContext`P[
              2]^2) - (532 $CellContext`P[3])/($CellContext`P[
            1] $CellContext`P[2]^2) - ((532 $CellContext`P[1]) $CellContext`P[
             3])/$CellContext`P[
            2]^2 + ((80 $CellContext`P[1]^2) $CellContext`P[
              3])/$CellContext`P[2]^2 - ((
             2 $CellContext`P[1]^3) $CellContext`P[3])/$CellContext`P[2]^2 - (
            4664 $CellContext`P[3])/$CellContext`P[
           2] + (24 $CellContext`P[3])/($CellContext`P[1]^3 $CellContext`P[
             2]) - (532 $CellContext`P[3])/($CellContext`P[
             1]^2 $CellContext`P[
            2]) + (2840 $CellContext`P[3])/($CellContext`P[1] $CellContext`P[
             2]) + ((2840 $CellContext`P[1]) $CellContext`P[
              3])/$CellContext`P[
            2] - ((532 $CellContext`P[1]^2) $CellContext`P[3])/$CellContext`P[
           2] + ((24 $CellContext`P[1]^3) $CellContext`P[3])/$CellContext`P[
            2] - (4664 $CellContext`P[2]) $CellContext`P[
            3] + ((24 $CellContext`P[2]) $CellContext`P[3])/$CellContext`P[
             1]^3 - ((532 $CellContext`P[2]) $CellContext`P[
             3])/$CellContext`P[
            1]^2 + ((2840 $CellContext`P[2]) $CellContext`P[
              3])/$CellContext`P[
            1] + ((2840 $CellContext`P[1]) $CellContext`P[2]) $CellContext`P[
             3] - ((532 $CellContext`P[1]^2) $CellContext`P[
             2]) $CellContext`P[
            3] + ((24 $CellContext`P[1]^3) $CellContext`P[2]) $CellContext`P[
             3] + (908 $CellContext`P[2]^2) $CellContext`P[3] - ((
             2 $CellContext`P[2]^2) $CellContext`P[3])/$CellContext`P[
            1]^3 + ((80 $CellContext`P[2]^2) $CellContext`P[
              3])/$CellContext`P[1]^2 - ((
             532 $CellContext`P[2]^2) $CellContext`P[3])/$CellContext`P[
           1] - ((532 $CellContext`P[1]) $CellContext`P[2]^2) $CellContext`P[
            3] + ((80 $CellContext`P[1]^2) $CellContext`P[
               2]^2) $CellContext`P[3] - ((
             2 $CellContext`P[1]^3) $CellContext`P[2]^2) $CellContext`P[3] - (
            44 $CellContext`P[2]^3) $CellContext`P[
            3] - ((2 $CellContext`P[2]^3) $CellContext`P[3])/$CellContext`P[
            1]^2 + ((24 $CellContext`P[2]^3) $CellContext`P[
              3])/$CellContext`P[
            1] + ((24 $CellContext`P[1]) $CellContext`P[2]^3) $CellContext`P[
             3] - ((2 $CellContext`P[1]^2) $CellContext`P[
              2]^3) $CellContext`P[3] - 
           1536 $CellContext`P[3]^2 + (4 $CellContext`P[3]^2)/$CellContext`P[
             1]^3 - (144 $CellContext`P[3]^2)/$CellContext`P[
            1]^2 + (908 $CellContext`P[3]^2)/$CellContext`P[
            1] + (908 $CellContext`P[1]) $CellContext`P[3]^2 - (
            144 $CellContext`P[1]^2) $CellContext`P[3]^2 + (
             4 $CellContext`P[1]^3) $CellContext`P[3]^2 + (
             4 $CellContext`P[3]^2)/$CellContext`P[2]^3 - (
            2 $CellContext`P[3]^2)/($CellContext`P[
            1] $CellContext`P[2]^3) - ((
             2 $CellContext`P[1]) $CellContext`P[3]^2)/$CellContext`P[2]^3 - (
            144 $CellContext`P[3]^2)/$CellContext`P[2]^2 - (
            8 $CellContext`P[3]^2)/($CellContext`P[1]^2 $CellContext`P[
             2]^2) + (80 $CellContext`P[3]^2)/($CellContext`P[
             1] $CellContext`P[2]^2) + ((
              80 $CellContext`P[1]) $CellContext`P[3]^2)/$CellContext`P[
             2]^2 - ((
             8 $CellContext`P[1]^2) $CellContext`P[3]^2)/$CellContext`P[
            2]^2 + (908 $CellContext`P[3]^2)/$CellContext`P[2] - (
            2 $CellContext`P[3]^2)/($CellContext`P[1]^3 $CellContext`P[
            2]) + (80 $CellContext`P[3]^2)/($CellContext`P[
              1]^2 $CellContext`P[2]) - (
            532 $CellContext`P[3]^2)/($CellContext`P[1] $CellContext`P[
            2]) - ((532 $CellContext`P[1]) $CellContext`P[
              3]^2)/$CellContext`P[
           2] + ((80 $CellContext`P[1]^2) $CellContext`P[3]^2)/$CellContext`P[
            2] - ((2 $CellContext`P[1]^3) $CellContext`P[3]^2)/$CellContext`P[
           2] + (908 $CellContext`P[2]) $CellContext`P[3]^2 - ((
             2 $CellContext`P[2]) $CellContext`P[3]^2)/$CellContext`P[
            1]^3 + ((
              80 $CellContext`P[2]) $CellContext`P[3]^2)/$CellContext`P[
             1]^2 - ((
             532 $CellContext`P[2]) $CellContext`P[3]^2)/$CellContext`P[
           1] - ((532 $CellContext`P[1]) $CellContext`P[2]) $CellContext`P[
             3]^2 + ((80 $CellContext`P[1]^2) $CellContext`P[
              2]) $CellContext`P[3]^2 - ((
             2 $CellContext`P[1]^3) $CellContext`P[2]) $CellContext`P[3]^2 - (
            144 $CellContext`P[2]^2) $CellContext`P[3]^2 - ((
             8 $CellContext`P[2]^2) $CellContext`P[3]^2)/$CellContext`P[
            1]^2 + ((
              80 $CellContext`P[2]^2) $CellContext`P[3]^2)/$CellContext`P[
            1] + ((80 $CellContext`P[1]) $CellContext`P[2]^2) $CellContext`P[
              3]^2 - ((
             8 $CellContext`P[1]^2) $CellContext`P[2]^2) $CellContext`P[
             3]^2 + (4 $CellContext`P[2]^3) $CellContext`P[3]^2 - ((
             2 $CellContext`P[2]^3) $CellContext`P[3]^2)/$CellContext`P[
           1] - ((2 $CellContext`P[1]) $CellContext`P[2]^3) $CellContext`P[
             3]^2 + 80 $CellContext`P[3]^3 + (
             4 $CellContext`P[3]^3)/$CellContext`P[1]^2 - (
            44 $CellContext`P[3]^3)/$CellContext`P[
           1] - (44 $CellContext`P[1]) $CellContext`P[3]^3 + (
             4 $CellContext`P[1]^2) $CellContext`P[3]^3 + (
             4 $CellContext`P[3]^3)/$CellContext`P[2]^2 - (
            2 $CellContext`P[3]^3)/($CellContext`P[
            1] $CellContext`P[2]^2) - ((
             2 $CellContext`P[1]) $CellContext`P[3]^3)/$CellContext`P[2]^2 - (
            44 $CellContext`P[3]^3)/$CellContext`P[
           2] - (2 $CellContext`P[3]^3)/($CellContext`P[1]^2 $CellContext`P[
            2]) + (24 $CellContext`P[3]^3)/($CellContext`P[1] $CellContext`P[
             2]) + ((24 $CellContext`P[1]) $CellContext`P[
               3]^3)/$CellContext`P[
            2] - ((2 $CellContext`P[1]^2) $CellContext`P[3]^3)/$CellContext`P[
           2] - (44 $CellContext`P[2]) $CellContext`P[3]^3 - ((
             2 $CellContext`P[2]) $CellContext`P[3]^3)/$CellContext`P[
            1]^2 + ((
              24 $CellContext`P[2]) $CellContext`P[3]^3)/$CellContext`P[
            1] + ((24 $CellContext`P[1]) $CellContext`P[2]) $CellContext`P[
              3]^3 - ((2 $CellContext`P[1]^2) $CellContext`P[
             2]) $CellContext`P[3]^3 + (
             4 $CellContext`P[2]^2) $CellContext`P[3]^3 - ((
             2 $CellContext`P[2]^2) $CellContext`P[3]^3)/$CellContext`P[
           1] - ((2 $CellContext`P[1]) $CellContext`P[2]^2) $CellContext`P[
             3]^3), Attributes[LieART`Algebra] = {Listable}, 
         LieART`Algebra[LieART`SU][
           PatternTest[
            Pattern[LieART`Private`n, 
             Blank[]], LieART`Private`NaturalNumberQ]] := 
         LieART`Algebra[LieART`A][LieART`Private`n - 1], 
         LieART`Algebra[LieART`SO][
           PatternTest[
            Pattern[LieART`Private`n, 
             Blank[]], LieART`Private`OddNaturalNumberQ]] := 
         LieART`Algebra[LieART`B][(LieART`Private`n - 1)/2], 
         LieART`Algebra[LieART`SO][
           PatternTest[
            Pattern[LieART`Private`n, 
             Blank[]], LieART`Private`EvenNaturalNumberQ]] := 
         LieART`Algebra[D][LieART`Private`n/2], LieART`Algebra[LieART`Sp][
           PatternTest[
            Pattern[LieART`Private`n, 
             Blank[]], LieART`Private`EvenNaturalNumberQ]] := 
         LieART`Algebra[C][LieART`Private`n/2], LieART`Algebra[
           Pattern[LieART`Private`irrep, 
            Alternatives[
            LieART`Weight, LieART`WeightAlpha, LieART`Irrep, LieART`RootOmega,
              LieART`RootAlpha, LieART`RootOrthogonal, 
             LieART`WeightOrthogonal][
             Pattern[LieART`Private`algebra, 
              Alternatives[
              LieART`E6, LieART`E7, LieART`E8, LieART`F4, LieART`G2]]][
             BlankSequence[]]]] := LieART`Private`algebra, LieART`Algebra[
           Pattern[LieART`Private`irrep, 
            Alternatives[
            LieART`Weight, LieART`WeightAlpha, LieART`Irrep, LieART`RootOmega,
              LieART`RootAlpha, LieART`RootOrthogonal, 
             LieART`WeightOrthogonal][
             Pattern[LieART`Private`algebraClass, 
              Alternatives[LieART`A, LieART`B, C, D]]][
             Pattern[LieART`Private`label, 
              BlankSequence[]]]]] := 
         LieART`Algebra[LieART`Private`algebraClass][
           LieART`Rank[LieART`Private`irrep]], 
         TagSetDelayed[LieART`Algebra, 
          MakeBoxes[
           LieART`Algebra[LieART`U][1], LieART`LaTeXForm], 
          Format["U(1)", LieART`LaTeXForm]], 
         TagSetDelayed[LieART`Algebra, 
          MakeBoxes[
           LieART`Algebra[LieART`U][1], TraditionalForm], 
          Format["U(1)", TraditionalForm]], 
         TagSetDelayed[LieART`Algebra, 
          MakeBoxes[
           LieART`Algebra[
            Pattern[LieART`Private`algebraClass, 
             Blank[]]][
            Pattern[LieART`Private`n, 
             Blank[]]], StandardForm], 
          Format[
           Subscript[LieART`Private`algebraClass, LieART`Private`n], 
           StandardForm]], 
         TagSetDelayed[LieART`Algebra, 
          MakeBoxes[
           LieART`Algebra[LieART`A][
            Pattern[LieART`Private`n, 
             Blank[]]], TraditionalForm], 
          Format[
           ToString[
            StringJoin["SU(", 
             ToString[LieART`Private`n + 1], ")"]], TraditionalForm]], 
         TagSetDelayed[LieART`Algebra, 
          MakeBoxes[
           LieART`Algebra[LieART`B][
            Pattern[LieART`Private`n, 
             Blank[]]], TraditionalForm], 
          Format[
           ToString[
            StringJoin["SO(", 
             ToString[2 LieART`Private`n + 1], ")"]], TraditionalForm]], 
         TagSetDelayed[LieART`Algebra, 
          MakeBoxes[
           LieART`Algebra[C][
            Pattern[LieART`Private`n, 
             Blank[]]], TraditionalForm], 
          Format[
           ToString[
            StringJoin["Sp(", 
             ToString[2 LieART`Private`n], ")"]], TraditionalForm]], 
         TagSetDelayed[LieART`Algebra, 
          MakeBoxes[
           LieART`Algebra[D][
            Pattern[LieART`Private`n, 
             Blank[]]], TraditionalForm], 
          Format[
           ToString[
            StringJoin["SO(", 
             ToString[2 LieART`Private`n], ")"]], TraditionalForm]], 
         TagSetDelayed[LieART`Algebra, 
          MakeBoxes[
           LieART`Algebra[LieART`A][
            Pattern[LieART`Private`n, 
             Blank[]]], LieART`LaTeXForm], 
          Format[
           ToString[
            StringJoin["SU(", 
             ToString[LieART`Private`n + 1], ")"]], LieART`LaTeXForm]], 
         TagSetDelayed[LieART`Algebra, 
          MakeBoxes[
           LieART`Algebra[LieART`B][
            Pattern[LieART`Private`n, 
             Blank[]]], LieART`LaTeXForm], 
          Format[
           ToString[
            StringJoin["SO(", 
             ToString[2 LieART`Private`n + 1], ")"]], LieART`LaTeXForm]], 
         TagSetDelayed[LieART`Algebra, 
          MakeBoxes[
           LieART`Algebra[C][
            Pattern[LieART`Private`n, 
             Blank[]]], LieART`LaTeXForm], 
          Format[
           ToString[
            StringJoin["Sp(", 
             ToString[2 LieART`Private`n], ")"]], LieART`LaTeXForm]], 
         TagSetDelayed[LieART`Algebra, 
          MakeBoxes[
           LieART`Algebra[D][
            Pattern[LieART`Private`n, 
             Blank[]]], LieART`LaTeXForm], 
          Format[
           ToString[
            StringJoin["SO(", 
             ToString[2 LieART`Private`n], ")"]], LieART`LaTeXForm]], 
         TagSet[LieART`Algebra, 
          MessageName[LieART`Algebra, "usage"], 
          "Algebra[algebraClass][n] represents a classical algebra. \
Algebra[expr] gives the algebra of expr."], LieART`SU[
           PatternTest[
            Pattern[LieART`Private`n, 
             Blank[]], LieART`Private`NaturalNumberQ]] := 
         LieART`Algebra[LieART`A][LieART`Private`n - 1], 
         TagSet[LieART`SU, 
          MessageName[LieART`SU, "usage"], 
          "SU represents the algebra of the special unitary group."], 
         LieART`Private`NaturalNumberQ[
           Pattern[LieART`Private`expr, 
            Blank[]]] := And[
           IntegerQ[LieART`Private`expr], 
           Positive[LieART`Private`expr]], 
         TagSet[LieART`A, 
          MessageName[LieART`A, "shdw"], 
          "Symbol `1` appears in multiple contexts `2`; definitions in \
context `3` may shadow or be shadowed by other definitions."], 
         TagSet[LieART`A, 
          MessageName[LieART`A, "usage"], 
          "A represents the infinite A series Lie algebras."], LieART`SO[
           PatternTest[
            Pattern[LieART`Private`n, 
             Blank[]], LieART`Private`OddNaturalNumberQ]] := 
         LieART`Algebra[LieART`B][(LieART`Private`n - 1)/2], LieART`SO[
           PatternTest[
            Pattern[LieART`Private`n, 
             Blank[]], LieART`Private`EvenNaturalNumberQ]] := 
         LieART`Algebra[D][LieART`Private`n/2], 
         TagSet[LieART`SO, 
          MessageName[LieART`SO, "usage"], 
          "SO represents the algebra of the special orthogonal group."], 
         LieART`Private`OddNaturalNumberQ[
           Pattern[LieART`Private`expr, 
            Blank[]]] := And[
           OddQ[LieART`Private`expr], 
           LieART`Private`NaturalNumberQ[LieART`Private`expr]], 
         TagSet[LieART`B, 
          MessageName[LieART`B, "shdw"], 
          "Symbol `1` appears in multiple contexts `2`; definitions in \
context `3` may shadow or be shadowed by other definitions."], 
         TagSet[LieART`B, 
          MessageName[LieART`B, "usage"], 
          "B represents the infinite B series Lie algebras."], 
         LieART`Private`EvenNaturalNumberQ[
           Pattern[LieART`Private`expr, 
            Blank[]]] := And[
           EvenQ[LieART`Private`expr], 
           LieART`Private`NaturalNumberQ[LieART`Private`expr]], LieART`Sp[
           PatternTest[
            Pattern[LieART`Private`n, 
             Blank[]], LieART`Private`EvenNaturalNumberQ]] := 
         LieART`Algebra[C][LieART`Private`n/2], 
         TagSet[LieART`Sp, 
          MessageName[LieART`Sp, "usage"], 
          "Sp represents the algebra of the symplectic group."], 
         UpSetDelayed[Pattern[LieART`Private`f, 
            Blank[]] LieART`Weight[
            Pattern[LieART`Private`algebraClass, 
             Blank[]]][
            Pattern[LieART`Private`label, 
             BlankSequence[]]], 
          Apply[
           LieART`Weight[LieART`Private`algebraClass], 
           LieART`Private`f {LieART`Private`label}]], 
         UpSetDelayed[LieART`Weight[
            Pattern[LieART`Private`algebraClass, 
             Blank[]]][
            Pattern[LieART`Private`label1, 
             BlankSequence[]]] + LieART`Weight[
            Pattern[LieART`Private`algebraClass, 
             Blank[]]][
            Pattern[LieART`Private`label2, 
             BlankSequence[]]], 
          Apply[
           LieART`Weight[
           LieART`Private`algebraClass], {LieART`Private`label1} + {
            LieART`Private`label2}]], 
         TagSetDelayed[LieART`Weight, LieART`Irrep[
            Pattern[LieART`Private`algebraClass, 
             Blank[]]][
            Pattern[LieART`Private`label2, 
             BlankSequence[]]] + LieART`Weight[
            Pattern[LieART`Private`algebraClass, 
             Blank[]]][
            Pattern[LieART`Private`label1, 
             BlankSequence[]]], 
          Apply[
           LieART`Weight[
           LieART`Private`algebraClass], {LieART`Private`label1} + {
            LieART`Private`label2}]], 
         TagSetDelayed[LieART`Weight, LieART`RootOmega[
            Pattern[LieART`Private`algebraClass, 
             Blank[]]][
            Pattern[LieART`Private`label2, 
             BlankSequence[]]] + LieART`Weight[
            Pattern[LieART`Private`algebraClass, 
             Blank[]]][
            Pattern[LieART`Private`label1, 
             BlankSequence[]]], 
          Apply[
           LieART`Weight[
           LieART`Private`algebraClass], {LieART`Private`label1} + {
            LieART`Private`label2}]], 
         TagSetDelayed[LieART`Weight, 
          MakeBoxes[
           PatternTest[
            LieART`Weight[
             Blank[]][
             Pattern[LieART`Private`label, 
              BlankSequence[]]], LieART`Private`WeightQ], StandardForm], 
          Format[
           LieART`Private`DisplayLabelCommaSeparated[LieART`Private`label], 
           StandardForm]], 
         TagSetDelayed[LieART`Weight, 
          MakeBoxes[
           PatternTest[
            LieART`Weight[
             Blank[]][
             Pattern[LieART`Private`label, 
              BlankSequence[]]], LieART`Private`WeightQ], TraditionalForm], 
          Format[
           Grid[{{LieART`Private`label}}, Frame -> True], TraditionalForm]], 
         TagSetDelayed[LieART`Weight, 
          MakeBoxes[
           PatternTest[
            LieART`Weight[
             Blank[]][
             Pattern[LieART`Private`label, 
              BlankSequence[]]], LieART`Private`WeightQ], LieART`LaTeXForm], 
          Format[
           ToString[
            StringJoin["\\weight", 
             ToString[{LieART`Private`label}]]], LieART`LaTeXForm]], 
         TagSet[LieART`Weight, 
          MessageName[LieART`Weight, "usage"], 
          "Weight[algebraClass] is the combined head of a weight of algebra \
of the class algebraClass."], LieART`Irrep[
           LieART`Algebra[LieART`U][1]][
           Pattern[LieART`Private`charge, 
            Blank[]]] := LieART`Irrep[LieART`U][LieART`Private`charge], 
         LieART`Irrep[
           PatternTest[
            Pattern[LieART`Private`algebra, 
             Blank[]], LieART`SimpleLieAlgebraQ]][
           PatternTest[
            Pattern[LieART`Private`dimname, 
             Blank[]], LieART`Private`DimNameQ]] := 
         Module[{LieART`Private`irrepName = 
            LieART`Private`ToIrrepName[
             LieART`Private`algebra, LieART`Private`dimname], 
            LieART`Private`irrep}, 
           Condition[
            First[LieART`Private`irrep], 
            LieART`Private`NonEmptyQ[
            LieART`Private`irrep = 
             LieART`Private`GetIrrepByDimName[
              LieART`Private`algebra, LieART`Private`irrepName]]]], 
         UpSetDelayed[Pattern[LieART`Private`irrep, 
            PatternTest[
             LieART`Irrep[
              Blank[]][
              BlankSequence[]], LieART`IrrepQ]]^PatternTest[
            Pattern[LieART`Private`k, 
             Blank[]], LieART`Private`NaturalNumberQ], 
          Apply[LieART`DecomposeProduct, 
           ConstantArray[LieART`Private`irrep, LieART`Private`k]]], 
         UpSetDelayed[Pattern[LieART`Private`irrep, 
            PatternTest[
             LieART`Irrep[
              Blank[]][
              BlankSequence[]], LieART`IrrepQ]] Pattern[LieART`Private`irreps, 
            Repeated[
             PatternTest[
              LieART`Irrep[
               Blank[]][
               BlankSequence[]], LieART`IrrepQ]]], 
          LieART`DecomposeProduct[
          LieART`Private`irrep, LieART`Private`irreps]], 
         UpSetDelayed[Pattern[LieART`Private`irreps, 
            Repeated[
             PatternTest[
              LieART`Irrep[
               Blank[]][
               BlankSequence[]], LieART`IrrepQ]]] PatternTest[
            Pattern[LieART`Private`factor, 
             Blank[]], LieART`Private`NaturalNumberQ], 
          LieART`IrrepTimes[LieART`Private`factor, LieART`Private`irreps]], 
         UpSetDelayed[
          Dot[
           Pattern[LieART`Private`irrep, 
            PatternTest[
             LieART`Irrep[
              Blank[]][
              BlankSequence[]], LieART`IrrepQ]], 
           Pattern[LieART`Private`irreps, 
            Repeated[
             PatternTest[
              LieART`Irrep[
               Blank[]][
               BlankSequence[]], LieART`IrrepQ]]]], 
          LieART`DecomposeProduct[
          LieART`Private`irrep, LieART`Private`irreps]], 
         UpSetDelayed[
          Dot[
           PatternTest[
            Pattern[LieART`Private`factor, 
             Blank[]], LieART`Private`NaturalNumberQ], 
           Pattern[LieART`Private`irreps, 
            Repeated[
             PatternTest[
              LieART`Irrep[
               Blank[]][
               BlankSequence[]], LieART`IrrepQ]]]], 
          LieART`IrrepTimes[LieART`Private`factor, LieART`Private`irreps]], 
         UpSetDelayed[Pattern[LieART`Private`irrep, 
            PatternTest[
             LieART`Irrep[
              Blank[]][
              BlankSequence[]], LieART`IrrepQ]] + 
          Pattern[LieART`Private`irreps, 
            Repeated[
             PatternTest[
              LieART`Irrep[
               Blank[]][
               BlankSequence[]], LieART`IrrepQ]]], 
          LieART`IrrepPlus[LieART`Private`irrep, LieART`Private`irreps]], 
         UpSetDelayed[
          MakeBoxes[
           LieART`Irrep[LieART`U][
            Pattern[LieART`Private`charge, 
             Blank[]]], 
           Pattern[FormatType, 
            Blank[]]], 
          Format[
           ToString[
            StringJoin["(", 
             ToString[LieART`Private`charge, InputForm], ")"]], FormatType]], 
         Format[
           LieART`Irrep[LieART`U][
            Pattern[LieART`Private`charge, 
             Blank[]]]] := ToString[
           StringJoin["(", 
            ToString[LieART`Private`charge, InputForm], ")"]], 
         TagSetDelayed[LieART`Irrep, 
          MakeBoxes[
           PatternTest[
            LieART`Irrep[
             Pattern[LieART`Private`algebraClass, 
              Blank[]]][
             PatternTest[
              Pattern[LieART`Private`label, 
               BlankSequence[]], Inequality[0, LessEqual, #, Less, 10]& ]], 
            LieART`IrrepQ], StandardForm], 
          Format[
           LieART`Private`DisplayLabel[LieART`Private`label], StandardForm]], 
         TagSetDelayed[LieART`Irrep, 
          MakeBoxes[
           Pattern[LieART`Private`irrep, 
            PatternTest[
             LieART`Irrep[
              Pattern[LieART`Private`algebraClass, 
               Blank[]]][
              Pattern[LieART`Private`label, 
               BlankSequence[]]], LieART`IrrepQ]], StandardForm], 
          Format[
           LieART`Private`DisplayLabelCommaSeparated[LieART`Private`label], 
           StandardForm]], 
         UpSetDelayed[
          MakeBoxes[
           Pattern[LieART`Private`irrep, 
            PatternTest[
             LieART`Irrep[
              Blank[]][
              BlankSequence[]], LieART`IrrepQ]], 
           Pattern[FormatType, 
            Blank[]]], 
          Format[
           LieART`DimName[LieART`Private`irrep], FormatType]], Format[
           Pattern[LieART`Private`irrep, 
            PatternTest[
             LieART`Irrep[
              Blank[]][
              BlankSequence[]], LieART`IrrepQ]]] := 
         LieART`DimName[LieART`Private`irrep], 
         TagSetDelayed[LieART`Irrep, 
          MessageName[LieART`Irrep, "noirrep"], 
          "Either an irrep with the dimension name `1` does not exist in `2` \
or it has at least one Dynkin digit higher than `3`. Try with $MaxDynkinDigit \
set to a higher value than `3`."], 
         TagSet[LieART`Irrep, 
          MessageName[LieART`Irrep, "usage"], 
          "Irrep[algebraClass] is the combined head of an irreducible \
representation Lie algebra of the class algebraClass."], 
         TagSet[LieART`U, 
          MessageName[LieART`U, "usage"], "U represents the unitary group."], 
         LieART`Private`algebra = LieART`Algebra[C][15], 
         LieART`SimpleLieAlgebraQ[
           Pattern[LieART`Private`expr, 
            Blank[]]] := MatchQ[LieART`Private`expr, 
           Alternatives[
           LieART`Private`InfiniteSeriesAlgebras, 
            LieART`Private`ExceptionalAlgebras, 
            LieART`Algebra[LieART`U][1]]], 
         TagSet[LieART`SimpleLieAlgebraQ, 
          MessageName[LieART`SimpleLieAlgebraQ, "usage"], "LieAlgebraQ  "], 
         LieART`Private`InfiniteSeriesAlgebras = LieART`Algebra[
           Alternatives[LieART`A, LieART`B, C, D]][
           PatternTest[
            Blank[], LieART`Private`NaturalNumberQ]], 
         LieART`Private`ExceptionalAlgebras = 
         Alternatives[LieART`E6, LieART`E7, LieART`E8, LieART`F4, LieART`G2], 
         Format[LieART`E6] := Subscript["E", 6], 
         TagSetDelayed[LieART`E6, 
          MakeBoxes[LieART`E6, LieART`LaTeXForm], 
          Format["\\E6", LieART`LaTeXForm]], 
         UpSetDelayed[
          MakeBoxes[LieART`E6, 
           Pattern[FormatType, 
            Blank[]]], 
          Format[
           Subscript["E", 6], FormatType]], 
         TagSet[LieART`E6, 
          MessageName[LieART`E6, "shdw"], 
          "Symbol `1` appears in multiple contexts `2`; definitions in \
context `3` may shadow or be shadowed by other definitions."], 
         Attributes[Subscript] = {NHoldRest}, 
         Attributes[MakeBoxes] = {HoldAllComplete}, 
         UpSet[
          ParentForm[LieART`LaTeXForm], StandardForm], 
         TagSet[LieART`LaTeXForm, 
          MessageName[LieART`LaTeXForm, "usage"], "LaTeXForm  "], 
         Format[LieART`E7] := Subscript["E", 7], 
         TagSetDelayed[LieART`E7, 
          MakeBoxes[LieART`E7, LieART`LaTeXForm], 
          Format["\\E7", LieART`LaTeXForm]], 
         UpSetDelayed[
          MakeBoxes[LieART`E7, 
           Pattern[FormatType, 
            Blank[]]], 
          Format[
           Subscript["E", 7], FormatType]], Format[LieART`E8] := 
         Subscript["E", 8], 
         TagSetDelayed[LieART`E8, 
          MakeBoxes[LieART`E8, LieART`LaTeXForm], 
          Format["\\E8", LieART`LaTeXForm]], 
         UpSetDelayed[
          MakeBoxes[LieART`E8, 
           Pattern[FormatType, 
            Blank[]]], 
          Format[
           Subscript["E", 8], FormatType]], Format[LieART`F4] := 
         Subscript["F", 4], 
         TagSetDelayed[LieART`F4, 
          MakeBoxes[LieART`F4, LieART`LaTeXForm], 
          Format["\\F4", LieART`LaTeXForm]], 
         UpSetDelayed[
          MakeBoxes[LieART`F4, 
           Pattern[FormatType, 
            Blank[]]], 
          Format[
           Subscript["F", 4], FormatType]], Format[LieART`G2] := 
         Subscript["G", 2], 
         TagSetDelayed[LieART`G2, 
          MakeBoxes[LieART`G2, LieART`LaTeXForm], 
          Format["\\G2", LieART`LaTeXForm]], 
         UpSetDelayed[
          MakeBoxes[LieART`G2, 
           Pattern[FormatType, 
            Blank[]]], 
          Format[
           Subscript["G", 2], FormatType]], LieART`Private`DimNameQ[
           Pattern[LieART`Private`expr, 
            Blank[]]] := Or[
           IntegerQ[LieART`Private`expr], Head[LieART`Private`expr] === 
           LieART`Bar, Head[LieART`Private`expr] === LieART`IrrepPrime], 
         Attributes[LieART`Bar] = {Listable}, LieART`Bar[
           PatternTest[
            Pattern[LieART`Private`productIrreps, 
             Blank[]], LieART`Private`ProductIrrepQ]] := 
         Map[LieART`Bar, LieART`Private`productIrreps], LieART`Bar[
           PatternTest[
            Pattern[LieART`Private`irrep, 
             Blank[]], LieART`IrrepQ]] := 
         LieART`ConjugateIrrep[LieART`Private`irrep], LieART`Bar[
           Pattern[LieART`Private`irrep, 
            LieART`Irrep[LieART`U][
             Pattern[LieART`Private`u1charge, 
              Blank[]]]]] := LieART`Irrep[LieART`U][-LieART`Private`u1charge],
          LieART`Bar[
           LieART`Bar[
            PatternTest[
             Pattern[LieART`Private`dim, 
              Blank[]], NumberQ]]] := LieART`Private`dim, LieART`Bar[
           LieART`IrrepPrime[
            Pattern[LieART`Private`dim, 
             Blank[]], 1], 1] := LieART`IrrepPrime[
           LieART`Bar[LieART`Private`dim]], LieART`Bar[
           LieART`IrrepPrime[
            Pattern[LieART`Private`dim, 
             Blank[]], 
            Pattern[LieART`Private`numprimes, 
             Blank[]]]] := LieART`IrrepPrime[
           LieART`Bar[LieART`Private`dim], LieART`Private`numprimes], 
         TagSet[LieART`Bar, 
          MessageName[LieART`Bar, "usage"], 
          "Bar[irrep] give the conjugated irrep."], 
         LieART`Private`ProductIrrepQ[
           Pattern[LieART`Private`expr, 
            Blank[]]] := 
         MatchQ[LieART`Private`expr, LieART`Private`ProductIrrepPattern], 
         LieART`Private`ProductIrrepPattern = LieART`ProductIrrep[
           PatternTest[
            BlankSequence[], LieART`IrrepQ]], 
         Attributes[LieART`ProductIrrep] = {Flat, OneIdentity}, 
         UpSetDelayed[Pattern[LieART`Private`irrep, 
            PatternTest[
             LieART`ProductIrrep[
              BlankSequence[]], LieART`Private`ProductIrrepQ]] 
          Pattern[LieART`Private`irreps, 
            Repeated[
             PatternTest[
              LieART`ProductIrrep[
               BlankSequence[]], LieART`Private`ProductIrrepQ]]], 
          LieART`DecomposeProduct[
          LieART`Private`irrep, LieART`Private`irreps]], 
         UpSetDelayed[Pattern[LieART`Private`irreps, 
            Repeated[
             PatternTest[
              LieART`ProductIrrep[
               BlankSequence[]], LieART`Private`ProductIrrepQ]]] PatternTest[
            Pattern[LieART`Private`factor, 
             Blank[]], LieART`Private`NaturalNumberQ], 
          LieART`IrrepTimes[LieART`Private`factor, LieART`Private`irreps]], 
         UpSetDelayed[
          Dot[
           Pattern[LieART`Private`irrep, 
            PatternTest[
             LieART`ProductIrrep[
              BlankSequence[]], LieART`Private`ProductIrrepQ]], 
           Pattern[LieART`Private`irreps, 
            Repeated[
             PatternTest[
              LieART`ProductIrrep[
               BlankSequence[]], LieART`Private`ProductIrrepQ]]]], 
          LieART`DecomposeProduct[
          LieART`Private`irrep, LieART`Private`irreps]], 
         UpSetDelayed[
          Dot[
           PatternTest[
            Pattern[LieART`Private`factor, 
             Blank[]], LieART`Private`NaturalNumberQ], 
           Pattern[LieART`Private`irreps, 
            Repeated[
             PatternTest[
              LieART`ProductIrrep[
               BlankSequence[]], LieART`Private`ProductIrrepQ]]]], 
          LieART`IrrepTimes[LieART`Private`factor, LieART`Private`irreps]], 
         TagSetDelayed[LieART`ProductIrrep, Pattern[LieART`Private`irrep, 
            PatternTest[
             LieART`Irrep[
              Blank[]][
              BlankSequence[]], LieART`IrrepQ]] + 
          Pattern[LieART`Private`irreps, 
            Repeated[
             PatternTest[
              LieART`ProductIrrep[
               BlankSequence[]], LieART`Private`ProductIrrepQ]]], 
          LieART`IrrepPlus[LieART`Private`irrep, LieART`Private`irreps]], 
         TagSetDelayed[LieART`ProductIrrep, 
          MakeBoxes[
           LieART`ProductIrrep[
            PatternTest[
             Pattern[LieART`Private`irreps, 
              BlankSequence[]], LieART`IrrepQ], 
            Pattern[LieART`Private`u1Charge, 
             RepeatedNull[
              LieART`Irrep[LieART`U][
               Blank[]]]]], TraditionalForm], 
          RowBox[{"(", 
            Apply[Sequence, 
             Riffle[
              Map[MakeBoxes[#, TraditionalForm]& , {LieART`Private`irreps}], 
              ","]], 
            Apply[Sequence, 
             Riffle[{")", 
               Apply[Sequence, 
                Map[
                MakeBoxes[#, TraditionalForm]& , {LieART`Private`u1Charge}]]},
               "\[InvisibleSpace]"]]}]], 
         TagSetDelayed[LieART`ProductIrrep, 
          MakeBoxes[
           LieART`ProductIrrep[
            PatternTest[
             Pattern[LieART`Private`irreps, 
              BlankSequence[]], LieART`IrrepQ], 
            Pattern[LieART`Private`u1Charge, 
             RepeatedNull[
              LieART`Irrep[LieART`U][
               Blank[]]]]], StandardForm], 
          Format[
           DisplayForm[
            RowBox[{"(", 
              Apply[Sequence, 
               Riffle[
                Map[MakeBoxes[#, StandardForm]& , {LieART`Private`irreps}], 
                ","]], ")", 
              Apply[Sequence, 
               Map[
               MakeBoxes[#, StandardForm]& , {LieART`Private`u1Charge}]]}]], 
           StandardForm]], 
         TagSetDelayed[LieART`ProductIrrep, 
          MakeBoxes[
           LieART`ProductIrrep[
            PatternTest[
             Pattern[LieART`Private`irreps, 
              BlankSequence[]], LieART`IrrepQ], 
            Pattern[LieART`Private`u1charge, 
             RepeatedNull[
              LieART`Irrep[LieART`U][
               Blank[]]]]], LieART`LaTeXForm], 
          Format[
           ToString[
            StringJoin["(", 
             ToString[
              Row[
               Map[LieART`LaTeXForm, {LieART`Private`irreps}], ","]], ")", 
             ToString[
              Row[
               Map[LieART`LaTeXForm, {LieART`Private`u1charge}]]]]], 
           LieART`LaTeXForm]], 
         TagSet[LieART`ProductIrrep, 
          MessageName[LieART`ProductIrrep, "usage"], 
          "ProductIrrep[irreps] gathers irreps of simple Lie algebras to a \
representation of a product algebra."], 
         Attributes[LieART`DecomposeProduct] = {Listable}, Condition[
           LieART`DecomposeProduct[
            Pattern[LieART`Private`irreps, 
             Repeated[
              LieART`Irrep[LieART`A][
               PatternTest[
                BlankSequence[], LieART`Private`DynkinLabelQ]]]]], 
           Not[
            
            OrderedQ[{LieART`Private`irreps}, 
             LieART`Private`NumberOfBoxesOrderedQ]]] := 
         LieART`DecomposeProduct[
           Apply[Sequence, 
            
            Sort[{LieART`Private`irreps}, 
             LieART`Private`NumberOfBoxesOrderedQ]]], LieART`DecomposeProduct[
           Pattern[LieART`Private`irrep1, 
            LieART`Irrep[LieART`A][
             PatternTest[
              Pattern[LieART`Private`label1, 
               BlankSequence[]], LieART`Private`DynkinLabelQ]]], 
           Pattern[LieART`Private`irrep2, 
            LieART`Irrep[LieART`A][
             PatternTest[
              Pattern[LieART`Private`label2, 
               BlankSequence[]], LieART`Private`DynkinLabelQ]]]] := 
         Condition[
          LieART`DecomposeProduct[
            LieART`Private`irrep1, LieART`Private`irrep2] = Module[{}, 
             LieART`IrrepPlus[
              Apply[
               LieART`Irrep[LieART`A], 
               Part[
                Fold[Flatten[
                  Map[
                   Function[LieART`Private`label, 
                    LieART`Private`AddToTableau[LieART`Private`label, 
                    LieART`Private`AllowedRows[LieART`Private`label, 
                    
                    LieART`Private`BoxesToBump[{
                    LieART`Private`label2}, #2]]]], #], 
                  1]& , {{{LieART`Private`label1}, {}}}, 
                 Range[
                  LieART`Rank[LieART`Private`irrep2]]], All, 1], {1}]]], 
           LieART`Algebra[LieART`Private`irrep1] === 
           LieART`Algebra[LieART`Private`irrep2]], LieART`DecomposeProduct[
           PatternTest[
            Pattern[LieART`Private`irrep, 
             Blank[]], LieART`Private`SingleOrProductIrrepQ]] := {
          LieART`Private`irrep}, LieART`DecomposeProduct[
           PatternTest[
            Pattern[LieART`Private`u1Irreps, 
             BlankSequence[]], LieART`Private`U1ChargeQ]] := {
           Apply[
            LieART`Irrep[LieART`U], 
            Apply[Plus, 
             Apply[List, {LieART`Private`u1Irreps}, {1}]]]}, Condition[
           LieART`DecomposeProduct[
            Pattern[LieART`Private`irreps, 
             Repeated[
              PatternTest[
               LieART`Irrep[
                Except[LieART`A]][
                BlankSequence[]], LieART`IrrepQ]]]], 
           Not[
            OrderedQ[{LieART`Private`irreps}, LieART`IrrepOrderedQ]]] := 
         LieART`DecomposeProduct[
           Apply[Sequence, 
            Sort[{LieART`Private`irreps}, LieART`IrrepOrderedQ]]], Condition[
           LieART`DecomposeProduct[
            Pattern[LieART`Private`irreps, 
             PatternTest[
              LieART`Irrep[
               Except[LieART`A]][
               BlankSequence[]], LieART`IrrepQ]]], 
           Not[
            OrderedQ[{LieART`Private`irreps}, LieART`Private`DimOrderedQ]]] := 
         LieART`DecomposeProduct[
           Apply[Sequence, 
            Sort[{LieART`Private`irreps}, LieART`Private`DimOrderedQ]]], 
         LieART`DecomposeProduct[
           Pattern[LieART`Private`irrep1, 
            PatternTest[
             LieART`Irrep[
              Blank[]][
              BlankSequence[]], LieART`IrrepQ]], 
           Pattern[LieART`Private`irrep2, 
            PatternTest[
             LieART`Irrep[
              Blank[]][
              BlankSequence[]], LieART`IrrepQ]]] := 
         Condition[
          LieART`DecomposeProduct[
            LieART`Private`irrep1, LieART`Private`irrep2] = 
           Module[{LieART`Private`delta = LieART`Delta[
                LieART`Algebra[LieART`Private`irrep1]], LieART`Private`mu, 
              LieART`Private`irreps}, LieART`Private`mu = LieART`Add[
                LieART`WeightSystemWithMul[LieART`Private`irrep1], 
                LieART`HighestWeight[LieART`Private`irrep2] + 
                LieART`Private`delta]; 
             LieART`Private`irreps = Map[LieART`ToIrrep, 
                LieART`Add[
                 LieART`TrivialStabilizerWeights[
                  Map[
                  LieART`ReflectToDominantWeightWithMul, 
                   LieART`Private`mu]], -LieART`Private`delta]]; 
             Apply[LieART`IrrepPlus, 
               Apply[LieART`IrrepTimes[#2, #]& , 
                Sort[
                 Select[
                  Map[{
                    Part[#, 1, 1], 
                    Total[
                    Part[#, All, 2]]}& , 
                   GatherBy[LieART`Private`irreps, Part[#, 1]& ]], Positive[
                   Last[#]]& ], LieART`IrrepOrderedQ[
                  First[#], 
                  First[#2]]& ], {1}]]], 
           LieART`Algebra[LieART`Private`irrep1] === 
           LieART`Algebra[LieART`Private`irrep2]], LieART`DecomposeProduct[
           PatternTest[
            Pattern[LieART`Private`irrep1, 
             Blank[]], LieART`Private`SingleOrProductIrrepQ], 
           PatternTest[
            Pattern[LieART`Private`irrep2, 
             Blank[]], LieART`Private`SingleOrProductIrrepQ], 
           PatternTest[
            Pattern[LieART`Private`irreps, 
             BlankSequence[]], LieART`Private`SingleOrProductIrrepQ]] := 
         Condition[
           LieART`DecomposeProduct[
            LieART`DecomposeProduct[
            LieART`Private`irrep1, LieART`Private`irrep2], 
            LieART`Private`irreps], LieART`Algebra[LieART`Private`irrep1] === 
           LieART`Algebra[LieART`Private`irrep2] === Apply[Sequence, 
             LieART`Algebra[{LieART`Private`irreps}]]], 
         LieART`DecomposeProduct[
           HoldPattern[
            PatternTest[
             Pattern[LieART`Private`productIrreps, 
              BlankSequence[]], LieART`Private`ProductIrrepQ]]] := 
         LieART`IrrepPlus[
           Flatten[
            Outer[LieART`ProductIrrep, 
             Apply[Sequence, 
              Map[LieART`IrrepList, 
               Apply[LieART`DecomposeProduct, 
                Transpose[
                 Apply[List, {LieART`Private`productIrreps}, {1}]], {1}]]]]]], 
         TagSet[LieART`DecomposeProduct, 
          MessageName[LieART`DecomposeProduct, "usage"], 
          "DecomposeProduct  "], LieART`Private`DynkinLabelQ[
           Pattern[LieART`Private`expr, 
            BlankSequence[]]] := Apply[And, 
           Map[And[
             IntegerQ[#], 
             NonNegative[#]]& , {LieART`Private`expr}]], 
         LieART`Private`NumberOfBoxesOrderedQ[
           Pattern[LieART`Private`irrep, 
            Blank[]], 
           Pattern[LieART`Private`irrep, 
            Blank[]]] := True, LieART`Private`NumberOfBoxesOrderedQ[
           Pattern[LieART`Private`irrep1, 
            Blank[]], 
           Pattern[LieART`Private`irrep2, 
            Blank[]]] := 
         Condition[
          LieART`Dim[LieART`Private`irrep1] >= 
           LieART`Dim[LieART`Private`irrep2], 
           And[
           LieART`Private`NumberOfBoxes[LieART`Private`irrep1] == 
            LieART`Private`NumberOfBoxes[LieART`Private`irrep2], 
            LieART`Dim[LieART`Private`irrep1] != 
            LieART`Dim[LieART`Private`irrep2]]], 
         LieART`Private`NumberOfBoxesOrderedQ[
           Pattern[LieART`Private`irrep1, 
            Blank[]], 
           Pattern[LieART`Private`irrep2, 
            Blank[]]] := 
         Condition[
          LieART`Index[LieART`Private`irrep1] <= 
           LieART`Index[LieART`Private`irrep2], 
           And[
           LieART`Private`NumberOfBoxes[LieART`Private`irrep1] == 
            LieART`Private`NumberOfBoxes[LieART`Private`irrep2], 
            LieART`Dim[LieART`Private`irrep1] == 
            LieART`Dim[LieART`Private`irrep2], 
            LieART`Index[LieART`Private`irrep1] != 
            LieART`Index[LieART`Private`irrep2]]], 
         LieART`Private`NumberOfBoxesOrderedQ[
           Pattern[LieART`Private`irrep1, 
            LieART`Irrep[LieART`A][
             BlankSequence[]]], 
           Pattern[LieART`Private`irrep2, 
            LieART`Irrep[LieART`A][
             BlankSequence[]]]] := 
         LieART`Private`NumberOfBoxes[LieART`Private`irrep1] >= 
          LieART`Private`NumberOfBoxes[LieART`Private`irrep2], 
         Attributes[LieART`Dim] = {Listable}, LieART`Dim[
           LieART`ProductIrrep[
            Pattern[LieART`Private`irreps, 
             BlankSequence[]]]] := Map[LieART`Dim, 
           ReplaceAll[{LieART`Private`irreps}, LieART`Irrep[LieART`U][
              Blank[]] -> Sequence[]]], LieART`Dim[
           PatternTest[
            Pattern[LieART`Private`irrep, 
             Blank[]], LieART`Private`NonNumericIrrepQ]] := (
          LieART`Dim[LieART`Private`irrep] = Apply[
            LieART`WeylDimensionFormula[
             LieART`Algebra[LieART`Private`irrep]], LieART`Private`irrep]), 
         TagSet[LieART`Dim, 
          MessageName[LieART`Dim, "usage"], 
          "Dim[irrep] computes the dimension of irrep."], 
         LieART`Private`NonNumericIrrepQ[
           Pattern[LieART`Private`expr, 
            Blank[]]] := 
         MatchQ[LieART`Private`expr, LieART`Private`NonNumericIrrepPattern], 
         LieART`Private`NonNumericIrrepPattern = Alternatives[
           HoldPattern[
            Alternatives[LieART`Private`U1ChargePattern, 
             LieART`Irrep[
              Alternatives[LieART`A, LieART`B, C, D]][
              BlankSequence[]]]], 
           Alternatives[
            LieART`Irrep[LieART`E6][
             Repeated[
              Blank[], {6}]], 
            LieART`Irrep[LieART`E7][
             Repeated[
              Blank[], {7}]], 
            LieART`Irrep[LieART`E8][
             Repeated[
              Blank[], {8}]], 
            LieART`Irrep[LieART`F4][
             Repeated[
              Blank[], {4}]], 
            LieART`Irrep[LieART`G2][
             Repeated[
              Blank[], {2}]]]], LieART`Private`U1ChargePattern = 
         LieART`Irrep[LieART`U][
           Blank[]], LieART`WeylDimensionFormula[
           Pattern[LieART`Private`algebra, 
            Blank[]]] := (LieART`WeylDimensionFormula[LieART`Private`algebra] = 
          Module[{
            LieART`Private`highestWeight, LieART`Private`args, 
             LieART`Private`body, LieART`Private`delta = 
             LieART`Delta[LieART`Private`algebra]}, 
            LieART`Private`args = Map[ToExpression[
                StringJoin["a", 
                 ToString[#]]]& , 
               Range[
                LieART`Rank[LieART`Private`algebra]]]; 
            LieART`Private`highestWeight = Apply[
               LieART`Weight[
                LieART`AlgebraClass[LieART`Private`algebra]], 
               LieART`Private`args]; LieART`Private`body = Factor[
               Apply[Times, 
                Map[
                LieART`ScalarProduct[
                  LieART`Private`highestWeight + LieART`Private`delta, #]/
                 LieART`ScalarProduct[LieART`Private`delta, #]& , 
                 LieART`PositiveRoots[LieART`Private`algebra]]]]; Function[
              Evaluate[LieART`Private`args], 
              Evaluate[LieART`Private`body]]]), 
         TagSet[LieART`WeylDimensionFormula, 
          MessageName[LieART`WeylDimensionFormula, "usage"], 
          "WeylDimensionFormula  "], LieART`Delta[
           Pattern[LieART`Private`algebra, 
            Blank[]]] := (LieART`Delta[LieART`Private`algebra] = Apply[
            LieART`Weight[
             LieART`AlgebraClass[LieART`Private`algebra]], 
            ConstantArray[1, 
             LieART`Rank[LieART`Private`algebra]]]), 
         TagSet[LieART`Delta, 
          MessageName[LieART`Delta, "usage"], "Delta  "], 
         Attributes[LieART`AlgebraClass] = {Listable}, LieART`AlgebraClass[
           LieART`Algebra[
            Pattern[LieART`Private`algebraClass, 
             Blank[]]][
            Pattern[LieART`Private`n, 
             Blank[]]]] := LieART`Private`algebraClass, LieART`AlgebraClass[
           Pattern[LieART`Private`algebra, 
            Blank[Symbol]]] := LieART`Private`algebra, LieART`AlgebraClass[
           Pattern[LieART`Private`irrep, 
            Alternatives[
            LieART`Weight, LieART`WeightAlpha, LieART`Irrep, LieART`RootOmega,
              LieART`RootAlpha, LieART`RootOrthogonal, 
             LieART`WeightOrthogonal][
             Pattern[LieART`Private`algebra, 
              Alternatives[
              LieART`E6, LieART`E7, LieART`E8, LieART`F4, LieART`G2]]][
             BlankSequence[]]]] := LieART`Private`algebra, LieART`AlgebraClass[
           Pattern[LieART`Private`irrep, 
            Alternatives[
            LieART`Weight, LieART`WeightAlpha, LieART`Irrep, LieART`RootOmega,
              LieART`RootAlpha, LieART`RootOrthogonal, 
             LieART`WeightOrthogonal][
             Pattern[LieART`Private`algebraClass, 
              Alternatives[LieART`A, LieART`B, C, D]]][
             Pattern[LieART`Private`label, 
              BlankSequence[]]]]] := LieART`Private`algebraClass, 
         LieART`AlgebraClass[
           LieART`ProductIrrep[
            PatternTest[
             Pattern[LieART`Private`irreps, 
              BlankSequence[]], LieART`IrrepQ]]] := 
         LieART`AlgebraClass[{LieART`Private`irreps}], LieART`AlgebraClass[
           LieART`ProductAlgebra[
            PatternTest[
             Pattern[LieART`Private`algebras, 
              BlankSequence[]], LieART`Private`LieAlgebraQ]]] := 
         LieART`AlgebraClass[{LieART`Private`algebras}], 
         TagSet[LieART`AlgebraClass, 
          MessageName[LieART`AlgebraClass, "usage"], 
          "AlgebraClass[algebra] yields the series class of an infinite \
series algebra and the algebra itself for an exceptional algebra."], 
         UpSetDelayed[Pattern[LieART`Private`f, 
            Blank[]] LieART`WeightAlpha[
            Pattern[LieART`Private`algebraClass, 
             Blank[]]][
            Pattern[LieART`Private`label, 
             BlankSequence[]]], 
          Apply[
           LieART`WeightAlpha[LieART`Private`algebraClass], 
           LieART`Private`f {LieART`Private`label}]], 
         UpSetDelayed[LieART`WeightAlpha[
            Pattern[LieART`Private`algebraClass, 
             Blank[]]][
            Pattern[LieART`Private`label1, 
             BlankSequence[]]] + LieART`WeightAlpha[
            Pattern[LieART`Private`algebraClass, 
             Blank[]]][
            Pattern[LieART`Private`label2, 
             BlankSequence[]]], 
          Apply[
           LieART`WeightAlpha[
           LieART`Private`algebraClass], {LieART`Private`label1} + {
            LieART`Private`label2}]], 
         UpSetDelayed[
          MakeBoxes[
           LieART`WeightAlpha[
            Blank[]][
            Pattern[LieART`Private`label, 
             BlankSequence[]]], 
           Pattern[FormatType, 
            Blank[]]], 
          Format[
           LieART`Private`DisplayLabelCommaSeparated[LieART`Private`label], 
           FormatType]], Format[
           LieART`WeightAlpha[
            Blank[]][
            Pattern[LieART`Private`label, 
             BlankSequence[]]]] := 
         LieART`Private`DisplayLabelCommaSeparated[LieART`Private`label], 
         TagSet[LieART`WeightAlpha, 
          MessageName[LieART`WeightAlpha, "usage"], 
          "WeightAlpha[algebraClass] is the combined head of a weight of \
algebra of the class algebraClass in the alpha basis."], 
         LieART`Private`DisplayLabelCommaSeparated[
           Pattern[LieART`Private`label, 
            BlankSequence[]]] := StringJoin["(", 
           ToString[
            Row[
             Map[ToString[#, InputForm]& , {LieART`Private`label}], ", "]], 
           ")"], 
         UpSetDelayed[Pattern[LieART`Private`f, 
            Blank[]] LieART`RootOmega[
            Pattern[LieART`Private`algebraClass, 
             Blank[]]][
            Pattern[LieART`Private`label, 
             BlankSequence[]]], 
          Apply[
           LieART`RootOmega[LieART`Private`algebraClass], 
           LieART`Private`f {LieART`Private`label}]], 
         UpSetDelayed[LieART`RootOmega[
            Pattern[LieART`Private`algebraClass, 
             Blank[]]][
            Pattern[LieART`Private`label1, 
             BlankSequence[]]] + LieART`RootOmega[
            Pattern[LieART`Private`algebraClass, 
             Blank[]]][
            Pattern[LieART`Private`label2, 
             BlankSequence[]]], 
          Apply[
           LieART`RootOmega[
           LieART`Private`algebraClass], {LieART`Private`label1} + {
            LieART`Private`label2}]], 
         TagSetDelayed[LieART`RootOmega, 
          MakeBoxes[
           LieART`RootOmega[
            Blank[]][
            Pattern[LieART`Private`label, 
             BlankSequence[]]], StandardForm], 
          Format[
           LieART`Private`DisplayLabelCommaSeparated[LieART`Private`label], 
           StandardForm]], 
         TagSetDelayed[LieART`RootOmega, 
          MakeBoxes[
           LieART`RootOmega[
            Blank[]][
            Pattern[LieART`Private`label, 
             BlankSequence[]]], TraditionalForm], 
          Format[
           Grid[{{LieART`Private`label}}, Frame -> True], TraditionalForm]], 
         TagSetDelayed[LieART`RootOmega, 
          MakeBoxes[
           LieART`RootOmega[
            Blank[]][
            Pattern[LieART`Private`label, 
             BlankSequence[]]], LieART`LaTeXForm], 
          Format[
           ToString[
            StringJoin["\\rootomega", 
             ToString[{LieART`Private`label}]]], LieART`LaTeXForm]], 
         TagSet[LieART`RootOmega, 
          MessageName[LieART`RootOmega, "usage"], 
          "RootOmega[algebraClass] is the combined head of a root of algebra \
of the class algebraClass in the omega basis."], 
         UpSetDelayed[
          MakeBoxes[
           LieART`RootAlpha[
            Blank[]][
            Pattern[LieART`Private`label, 
             BlankSequence[]]], 
           Pattern[FormatType, 
            Blank[]]], 
          Format[
           LieART`Private`DisplayLabelCommaSeparated[LieART`Private`label], 
           FormatType]], Format[
           LieART`RootAlpha[
            Blank[]][
            Pattern[LieART`Private`label, 
             BlankSequence[]]]] := 
         LieART`Private`DisplayLabelCommaSeparated[LieART`Private`label], 
         TagSet[LieART`RootAlpha, 
          MessageName[LieART`RootAlpha, "usage"], 
          "RootAlpha[algebraClass] is the combined head of a root of algebra \
of the class algebraClass in the alpha basis."], 
         UpSetDelayed[
          Dot[
           LieART`RootOrthogonal[
            Blank[]][
            Pattern[LieART`Private`a, 
             BlankSequence[]]], 
           LieART`RootOrthogonal[
            Blank[]][
            Pattern[LieART`Private`b, 
             BlankSequence[]]]], 
          Dot[{LieART`Private`a}, {LieART`Private`b}]], 
         TagSetDelayed[LieART`RootOrthogonal, 
          Dot[
           LieART`RootOrthogonal[
            Blank[]][
            Pattern[LieART`Private`a, 
             BlankSequence[]]], 
           Pattern[LieART`Private`b, 
            Blank[List]]], 
          Dot[{LieART`Private`a}, LieART`Private`b]], 
         UpSetDelayed[LieART`RootOrthogonal[
            Pattern[LieART`Private`algebraClass, 
             Blank[]]][
            Pattern[LieART`Private`label1, 
             BlankSequence[]]] + LieART`RootOrthogonal[
            Pattern[LieART`Private`algebraClass, 
             Blank[]]][
            Pattern[LieART`Private`label2, 
             BlankSequence[]]], 
          Apply[
           LieART`RootOrthogonal[
           LieART`Private`algebraClass], {LieART`Private`label1} + {
            LieART`Private`label2}]], 
         UpSetDelayed[Pattern[LieART`Private`f, 
            Blank[]] LieART`RootOrthogonal[
            Pattern[LieART`Private`algebraClass, 
             Blank[]]][
            Pattern[LieART`Private`label, 
             BlankSequence[]]], 
          Apply[
           LieART`RootOrthogonal[LieART`Private`algebraClass], 
           LieART`Private`f {LieART`Private`label}]], 
         TagSetDelayed[LieART`RootOrthogonal, 
          MakeBoxes[
           LieART`RootOrthogonal[
            Blank[]][
            Pattern[LieART`Private`label, 
             BlankSequence[]]], LieART`LaTeXForm], 
          Format[
           ToString[
            StringJoin["\\rootorthogonal", 
             ToString[{LieART`Private`label}]]], LieART`LaTeXForm]], 
         UpSetDelayed[
          MakeBoxes[
           LieART`RootOrthogonal[
            Blank[]][
            Pattern[LieART`Private`label, 
             BlankSequence[]]], 
           Pattern[FormatType, 
            Blank[]]], 
          Format[
           LieART`Private`DisplayLabelCommaSeparated[LieART`Private`label], 
           FormatType]], Format[
           LieART`RootOrthogonal[
            Blank[]][
            Pattern[LieART`Private`label, 
             BlankSequence[]]]] := 
         LieART`Private`DisplayLabelCommaSeparated[LieART`Private`label], 
         TagSet[LieART`RootOrthogonal, 
          MessageName[LieART`RootOrthogonal, "usage"], 
          "RootOrthogonal[algebraClass] is the combined head of a root of \
algebra of the class algebraClass."], 
         TagSetDelayed[LieART`WeightOrthogonal, LieART`RootOrthogonal[
            Pattern[LieART`Private`algebraClass, 
             Blank[]]][
            Pattern[LieART`Private`label2, 
             BlankSequence[]]] + LieART`WeightOrthogonal[
            Pattern[LieART`Private`algebraClass, 
             Blank[]]][
            Pattern[LieART`Private`label1, 
             BlankSequence[]]], 
          Apply[
           LieART`WeightOrthogonal[
           LieART`Private`algebraClass], {LieART`Private`label1} + {
            LieART`Private`label2}]], 
         UpSetDelayed[
          MakeBoxes[
           LieART`WeightOrthogonal[
            Blank[]][
            Pattern[LieART`Private`label, 
             BlankSequence[]]], 
           Pattern[FormatType, 
            Blank[]]], 
          Format[
           LieART`Private`DisplayLabelCommaSeparated[LieART`Private`label], 
           FormatType]], Format[
           LieART`WeightOrthogonal[
            Blank[]][
            Pattern[LieART`Private`label, 
             BlankSequence[]]]] := 
         LieART`Private`DisplayLabelCommaSeparated[LieART`Private`label], 
         TagSet[LieART`WeightOrthogonal, 
          MessageName[LieART`WeightOrthogonal, "usage"], 
          "WeightOrthogonal[algebraClass] is the combined head of a weight of \
algebra of the class algebraClass in the orthogonal basis."], LieART`IrrepQ[
           Pattern[LieART`Private`irrep, 
            Blank[]]] := 
         MatchQ[LieART`Private`irrep, LieART`Private`IrrepPattern], 
         TagSet[LieART`IrrepQ, 
          MessageName[LieART`IrrepQ, "usage"], "IrrepQ  "], 
         LieART`Private`IrrepPattern = Alternatives[
           HoldPattern[
            Alternatives[
             LieART`Irrep[LieART`U][
              PatternTest[
               Blank[], NumberQ]], 
             LieART`Irrep[
              Alternatives[LieART`A, LieART`B, C, D]][
              PatternTest[
               BlankSequence[], LieART`Private`DynkinLabelQ]]]], 
           Alternatives[
            LieART`Irrep[LieART`E6][
             PatternTest[
              Repeated[
               Blank[], {6}], LieART`Private`DynkinLabelQ]], 
            LieART`Irrep[LieART`E7][
             PatternTest[
              Repeated[
               Blank[], {7}], LieART`Private`DynkinLabelQ]], 
            LieART`Irrep[LieART`E8][
             PatternTest[
              Repeated[
               Blank[], {8}], LieART`Private`DynkinLabelQ]], 
            LieART`Irrep[LieART`F4][
             PatternTest[
              Repeated[
               Blank[], {4}], LieART`Private`DynkinLabelQ]], 
            LieART`Irrep[LieART`G2][
             PatternTest[
              Repeated[
               Blank[], {2}], LieART`Private`DynkinLabelQ]]]], 
         UpSetDelayed[
          MakeBoxes[
           LieART`ProductAlgebra[
            Pattern[LieART`Private`algebra, 
             Blank[]]], 
           Pattern[FormatType, 
            Blank[]]], 
          Format[LieART`Private`algebra, FormatType]], Format[
           LieART`ProductAlgebra[
            Pattern[LieART`Private`algebra, 
             Blank[]]]] := LieART`Private`algebra, 
         TagSetDelayed[LieART`ProductAlgebra, 
          MakeBoxes[
           LieART`ProductAlgebra[
            Pattern[LieART`Private`algebras, 
             BlankSequence[]]], TraditionalForm], 
          RowBox[
           Riffle[
            Map[MakeBoxes[#, TraditionalForm]& , {LieART`Private`algebras}], 
            "\[Times]"]]], 
         TagSetDelayed[LieART`ProductAlgebra, 
          MakeBoxes[
           LieART`ProductAlgebra[
            Pattern[LieART`Private`algebras, 
             BlankSequence[]]], StandardForm], 
          Format[
           DisplayForm[
            RowBox[
             Riffle[
              Map[MakeBoxes[#, StandardForm]& , {LieART`Private`algebras}], 
              "\[Times]"]]], StandardForm]], 
         TagSetDelayed[LieART`ProductAlgebra, 
          MakeBoxes[
           LieART`ProductAlgebra[
            Pattern[LieART`Private`algebras, 
             BlankSequence[]]], LieART`LaTeXForm], 
          Format[
           ToString[
            Row[
             Map[LieART`ToLaTeX, {LieART`Private`algebras}], "${\\times}$"]], 
           LieART`LaTeXForm]], 
         TagSet[LieART`ProductAlgebra, 
          MessageName[LieART`ProductAlgebra, "usage"], "ProductAlgebra  "], 
         LieART`ToLaTeX[
           Pattern[LieART`Private`expr, 
            Blank[]]] := ToString[LieART`Private`expr, LieART`LaTeXForm], 
         TagSet[LieART`ToLaTeX, 
          MessageName[LieART`ToLaTeX, "usage"], "ToLaTeX  "], 
         LieART`Private`LieAlgebraQ[
           Alternatives[
            PatternTest[
             Blank[], LieART`SimpleLieAlgebraQ], 
            PatternTest[
             Blank[], LieART`Private`ProductLieAlgebraQ]]] := True, 
         LieART`Private`ProductLieAlgebraQ[
           LieART`ProductAlgebra[
            PatternTest[
             Pattern[LieART`Private`algebras, 
              BlankSequence[]], LieART`SimpleLieAlgebraQ]]] := True, 
         Attributes[LieART`Rank] = {Listable}, LieART`Rank[LieART`E6] = 6, 
         LieART`Rank[LieART`E7] = 7, LieART`Rank[LieART`E8] = 8, 
         LieART`Rank[LieART`F4] = 4, LieART`Rank[LieART`G2] = 2, LieART`Rank[
           Alternatives[LieART`WeightOrthogonal, LieART`RootOrthogonal][
           LieART`A][
            Pattern[LieART`Private`label, 
             BlankSequence[]]]] := Length[{LieART`Private`label}] - 1, 
         LieART`Rank[
           Alternatives[LieART`WeightOrthogonal, LieART`RootOrthogonal][
            Alternatives[LieART`B, C, D]][
            Pattern[LieART`Private`label, 
             BlankSequence[]]]] := Length[{LieART`Private`label}], LieART`Rank[
           Alternatives[
           LieART`Irrep, LieART`Weight, LieART`WeightAlpha, LieART`RootOmega, 
            LieART`RootAlpha][
            Alternatives[LieART`A, LieART`B, C, D]][
            Pattern[LieART`Private`label, 
             BlankSequence[]]]] := Length[{LieART`Private`label}], LieART`Rank[
           Blank[][
            Pattern[LieART`Private`algebraClass, 
             Alternatives[
             LieART`E6, LieART`E7, LieART`E8, LieART`F4, LieART`G2]]][
            BlankSequence[]]] := LieART`Rank[LieART`Private`algebraClass], 
         LieART`Rank[
           LieART`Algebra[
            Pattern[LieART`Private`algebraClass, 
             Blank[]]][
            Pattern[LieART`Private`n, 
             Blank[]]]] := LieART`Private`n, LieART`Rank[
           Pattern[LieART`Private`productAlgebra, 
            Blank[LieART`ProductAlgebra]]] := Total[
           Map[LieART`Rank, LieART`Private`productAlgebra]], 
         TagSet[LieART`Rank, 
          MessageName[LieART`Rank, "usage"], 
          "Rank[expr] gives the rank of the algebra of expr, which can be an \
algebra, irrep, weight or root."], LieART`ScalarProduct[
           Pattern[LieART`Private`weight1, 
            Alternatives[
            LieART`Weight, LieART`Irrep, LieART`RootOmega, LieART`RootAlpha][
             Pattern[LieART`Private`algebraClass, 
              Blank[]]][
             Pattern[LieART`Private`label1, 
              BlankSequence[]]]], 
           Pattern[LieART`Private`weight2, 
            Alternatives[
            LieART`Weight, LieART`Irrep, LieART`RootOmega, LieART`RootAlpha][
             Pattern[LieART`Private`algebraClass, 
              Blank[]]][
             Pattern[LieART`Private`label2, 
              BlankSequence[]]]]] := Dot[{LieART`Private`label1}, 
           LieART`MetricTensor[
            LieART`Algebra[LieART`Private`weight1]], {LieART`Private`label2}],
          LieART`ScalarProduct[
           Pattern[LieART`Private`weight1, 
            Alternatives[LieART`WeightOrthogonal, LieART`RootOrthogonal][
             Pattern[LieART`Private`algebraClass, 
              Blank[]]][
             Pattern[LieART`Private`label1, 
              BlankSequence[]]]], 
           Pattern[LieART`Private`weight2, 
            Alternatives[LieART`WeightOrthogonal, LieART`RootOrthogonal][
             Pattern[LieART`Private`algebraClass, 
              Blank[]]][
             Pattern[LieART`Private`label2, 
              BlankSequence[]]]]] := 
         Dot[{LieART`Private`label1}, {LieART`Private`label2}], 
         TagSet[LieART`ScalarProduct, 
          MessageName[LieART`ScalarProduct, "usage"], 
          "ScalarProduct[irrep1, irrep2] computes the scalar product of \
irrep1 and irrep2."], LieART`MetricTensor[
           PatternTest[
            Pattern[LieART`Private`algebra, 
             Blank[]], LieART`SimpleLieAlgebraQ]] := (
          LieART`MetricTensor[LieART`Private`algebra] = Dot[
            LieART`Private`InverseCartanMatrix[LieART`Private`algebra], 
            LieART`DMatrix[LieART`Private`algebra]]), 
         TagSet[LieART`MetricTensor, 
          MessageName[LieART`MetricTensor, "usage"], 
          "MetricTensor[algebra] is the metric tensor of algebra."], 
         LieART`Private`InverseCartanMatrix[LieART`G2] = {{2, 1}, {3, 2}}, 
         LieART`Private`InverseCartanMatrix[
           LieART`Algebra[LieART`A][2]] = {{2/3, 1/3}, {1/3, 2/3}}, 
         LieART`Private`InverseCartanMatrix[
           LieART`Algebra[C][3]] = {{1, 1, 1/2}, {1, 2, 1}, {1, 2, 3/2}}, 
         LieART`Private`InverseCartanMatrix[
           Pattern[LieART`Private`algebra, 
            Blank[]]] := (
          LieART`Private`InverseCartanMatrix[LieART`Private`algebra] = Inverse[
            LieART`CartanMatrix[LieART`Private`algebra]]), 
         LieART`CartanMatrix[LieART`G2] = {{2, -1}, {-3, 2}}, 
         LieART`CartanMatrix[
           LieART`Algebra[LieART`A][2]] = {{2, -1}, {-1, 2}}, 
         LieART`CartanMatrix[
           LieART`Algebra[C][3]] = {{2, -1, 0}, {-1, 2, -1}, {0, -2, 2}}, 
         LieART`CartanMatrix[
           PatternTest[
            Pattern[LieART`Private`algebra, 
             Blank[]], LieART`SimpleLieAlgebraQ]] := (
          LieART`CartanMatrix[LieART`Private`algebra] = (2 
           Outer[
            LieART`ScalarProduct[#, #2]/LieART`ScalarProduct[#2, #2]& , #, #, 
             1]& )[
            LieART`OrthogonalSimpleRoots[LieART`Private`algebra]]), 
         TagSet[LieART`CartanMatrix, 
          MessageName[LieART`CartanMatrix, "usage"], 
          "CartanMatrix[algebra] is the Cartan matrix of algebra."], 
         LieART`OrthogonalSimpleRoots[LieART`E6] = {
           LieART`RootOrthogonal[LieART`E6][
           1/2, (-1)/2, (-1)/2, (-1)/2, (-1)/2, (-1)/2, (-1)/2, 1/2], 
           LieART`RootOrthogonal[LieART`E6][-1, 1, 0, 0, 0, 0, 0, 0], 
           LieART`RootOrthogonal[LieART`E6][0, -1, 1, 0, 0, 0, 0, 0], 
           LieART`RootOrthogonal[LieART`E6][0, 0, -1, 1, 0, 0, 0, 0], 
           LieART`RootOrthogonal[LieART`E6][0, 0, 0, -1, 1, 0, 0, 0], 
           LieART`RootOrthogonal[LieART`E6][1, 1, 0, 0, 0, 0, 0, 0]}, 
         LieART`OrthogonalSimpleRoots[LieART`E7] = {
           LieART`RootOrthogonal[LieART`E7][
           1/2, (-1)/2, (-1)/2, (-1)/2, (-1)/2, (-1)/2, (-1)/2, 1/2], 
           LieART`RootOrthogonal[LieART`E7][-1, 1, 0, 0, 0, 0, 0, 0], 
           LieART`RootOrthogonal[LieART`E7][0, -1, 1, 0, 0, 0, 0, 0], 
           LieART`RootOrthogonal[LieART`E7][0, 0, -1, 1, 0, 0, 0, 0], 
           LieART`RootOrthogonal[LieART`E7][0, 0, 0, -1, 1, 0, 0, 0], 
           LieART`RootOrthogonal[LieART`E7][0, 0, 0, 0, -1, 1, 0, 0], 
           LieART`RootOrthogonal[LieART`E7][1, 1, 0, 0, 0, 0, 0, 0]}, 
         LieART`OrthogonalSimpleRoots[LieART`E8] = {
           LieART`RootOrthogonal[LieART`E8][
           1/2, (-1)/2, (-1)/2, (-1)/2, (-1)/2, (-1)/2, (-1)/2, 1/2], 
           LieART`RootOrthogonal[LieART`E8][-1, 1, 0, 0, 0, 0, 0, 0], 
           LieART`RootOrthogonal[LieART`E8][0, -1, 1, 0, 0, 0, 0, 0], 
           LieART`RootOrthogonal[LieART`E8][0, 0, -1, 1, 0, 0, 0, 0], 
           LieART`RootOrthogonal[LieART`E8][0, 0, 0, -1, 1, 0, 0, 0], 
           LieART`RootOrthogonal[LieART`E8][0, 0, 0, 0, -1, 1, 0, 0], 
           LieART`RootOrthogonal[LieART`E8][0, 0, 0, 0, 0, -1, 1, 0], 
           LieART`RootOrthogonal[LieART`E8][1, 1, 0, 0, 0, 0, 0, 0]}, 
         LieART`OrthogonalSimpleRoots[LieART`F4] = {
           LieART`RootOrthogonal[LieART`F4][1, -1, 0, 0], 
           LieART`RootOrthogonal[LieART`F4][0, 1, -1, 0], 
           LieART`RootOrthogonal[LieART`F4][0, 0, 1, 0], 
           LieART`RootOrthogonal[LieART`F4][(-1)/2, (-1)/2, (-1)/2, (-1)/2]}, 
         LieART`OrthogonalSimpleRoots[LieART`G2] = {
           LieART`RootOrthogonal[LieART`G2][1, -1, 0], 
           LieART`RootOrthogonal[LieART`G2][-2, 1, 1]}, 
         LieART`OrthogonalSimpleRoots[
           LieART`Algebra[LieART`A][2]] = {
           LieART`RootOrthogonal[LieART`A][1, -1, 0], 
           LieART`RootOrthogonal[LieART`A][0, 1, -1]}, 
         LieART`OrthogonalSimpleRoots[
           LieART`Algebra[C][3]] = {
           LieART`RootOrthogonal[C][1, -1, 0], 
           LieART`RootOrthogonal[C][0, 1, -1], 
           LieART`RootOrthogonal[C][0, 0, 2]}, LieART`OrthogonalSimpleRoots[
           LieART`Algebra[LieART`A][
            PatternTest[
             Pattern[LieART`Private`n, 
              Blank[]], LieART`Private`NaturalNumberQ]]] := (
          LieART`OrthogonalSimpleRoots[
            LieART`Algebra[LieART`A][LieART`Private`n]] = Apply[
            LieART`RootOrthogonal[LieART`A], 
            Normal[
             
             SparseArray[{Band[{1, 1}] -> 1, Band[{1, 2}] -> -1}, {
              LieART`Private`n, LieART`Private`n + 1}]], {1}]), 
         LieART`OrthogonalSimpleRoots[
           LieART`Algebra[LieART`B][
            PatternTest[
             Pattern[LieART`Private`n, 
              Blank[]], LieART`Private`NaturalNumberQ]]] := (
          LieART`OrthogonalSimpleRoots[
            LieART`Algebra[LieART`B][LieART`Private`n]] = Apply[
            LieART`RootOrthogonal[LieART`B], 
            Normal[
             
             SparseArray[{Band[{1, 1}] -> 1, Band[{1, 2}] -> -1}, {
              LieART`Private`n, LieART`Private`n}]], {1}]), 
         LieART`OrthogonalSimpleRoots[
           LieART`Algebra[C][
            PatternTest[
             Pattern[LieART`Private`n, 
              Blank[]], LieART`Private`NaturalNumberQ]]] := (
          LieART`OrthogonalSimpleRoots[
            LieART`Algebra[C][LieART`Private`n]] = Apply[
            LieART`RootOrthogonal[C], 
            Normal[
             
             SparseArray[{
              Band[{LieART`Private`n, LieART`Private`n}] -> 2, Band[{1, 1}] -> 
               1, Band[{1, 2}] -> -1}, {
              LieART`Private`n, LieART`Private`n}]], {1}]), 
         LieART`OrthogonalSimpleRoots[
           LieART`Algebra[D][
            PatternTest[
             Pattern[LieART`Private`n, 
              Blank[]], LieART`Private`NaturalNumberQ]]] := (
          LieART`OrthogonalSimpleRoots[
            LieART`Algebra[D][LieART`Private`n]] = Apply[
            LieART`RootOrthogonal[D], 
            Normal[
             
             SparseArray[{
              Band[{LieART`Private`n, LieART`Private`n - 1}] -> 1, 
               Band[{1, 1}] -> 1, Band[{1, 2}] -> -1}, {
              LieART`Private`n, LieART`Private`n}]], {1}]), 
         TagSet[LieART`OrthogonalSimpleRoots, 
          MessageName[LieART`OrthogonalSimpleRoots, "usage"], 
          "OrthogonalSimpleRoots[algebra] gives the simple roots of algebra \
in the orthogonal basis."], LieART`DMatrix[
           PatternTest[
            Pattern[LieART`Private`algebra, 
             Blank[]], LieART`SimpleLieAlgebraQ]] := DiagonalMatrix[
           Map[LieART`ScalarProduct[#, #]/2& , 
            LieART`Private`NormalizeSimpleRoots[
             LieART`OrthogonalSimpleRoots[LieART`Private`algebra]]]], 
         TagSet[LieART`DMatrix, 
          MessageName[LieART`DMatrix, "usage"], "DMatrix  "], 
         LieART`Private`NormalizeSimpleRoots[
           Pattern[LieART`Private`roots, 
            Blank[]]] := LieART`Private`roots Sqrt[2/Max[
             Map[Dot[#, #]& , LieART`Private`roots]]], 
         LieART`PositiveRoots[LieART`G2] = {
           LieART`RootOmega[LieART`G2][0, 1], 
           LieART`RootOmega[LieART`G2][3, -1], 
           LieART`RootOmega[LieART`G2][1, 0], 
           LieART`RootOmega[LieART`G2][-1, 1], 
           LieART`RootOmega[LieART`G2][-3, 2], 
           LieART`RootOmega[LieART`G2][2, -1]}, LieART`PositiveRoots[
           LieART`Algebra[LieART`A][2]] = {
           LieART`RootOmega[LieART`A][1, 1], 
           LieART`RootOmega[LieART`A][-1, 2], 
           LieART`RootOmega[LieART`A][2, -1]}, LieART`PositiveRoots[
           LieART`Algebra[C][3]] = {
           LieART`RootOmega[C][2, 0, 0], 
           LieART`RootOmega[C][0, 1, 0], 
           LieART`RootOmega[C][-2, 2, 0], 
           LieART`RootOmega[C][1, -1, 1], 
           LieART`RootOmega[C][-1, 0, 1], 
           LieART`RootOmega[C][1, 1, -1], 
           LieART`RootOmega[C][-1, 2, -1], 
           LieART`RootOmega[C][0, -2, 2], 
           LieART`RootOmega[C][2, -1, 0]}, LieART`PositiveRoots[
           PatternTest[
            Pattern[LieART`Private`algebra, 
             Blank[]], LieART`SimpleLieAlgebraQ]] := (
          LieART`PositiveRoots[LieART`Private`algebra] = Take[
            LieART`RootSystem[LieART`Private`algebra], 
            LieART`NumberOfPositiveRoots[LieART`Private`algebra]]), 
         TagSet[LieART`PositiveRoots, 
          MessageName[LieART`PositiveRoots, "usage"], 
          "PositiveRoots[algebra] gives only the positive roots of the root \
system of algebra."], LieART`RootSystem[LieART`G2] = {
           LieART`RootOmega[LieART`G2][0, 1], 
           LieART`RootOmega[LieART`G2][3, -1], 
           LieART`RootOmega[LieART`G2][1, 0], 
           LieART`RootOmega[LieART`G2][-1, 1], 
           LieART`RootOmega[LieART`G2][-3, 2], 
           LieART`RootOmega[LieART`G2][2, -1], 
           LieART`RootOmega[LieART`G2][0, 0], 
           LieART`RootOmega[LieART`G2][0, 0], 
           LieART`RootOmega[LieART`G2][-2, 1], 
           LieART`RootOmega[LieART`G2][3, -2], 
           LieART`RootOmega[LieART`G2][1, -1], 
           LieART`RootOmega[LieART`G2][-1, 0], 
           LieART`RootOmega[LieART`G2][-3, 1], 
           LieART`RootOmega[LieART`G2][0, -1]}, LieART`RootSystem[
           LieART`Algebra[LieART`A][2]] = {
           LieART`RootOmega[LieART`A][1, 1], 
           LieART`RootOmega[LieART`A][-1, 2], 
           LieART`RootOmega[LieART`A][2, -1], 
           LieART`RootOmega[LieART`A][0, 0], 
           LieART`RootOmega[LieART`A][0, 0], 
           LieART`RootOmega[LieART`A][-2, 1], 
           LieART`RootOmega[LieART`A][1, -2], 
           LieART`RootOmega[LieART`A][-1, -1]}, LieART`RootSystem[
           LieART`Algebra[C][3]] = {
           LieART`RootOmega[C][2, 0, 0], 
           LieART`RootOmega[C][0, 1, 0], 
           LieART`RootOmega[C][-2, 2, 0], 
           LieART`RootOmega[C][1, -1, 1], 
           LieART`RootOmega[C][-1, 0, 1], 
           LieART`RootOmega[C][1, 1, -1], 
           LieART`RootOmega[C][-1, 2, -1], 
           LieART`RootOmega[C][0, -2, 2], 
           LieART`RootOmega[C][2, -1, 0], 
           LieART`RootOmega[C][0, 0, 0], 
           LieART`RootOmega[C][0, 0, 0], 
           LieART`RootOmega[C][0, 0, 0], 
           LieART`RootOmega[C][-2, 1, 0], 
           LieART`RootOmega[C][0, 2, -2], 
           LieART`RootOmega[C][1, -2, 1], 
           LieART`RootOmega[C][-1, -1, 1], 
           LieART`RootOmega[C][1, 0, -1], 
           LieART`RootOmega[C][-1, 1, -1], 
           LieART`RootOmega[C][2, -2, 0], 
           LieART`RootOmega[C][0, -1, 0], 
           LieART`RootOmega[C][-2, 0, 0]}, LieART`RootSystem[
           PatternTest[
            Pattern[LieART`Private`algebra, 
             Blank[]], LieART`SimpleLieAlgebraQ], 
           Pattern[LieART`Private`opts, 
            OptionsPattern[]]] := (
          LieART`RootSystem[LieART`Private`algebra, LieART`Private`opts] = If[
            OptionValue[LieART`SpindleShape], 
            Column[
             Map[Row[#, " "]& , 
              GatherBy[
               LieART`RootSystem[LieART`Private`algebra], -
               LieART`RootLevel[#]& ]], Alignment -> {Center}], 
            (SortBy[#, -LieART`RootLevel[#]& ]& )[
             Join[
              Map[LieART`OmegaBasis, 
               Apply[Union, 
                Map[LieART`Orbit, 
                 LieART`OrthogonalSimpleRoots[LieART`Private`algebra]]]], 
              LieART`ZeroRoots[LieART`Private`algebra]]]]), 
         Options[LieART`RootSystem] = {LieART`SpindleShape -> False}, 
         TagSet[LieART`RootSystem, 
          MessageName[LieART`RootSystem, "usage"], 
          "RootSystem[algebra] generates the complete root system of \
algebra."], 
         TagSet[LieART`SpindleShape, 
          MessageName[LieART`SpindleShape, "usage"], "SpindleShape  "], 
         LieART`RootLevel[
           Pattern[LieART`Private`root, 
            LieART`RootOmega[
             Blank[]][
             Pattern[LieART`Private`label, 
              BlankSequence[]]]]] := (1 Dot[
             LieART`Private`Rbar[
              LieART`Algebra[LieART`Private`root]], {LieART`Private`label}])/
          2, 
         TagSet[LieART`RootLevel, 
          MessageName[LieART`RootLevel, "usage"], 
          "RootLevel[root] gives the level of the root in its roots system."],
          LieART`Private`Rbar[LieART`G2] = {6, 10}, LieART`Private`Rbar[
           LieART`Algebra[LieART`A][2]] = {2, 2}, LieART`Private`Rbar[
           LieART`Algebra[C][3]] = {5, 8, 9}, LieART`Private`Rbar[
           Pattern[LieART`Private`algebra, 
            Blank[]]] := (LieART`Private`Rbar[LieART`Private`algebra] = 
          2 Map[Total, 
             LieART`Private`InverseCartanMatrix[LieART`Private`algebra]]), 
         Attributes[LieART`OmegaBasis] = {Listable}, LieART`OmegaBasis[
           Pattern[LieART`Private`weightOrRoot, 
            Alternatives[LieART`Weight, LieART`RootOmega][
             Blank[]][
             BlankSequence[]]]] := LieART`Private`weightOrRoot, 
         LieART`OmegaBasis[
           Pattern[LieART`Private`weightOrRoot, 
            Pattern[LieART`Private`type, 
             Alternatives[LieART`WeightAlpha, LieART`RootAlpha]][
             Pattern[LieART`Private`algebraClass, 
              Blank[]]][
             Pattern[LieART`Private`label, 
              BlankSequence[]]]]] := Apply[
           LieART`Private`HeadOmega[LieART`Private`type][
           LieART`Private`algebraClass], 
           Dot[{LieART`Private`label}, 
            LieART`CartanMatrix[
             LieART`Algebra[LieART`Private`weightOrRoot]]]], LieART`OmegaBasis[
           Pattern[LieART`Private`weightOrRoot, 
            Pattern[LieART`Private`type, 
             Alternatives[LieART`WeightOrthogonal, LieART`RootOrthogonal]][
             Pattern[LieART`Private`algebraClass, 
              Alternatives[
              LieART`E6, LieART`E7, LieART`E8, LieART`F4, LieART`G2]]][
             Pattern[LieART`Private`m, 
              BlankSequence[]]]]] := Apply[
           LieART`Private`HeadOmega[LieART`Private`type][
           LieART`Private`algebraClass], 
           Dot[{LieART`Private`m}, 
            LieART`Private`InverseOmegaMatrix[LieART`Private`algebraClass]]], 
         LieART`OmegaBasis[
           Pattern[LieART`Private`weightOrRoot, 
            Pattern[LieART`Private`type, 
             Alternatives[LieART`WeightOrthogonal, LieART`RootOrthogonal]][
             Pattern[LieART`Private`algebraClass, 
              Blank[]]][
             Pattern[LieART`Private`m, 
              BlankSequence[]]]]] := Apply[
           LieART`Private`HeadOmega[LieART`Private`type][
           LieART`Private`algebraClass], 
           Dot[{LieART`Private`m}, 
            LieART`Private`InverseOmegaMatrix[
             LieART`Algebra[LieART`Private`algebraClass][
              LieART`Private`StandardBasisN[LieART`Private`algebraClass, 
               Length[{LieART`Private`m}]]]]]], 
         TagSet[LieART`OmegaBasis, 
          MessageName[LieART`OmegaBasis, "usage"], 
          "OmegaBasis[weightOrRoot] transforms weightOrRoot into the omega \
basis."], LieART`Private`HeadOmega[LieART`RootAlpha] = LieART`RootOmega, 
         LieART`Private`HeadOmega[LieART`RootOrthogonal] = LieART`RootOmega, 
         LieART`Private`HeadOmega[LieART`WeightAlpha] = LieART`Weight, 
         LieART`Private`HeadOmega[LieART`WeightOrthogonal] = LieART`Weight, 
         LieART`Private`InverseOmegaMatrix[
          LieART`G2] = {{1, (-2)/3}, {-1, 1/3}, {0, 1/3}}, 
         LieART`Private`InverseOmegaMatrix[
           LieART`Algebra[LieART`A][2]] = {{1, 0}, {-1, 1}, {0, -1}}, 
         LieART`Private`InverseOmegaMatrix[
           LieART`Algebra[C][3]] = {{1, 0, 0}, {-1, 1, 0}, {0, -1, 1}}, 
         LieART`Private`InverseOmegaMatrix[
           PatternTest[
            Pattern[LieART`Private`algebra, 
             Blank[]], LieART`SimpleLieAlgebraQ]] := (
          LieART`Private`InverseOmegaMatrix[LieART`Private`algebra] = 
          Transpose[
            LieART`Private`ToMatrix[
             LieART`OrthogonalSimpleCoRoots[LieART`Private`algebra]]]), 
         LieART`Private`ToMatrix[
           Pattern[LieART`Private`expr, 
            Blank[]]] := Apply[List, LieART`Private`expr, {1}], 
         LieART`OrthogonalSimpleCoRoots[LieART`G2] = {
           LieART`RootOrthogonal[LieART`G2][1, -1, 0], 
           LieART`RootOrthogonal[LieART`G2][(-2)/3, 1/3, 1/3]}, 
         LieART`OrthogonalSimpleCoRoots[
           LieART`Algebra[LieART`A][2]] = {
           LieART`RootOrthogonal[LieART`A][1, -1, 0], 
           LieART`RootOrthogonal[LieART`A][0, 1, -1]}, 
         LieART`OrthogonalSimpleCoRoots[
           LieART`Algebra[C][3]] = {
           LieART`RootOrthogonal[C][1, -1, 0], 
           LieART`RootOrthogonal[C][0, 1, -1], 
           LieART`RootOrthogonal[C][0, 0, 1]}, LieART`OrthogonalSimpleCoRoots[
           PatternTest[
            Pattern[LieART`Private`algebra, 
             Blank[]], LieART`SimpleLieAlgebraQ]] := (
          LieART`OrthogonalSimpleCoRoots[LieART`Private`algebra] = 
          Map[(2 #)/LieART`ScalarProduct[#, #]& , 
            LieART`OrthogonalSimpleRoots[LieART`Private`algebra]]), 
         TagSet[LieART`OrthogonalSimpleCoRoots, 
          MessageName[LieART`OrthogonalSimpleCoRoots, "usage"], 
          "OrthogonalSimpleCoRoots gives the simple coroots of algebra in the \
orthogonal basis."], LieART`Private`StandardBasisN[LieART`A, 
           Pattern[LieART`Private`m, 
            Blank[]]] := LieART`Private`m - 1, LieART`Private`StandardBasisN[
           Alternatives[LieART`B, C, D], 
           Pattern[LieART`Private`m, 
            Blank[]]] := LieART`Private`m, LieART`Orbit[
           LieART`RootOrthogonal[LieART`A][1, 0, -1]] = {
           LieART`RootOrthogonal[LieART`A][-1, 0, 1], 
           LieART`RootOrthogonal[LieART`A][-1, 1, 0], 
           LieART`RootOrthogonal[LieART`A][0, -1, 1], 
           LieART`RootOrthogonal[LieART`A][0, 1, -1], 
           LieART`RootOrthogonal[LieART`A][1, -1, 0], 
           LieART`RootOrthogonal[LieART`A][1, 0, -1]}, LieART`Orbit[
           LieART`RootOrthogonal[C][1, 1, 0]] = {
           LieART`RootOrthogonal[C][-1, -1, 0], 
           LieART`RootOrthogonal[C][-1, 0, -1], 
           LieART`RootOrthogonal[C][-1, 0, 1], 
           LieART`RootOrthogonal[C][-1, 1, 0], 
           LieART`RootOrthogonal[C][0, -1, -1], 
           LieART`RootOrthogonal[C][0, -1, 1], 
           LieART`RootOrthogonal[C][0, 1, -1], 
           LieART`RootOrthogonal[C][0, 1, 1], 
           LieART`RootOrthogonal[C][1, -1, 0], 
           LieART`RootOrthogonal[C][1, 0, -1], 
           LieART`RootOrthogonal[C][1, 0, 1], 
           LieART`RootOrthogonal[C][1, 1, 0]}, LieART`Orbit[
           LieART`RootOrthogonal[C][2, 0, 0]] = {
           LieART`RootOrthogonal[C][-2, 0, 0], 
           LieART`RootOrthogonal[C][0, -2, 0], 
           LieART`RootOrthogonal[C][0, 0, -2], 
           LieART`RootOrthogonal[C][0, 0, 2], 
           LieART`RootOrthogonal[C][0, 2, 0], 
           LieART`RootOrthogonal[C][2, 0, 0]}, LieART`Orbit[
           LieART`RootOrthogonal[LieART`G2][-1, -1, 2]] = {
           LieART`RootOrthogonal[LieART`G2][-2, 1, 1], 
           LieART`RootOrthogonal[LieART`G2][-1, -1, 2], 
           LieART`RootOrthogonal[LieART`G2][-1, 2, -1], 
           LieART`RootOrthogonal[LieART`G2][1, -2, 1], 
           LieART`RootOrthogonal[LieART`G2][1, 1, -2], 
           LieART`RootOrthogonal[LieART`G2][2, -1, -1]}, LieART`Orbit[
           LieART`RootOrthogonal[LieART`G2][0, -1, 1]] = {
           LieART`RootOrthogonal[LieART`G2][-1, 0, 1], 
           LieART`RootOrthogonal[LieART`G2][-1, 1, 0], 
           LieART`RootOrthogonal[LieART`G2][0, -1, 1], 
           LieART`RootOrthogonal[LieART`G2][0, 1, -1], 
           LieART`RootOrthogonal[LieART`G2][1, -1, 0], 
           LieART`RootOrthogonal[LieART`G2][1, 0, -1]}, LieART`Orbit[
           Pattern[LieART`Private`weightOrRoot, 
            Alternatives[
            LieART`Weight, LieART`RootOmega, LieART`WeightOrthogonal, 
             LieART`RootOrthogonal][
             Blank[]][
             BlankSequence[]]], 
           Pattern[LieART`Private`simpleroots, 
            Blank[]]] := Map[LieART`OmegaBasis, 
           LieART`Private`PartialOrbit[
            LieART`OrthogonalBasis[LieART`Private`weightOrRoot], 
            Map[LieART`OrthogonalBasis, LieART`Private`simpleroots]]], 
         LieART`Orbit[
           Pattern[LieART`Private`weight, 
            PatternTest[
             Pattern[LieART`Private`type, 
              Alternatives[LieART`WeightOrthogonal, LieART`RootOrthogonal]][
              Blank[]][
              BlankSequence[]], LieART`DominantQ]]] := (
          LieART`Orbit[LieART`Private`weight] = SortBy[
            LieART`Private`FullOrbit[LieART`Private`weight], 
            LieART`WeightLevel[#, LieART`Private`weight]& ]), LieART`Orbit[
           Pattern[LieART`Private`weight, 
            PatternTest[
             Alternatives[LieART`Weight, LieART`RootOmega][
              Blank[]][
              BlankSequence[]], LieART`DominantQ]]] := (
          LieART`Orbit[LieART`Private`weight] = SortBy[
            Map[LieART`OmegaBasis, 
             LieART`Private`FullOrbit[
              LieART`OrthogonalBasis[LieART`Private`weight]]], 
            LieART`WeightLevel[#, LieART`Private`weight]& ]), LieART`Orbit[
           Pattern[LieART`Private`weightOrRoot, 
            Alternatives[
            LieART`Weight, LieART`RootOmega, LieART`WeightOrthogonal, 
             LieART`RootOrthogonal][
             Pattern[LieART`Private`algebraClass, 
              Blank[]]][
             BlankSequence[]]]] := 
         Module[{LieART`Private`dominantWeightOrRoot, 
            LieART`Private`weightOrRootBasis = 
            LieART`Private`Basis[LieART`Private`weightOrRoot]}, 
           If[
            FreeQ[
             DownValues[LieART`Orbit], LieART`Private`weightOrRoot], 
            LieART`Private`dominantWeightOrRoot = LieART`Private`Seek[
               If[LieART`Private`algebraClass === LieART`A, 
                Map[LieART`Private`weightOrRootBasis, 
                 LieART`Private`FullOrbit[
                  LieART`OrthogonalBasis[LieART`Private`weightOrRoot]]], 
                NestWhile[LieART`Reflect, {
                  LieART`OrthogonalBasis[LieART`Private`weightOrRoot]}, 
                 FreeQ[#, 
                  PatternTest[
                   Blank[], LieART`DominantQ]]& ]], LieART`DominantQ]; 
            LieART`Orbit[
              LieART`Private`weightOrRootBasis[
              LieART`Private`dominantWeightOrRoot]], 
            Part[
             Select[
              DownValues[LieART`Orbit], Not[
               FreeQ[#, LieART`Private`weightOrRoot]]& ], 1, 1, 1]]], 
         LieART`Private`PartialOrbit[
           Pattern[LieART`Private`weightOrRoot, 
            Blank[]], 
           Pattern[LieART`Private`simpleroots, 
            Blank[]]] := 
         Nest[LieART`Reflect[#, LieART`Private`simpleroots]& , {
           LieART`Private`weightOrRoot}, 
           LieART`NumberOfPositiveRoots[
            LieART`Algebra[LieART`Private`weightOrRoot]]], LieART`Reflect[
           LieART`RootOrthogonal[C][-2, 0, 0]] = {
           LieART`RootOrthogonal[C][0, -2, 0], 
           LieART`RootOrthogonal[C][-2, 0, 0], 
           LieART`RootOrthogonal[C][-2, 0, 0]}, LieART`Reflect[
           LieART`RootOrthogonal[C][-1, -1, 0]] = {
           LieART`RootOrthogonal[C][-1, -1, 0], 
           LieART`RootOrthogonal[C][-1, 0, -1], 
           LieART`RootOrthogonal[C][-1, -1, 0]}, LieART`Reflect[
           LieART`RootOrthogonal[C][-1, 0, -1]] = {
           LieART`RootOrthogonal[C][0, -1, -1], 
           LieART`RootOrthogonal[C][-1, -1, 0], 
           LieART`RootOrthogonal[C][-1, 0, 1]}, LieART`Reflect[
           LieART`RootOrthogonal[C][-1, 0, 1]] = {
           LieART`RootOrthogonal[C][0, -1, 1], 
           LieART`RootOrthogonal[C][-1, 1, 0], 
           LieART`RootOrthogonal[C][-1, 0, -1]}, LieART`Reflect[
           LieART`RootOrthogonal[C][-1, 1, 0]] = {
           LieART`RootOrthogonal[C][1, -1, 0], 
           LieART`RootOrthogonal[C][-1, 0, 1], 
           LieART`RootOrthogonal[C][-1, 1, 0]}, LieART`Reflect[
           LieART`RootOrthogonal[C][0, -2, 0]] = {
           LieART`RootOrthogonal[C][-2, 0, 0], 
           LieART`RootOrthogonal[C][0, 0, -2], 
           LieART`RootOrthogonal[C][0, -2, 0]}, LieART`Reflect[
           LieART`RootOrthogonal[C][0, -1, -1]] = {
           LieART`RootOrthogonal[C][-1, 0, -1], 
           LieART`RootOrthogonal[C][0, -1, -1], 
           LieART`RootOrthogonal[C][0, -1, 1]}, LieART`Reflect[
           LieART`RootOrthogonal[C][0, -1, 1]] = {
           LieART`RootOrthogonal[C][-1, 0, 1], 
           LieART`RootOrthogonal[C][0, 1, -1], 
           LieART`RootOrthogonal[C][0, -1, -1]}, LieART`Reflect[
           LieART`RootOrthogonal[C][0, 0, -2]] = {
           LieART`RootOrthogonal[C][0, 0, -2], 
           LieART`RootOrthogonal[C][0, -2, 0], 
           LieART`RootOrthogonal[C][0, 0, 2]}, LieART`Reflect[
           LieART`RootOrthogonal[C][0, 0, 2]] = {
           LieART`RootOrthogonal[C][0, 0, 2], 
           LieART`RootOrthogonal[C][0, 2, 0], 
           LieART`RootOrthogonal[C][0, 0, -2]}, LieART`Reflect[
           LieART`RootOrthogonal[C][0, 1, -1]] = {
           LieART`RootOrthogonal[C][1, 0, -1], 
           LieART`RootOrthogonal[C][0, -1, 1], 
           LieART`RootOrthogonal[C][0, 1, 1]}, LieART`Reflect[
           LieART`RootOrthogonal[C][0, 1, 1]] = {
           LieART`RootOrthogonal[C][1, 0, 1], 
           LieART`RootOrthogonal[C][0, 1, 1], 
           LieART`RootOrthogonal[C][0, 1, -1]}, LieART`Reflect[
           LieART`RootOrthogonal[C][0, 2, 0]] = {
           LieART`RootOrthogonal[C][2, 0, 0], 
           LieART`RootOrthogonal[C][0, 0, 2], 
           LieART`RootOrthogonal[C][0, 2, 0]}, LieART`Reflect[
           LieART`RootOrthogonal[C][1, -1, 0]] = {
           LieART`RootOrthogonal[C][-1, 1, 0], 
           LieART`RootOrthogonal[C][1, 0, -1], 
           LieART`RootOrthogonal[C][1, -1, 0]}, LieART`Reflect[
           LieART`RootOrthogonal[C][1, 0, -1]] = {
           LieART`RootOrthogonal[C][0, 1, -1], 
           LieART`RootOrthogonal[C][1, -1, 0], 
           LieART`RootOrthogonal[C][1, 0, 1]}, LieART`Reflect[
           LieART`RootOrthogonal[C][1, 0, 1]] = {
           LieART`RootOrthogonal[C][0, 1, 1], 
           LieART`RootOrthogonal[C][1, 1, 0], 
           LieART`RootOrthogonal[C][1, 0, -1]}, LieART`Reflect[
           LieART`RootOrthogonal[C][1, 1, 0]] = {
           LieART`RootOrthogonal[C][1, 1, 0], 
           LieART`RootOrthogonal[C][1, 0, 1], 
           LieART`RootOrthogonal[C][1, 1, 0]}, LieART`Reflect[
           LieART`RootOrthogonal[C][2, 0, 0]] = {
           LieART`RootOrthogonal[C][0, 2, 0], 
           LieART`RootOrthogonal[C][2, 0, 0], 
           LieART`RootOrthogonal[C][2, 0, 0]}, LieART`Reflect[
           LieART`RootOrthogonal[LieART`G2][-2, 1, 1]] = {
           LieART`RootOrthogonal[LieART`G2][1, -2, 1], 
           LieART`RootOrthogonal[LieART`G2][2, -1, -1]}, LieART`Reflect[
           LieART`RootOrthogonal[LieART`G2][-1, -1, 2]] = {
           LieART`RootOrthogonal[LieART`G2][-1, -1, 2], 
           LieART`RootOrthogonal[LieART`G2][1, -2, 1]}, LieART`Reflect[
           LieART`RootOrthogonal[LieART`G2][-1, 0, 1]] = {
           LieART`RootOrthogonal[LieART`G2][0, -1, 1], 
           LieART`RootOrthogonal[LieART`G2][1, -1, 0]}, LieART`Reflect[
           LieART`RootOrthogonal[LieART`G2][-1, 1, 0]] = {
           LieART`RootOrthogonal[LieART`G2][1, -1, 0], 
           LieART`RootOrthogonal[LieART`G2][1, 0, -1]}, LieART`Reflect[
           LieART`RootOrthogonal[LieART`G2][-1, 2, -1]] = {
           LieART`RootOrthogonal[LieART`G2][2, -1, -1], 
           LieART`RootOrthogonal[LieART`G2][1, 1, -2]}, LieART`Reflect[
           LieART`RootOrthogonal[LieART`G2][0, -1, 1]] = {
           LieART`RootOrthogonal[LieART`G2][-1, 0, 1], 
           LieART`RootOrthogonal[LieART`G2][0, -1, 1]}, LieART`Reflect[
           LieART`RootOrthogonal[LieART`G2][0, 1, -1]] = {
           LieART`RootOrthogonal[LieART`G2][1, 0, -1], 
           LieART`RootOrthogonal[LieART`G2][0, 1, -1]}, LieART`Reflect[
           LieART`RootOrthogonal[LieART`G2][1, -2, 1]] = {
           LieART`RootOrthogonal[LieART`G2][-2, 1, 1], 
           LieART`RootOrthogonal[LieART`G2][-1, -1, 2]}, LieART`Reflect[
           LieART`RootOrthogonal[LieART`G2][1, -1, 0]] = {
           LieART`RootOrthogonal[LieART`G2][-1, 1, 0], 
           LieART`RootOrthogonal[LieART`G2][-1, 0, 1]}, LieART`Reflect[
           LieART`RootOrthogonal[LieART`G2][1, 0, -1]] = {
           LieART`RootOrthogonal[LieART`G2][0, 1, -1], 
           LieART`RootOrthogonal[LieART`G2][-1, 1, 0]}, LieART`Reflect[
           LieART`RootOrthogonal[LieART`G2][1, 1, -2]] = {
           LieART`RootOrthogonal[LieART`G2][1, 1, -2], 
           LieART`RootOrthogonal[LieART`G2][-1, 2, -1]}, LieART`Reflect[
           LieART`RootOrthogonal[LieART`G2][2, -1, -1]] = {
           LieART`RootOrthogonal[LieART`G2][-1, 2, -1], 
           LieART`RootOrthogonal[LieART`G2][-2, 1, 1]}, LieART`Reflect[
           Pattern[LieART`Private`weightOrRoot, 
            Alternatives[
            LieART`Weight, LieART`RootOmega, LieART`WeightAlpha, 
             LieART`RootAlpha, LieART`WeightOrthogonal, LieART`RootOrthogonal][
             Blank[]][
             BlankSequence[]]], 
           Pattern[LieART`Private`simpleroots, 
            Blank[]]] := (
          LieART`Reflect[
           LieART`Private`weightOrRoot, LieART`Private`simpleroots] = Map[
            Function[
            LieART`Private`root, 
             LieART`Private`weightOrRoot - ((2 
               LieART`ScalarProduct[
                LieART`Private`weightOrRoot, LieART`Private`root]) 
              LieART`Private`root)/LieART`ScalarProduct[
             LieART`Private`root, LieART`Private`root]], 
            LieART`Private`simpleroots]), LieART`Reflect[
           Pattern[LieART`Private`weightOrRoot, 
            Alternatives[LieART`WeightOrthogonal, LieART`RootOrthogonal][
             Blank[]][
             BlankSequence[]]]] := (
          LieART`Reflect[LieART`Private`weightOrRoot] = Apply[
            Head[LieART`Private`weightOrRoot], 
            Map[Dot[#, 
              Apply[List, LieART`Private`weightOrRoot]]& , 
             LieART`ReflectionMatrices[
              LieART`Algebra[LieART`Private`weightOrRoot]]], {1}]), 
         LieART`Reflect[
           Pattern[LieART`Private`weights, 
            Blank[List]], 
           Pattern[LieART`Private`simpleroots, 
            Blank[]]] := DeleteDuplicates[
           Join[LieART`Private`weights, 
            Flatten[
             Map[
             LieART`Reflect[#, LieART`Private`simpleroots]& , 
              LieART`Private`weights], 1]]], LieART`Reflect[
           Pattern[LieART`Private`weights, 
            Blank[List]]] := DeleteDuplicates[
           Join[LieART`Private`weights, 
            Flatten[
             Map[LieART`Reflect, LieART`Private`weights], 1]]], 
         TagSet[LieART`Reflect, 
          MessageName[LieART`Reflect, "usage"], "Reflect  "], 
         LieART`ReflectionMatrices[
          LieART`G2] = {{{0, 1, 0}, {1, 0, 0}, {0, 0, 
           1}}, {{(-1)/3, 2/3, 2/3}, {2/3, 2/3, (-1)/3}, {2/3, (-1)/3, 2/3}}},
          LieART`ReflectionMatrices[
           LieART`Algebra[C][3]] = {{{0, 1, 0}, {1, 0, 0}, {0, 0, 1}}, {{1, 0,
           0}, {0, 0, 1}, {0, 1, 0}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, -1}}}, 
         LieART`ReflectionMatrices[
           PatternTest[
            Pattern[LieART`Private`algebra, 
             Blank[]], LieART`SimpleLieAlgebraQ]] := (
          LieART`ReflectionMatrices[LieART`Private`algebra] = 
          Map[ReflectionMatrix, 
            Apply[List, 
             LieART`OrthogonalSimpleRoots[LieART`Private`algebra], {1}]]), 
         TagSet[LieART`ReflectionMatrices, 
          MessageName[LieART`ReflectionMatrices, "usage"], 
          "ReflectionMatrices  "], LieART`NumberOfPositiveRoots[LieART`E6] = 
         36, LieART`NumberOfPositiveRoots[LieART`E7] = 63, 
         LieART`NumberOfPositiveRoots[LieART`E8] = 120, 
         LieART`NumberOfPositiveRoots[LieART`F4] = 24, 
         LieART`NumberOfPositiveRoots[LieART`G2] = 6, 
         LieART`NumberOfPositiveRoots[
           LieART`Algebra[LieART`A][2]] = 3, LieART`NumberOfPositiveRoots[
           LieART`Algebra[LieART`A][
            Pattern[LieART`Private`n, 
             Blank[]]]] := (LieART`NumberOfPositiveRoots[
            LieART`Algebra[LieART`A][LieART`Private`n]] = (
            LieART`Private`n (LieART`Private`n + 1))/2), 
         LieART`NumberOfPositiveRoots[
           LieART`Algebra[
            Alternatives[LieART`B, C]][3]] = 9, LieART`NumberOfPositiveRoots[
           LieART`Algebra[
            Alternatives[LieART`B, C]][
            Pattern[LieART`Private`n, 
             Blank[]]]] := (LieART`NumberOfPositiveRoots[
            LieART`Algebra[
             Alternatives[LieART`B, C]][LieART`Private`n]] = 
          LieART`Private`n^2), LieART`NumberOfPositiveRoots[
           LieART`Algebra[D][
            Pattern[LieART`Private`n, 
             Blank[]]]] := (LieART`NumberOfPositiveRoots[
            LieART`Algebra[D][LieART`Private`n]] = 
          LieART`Private`n (LieART`Private`n - 1)), 
         TagSet[LieART`NumberOfPositiveRoots, 
          MessageName[LieART`NumberOfPositiveRoots, "usage"], 
          "NumberOfPositiveRoots[algebra] gives the number of positive roots \
of algebra."], Attributes[LieART`OrthogonalBasis] = {Listable}, 
         LieART`OrthogonalBasis[
           Pattern[LieART`Private`weightOrRoot, 
            Alternatives[LieART`WeightOrthogonal, LieART`RootOrthogonal][
             Blank[]][
             BlankSequence[]]]] := LieART`Private`weightOrRoot, 
         LieART`OrthogonalBasis[
           Pattern[LieART`Private`weightOrRoot, 
            Pattern[LieART`Private`type, 
             Alternatives[LieART`Weight, LieART`RootOmega]][
             Pattern[LieART`Private`algebraClass, 
              Blank[]]][
             Pattern[LieART`Private`label, 
              BlankSequence[]]]]] := Apply[
           LieART`Private`HeadOrthogonal[LieART`Private`type][
           LieART`Private`algebraClass], 
           Dot[{LieART`Private`label}, 
            LieART`OmegaMatrix[
             LieART`Algebra[LieART`Private`weightOrRoot]]]], 
         LieART`OrthogonalBasis[
           Pattern[LieART`Private`weightOrRoot, 
            Pattern[LieART`Private`type, 
             Alternatives[LieART`WeightAlpha, LieART`RootAlpha]][
             Pattern[LieART`Private`algebraClass, 
              Blank[]]][
             Pattern[LieART`Private`label, 
              BlankSequence[]]]]] := LieART`OrthogonalBasis[
           LieART`OmegaBasis[LieART`Private`weightOrRoot]], 
         TagSet[LieART`OrthogonalBasis, 
          MessageName[LieART`OrthogonalBasis, "usage"], 
          "OrthogonalBasis[weightOrRoot] transforms weightOrRoot into the \
orthogonal basis."], LieART`Private`HeadOrthogonal[LieART`RootOmega] = 
         LieART`RootOrthogonal, LieART`Private`HeadOrthogonal[LieART`Weight] = 
         LieART`WeightOrthogonal, LieART`OmegaMatrix[
           LieART`Algebra[C][3]] = {{1, 0, 0}, {1, 1, 0}, {1, 1, 1}}, 
         LieART`OmegaMatrix[
           PatternTest[
            Pattern[LieART`Private`algebra, 
             Blank[]], LieART`SimpleLieAlgebraQ]] := (
          LieART`OmegaMatrix[LieART`Private`algebra] = Transpose[
            PseudoInverse[
             LieART`Private`ToMatrix[
              LieART`OrthogonalSimpleCoRoots[LieART`Private`algebra]]]]), 
         TagSet[LieART`OmegaMatrix, 
          MessageName[LieART`OmegaMatrix, "usage"], "OmegaMatrix  "], 
         LieART`DominantQ[
           Alternatives[LieART`Weight, LieART`RootOmega][
            Blank[]][
            Pattern[LieART`Private`label, 
             BlankSequence[]]]] := 
         LieART`Private`PositiveQ[{LieART`Private`label}], LieART`DominantQ[
           Pattern[LieART`Private`weightOrRoot, 
            Alternatives[
            LieART`WeightOrthogonal, LieART`RootOrthogonal, 
             LieART`WeightAlpha, LieART`RootAlpha][
             Blank[]][
             BlankSequence[]]]] := LieART`DominantQ[
           LieART`OmegaBasis[LieART`Private`weightOrRoot]], 
         TagSet[LieART`DominantQ, 
          MessageName[LieART`DominantQ, "usage"], "DominantQ  "], 
         LieART`Private`PositiveQ[
           Pattern[LieART`Private`list, 
            Blank[]]] := Apply[And, 
           NonNegative[
            Apply[List, LieART`Private`list]]], LieART`Private`FullOrbit[
           Pattern[LieART`Private`type, 
            Alternatives[LieART`WeightOrthogonal, LieART`RootOrthogonal]][
           LieART`A][
            Pattern[LieART`Private`label, 
             BlankSequence[]]]] := Apply[
           LieART`Private`type[LieART`A], 
           Permutations[{LieART`Private`label}], {1}], 
         LieART`Private`FullOrbit[
           Pattern[LieART`Private`weightOrRoot, 
            Blank[]]] := Nest[LieART`Reflect, {LieART`Private`weightOrRoot}, 
           LieART`NumberOfPositiveRoots[
            LieART`Algebra[LieART`Private`weightOrRoot]]], LieART`WeightLevel[
           Pattern[LieART`Private`weight, 
            Alternatives[
            LieART`Weight, LieART`WeightAlpha, LieART`WeightOrthogonal][
             Pattern[LieART`Private`algebraClass, 
              Blank[]]][
             BlankSequence[]]], 
           Pattern[LieART`Private`irrepOrWeight, 
            Alternatives[
            LieART`Irrep, LieART`Weight, LieART`WeightAlpha, 
             LieART`WeightOrthogonal][
             Pattern[LieART`Private`algebraClass, 
              Blank[]]][
             BlankSequence[]]]] := Apply[Plus, LieART`AlphaBasis[
             LieART`HighestWeight[LieART`Private`irrepOrWeight]] - 
           LieART`AlphaBasis[LieART`Private`weight]], 
         Attributes[LieART`AlphaBasis] = {Listable}, LieART`AlphaBasis[
           Pattern[LieART`Private`weightOrRoot, 
            Alternatives[LieART`WeightAlpha, LieART`RootAlpha][
             Blank[]][
             BlankSequence[]]]] := LieART`Private`weightOrRoot, 
         LieART`AlphaBasis[
           Pattern[LieART`Private`weightOrRoot, 
            Pattern[LieART`Private`type, 
             Alternatives[LieART`Weight, LieART`RootOmega]][
             Pattern[LieART`Private`algebraClass, 
              Blank[]]][
             Pattern[LieART`Private`label, 
              BlankSequence[]]]]] := Apply[
           LieART`Private`HeadAlpha[LieART`Private`type][
           LieART`Private`algebraClass], 
           Dot[{LieART`Private`label}, 
            LieART`Private`InverseCartanMatrix[
             LieART`Algebra[LieART`Private`weightOrRoot]]]], LieART`AlphaBasis[
           Pattern[LieART`Private`weightOrRoot, 
            Pattern[LieART`Private`type, 
             Alternatives[LieART`WeightOrthogonal, LieART`RootOrthogonal]][
             Pattern[LieART`Private`algebraClass, 
              Blank[]]][
             Pattern[LieART`Private`m, 
              BlankSequence[]]]]] := LieART`AlphaBasis[
           LieART`OmegaBasis[LieART`Private`weightOrRoot]], 
         TagSet[LieART`AlphaBasis, 
          MessageName[LieART`AlphaBasis, "usage"], 
          "AlphaBasis[weightOrRoot] transforms weightOrRoot into the alpha \
basis.  "], LieART`Private`HeadAlpha[LieART`RootOmega] = LieART`RootAlpha, 
         LieART`Private`HeadAlpha[LieART`Weight] = LieART`WeightAlpha, 
         LieART`HighestWeight[
           Pattern[LieART`Private`irrep, 
            PatternTest[
             LieART`Irrep[
              Pattern[LieART`Private`algebraClass, 
               Blank[]]][
              BlankSequence[]], LieART`IrrepQ]]] := Apply[
           LieART`Weight[LieART`Private`algebraClass], LieART`Private`irrep], 
         LieART`HighestWeight[
           Pattern[LieART`Private`weight, 
            PatternTest[
             Alternatives[
             LieART`Weight, LieART`WeightAlpha, LieART`WeightOrthogonal][
              Pattern[LieART`Private`algebraClass, 
               Blank[]]][
              BlankSequence[]], LieART`DominantQ]]] := LieART`Private`weight, 
         TagSet[LieART`HighestWeight, 
          MessageName[LieART`HighestWeight, "usage"], "HighestWeight  "], 
         LieART`Private`Basis[
           Alternatives[LieART`Weight, LieART`Irrep, LieART`RootOmega][
            Blank[]][
            BlankSequence[]]] := LieART`OmegaBasis, LieART`Private`Basis[
           Alternatives[LieART`WeightAlpha, LieART`RootAlpha][
            Blank[]][
            BlankSequence[]]] := LieART`AlphaBasis, LieART`Private`Basis[
           Alternatives[
           LieART`Weight, LieART`WeightAlpha, LieART`Irrep, LieART`RootOmega, 
            LieART`RootAlpha, LieART`RootOrthogonal, LieART`WeightOrthogonal][
            Blank[]][
            BlankSequence[]]] := LieART`OrthogonalBasis, LieART`Private`Seek[
           Pattern[LieART`Private`expr, 
            Blank[List]], 
           Pattern[LieART`Private`condition, 
            Blank[]]] := Catch[Map[If[
              LieART`Private`condition[#], 
              Throw[#]]& , LieART`Private`expr]; Null], LieART`ZeroRoots[
           Pattern[LieART`Private`algebra, 
            Blank[]]] := Apply[
           LieART`RootOmega[
            LieART`AlgebraClass[LieART`Private`algebra]], 
           ConstantArray[0, {
             LieART`Rank[LieART`Private`algebra], 
             LieART`Rank[LieART`Private`algebra]}], {1}], 
         TagSet[LieART`ZeroRoots, 
          MessageName[LieART`ZeroRoots, "usage"], "ZeroRoots  "], 
         LieART`Private`NumberOfBoxes[
           Pattern[LieART`Private`irrep, 
            Blank[]]] := 
         Module[{LieART`Private`n = LieART`Rank[LieART`Private`irrep]}, 
           Total[
            MapThread[Times, {
              Range[LieART`Private`n], 
              Apply[List, LieART`Private`irrep]}]]], 
         Attributes[LieART`Index] = {Listable}, LieART`Index[
           LieART`ProductIrrep[
            Pattern[LieART`Private`irreps, 
             BlankSequence[]]]] := Map[LieART`Index, 
           ReplaceAll[{LieART`Private`irreps}, LieART`Irrep[LieART`U][
              Blank[]] -> Sequence[]]], LieART`Index[
           Pattern[LieART`Private`irrep, 
            PatternTest[
             LieART`Irrep[
              Pattern[LieART`Private`algebraClass, 
               Blank[]]][
              BlankSequence[]], LieART`Private`NonNumericIrrepQ]]] := (
          LieART`Index[LieART`Private`irrep] = 
          Module[{LieART`Private`highestWeight = Apply[
               LieART`Weight[LieART`Private`algebraClass], 
               LieART`Private`irrep], LieART`Private`delta = LieART`Delta[
               LieART`Algebra[LieART`Private`irrep]]}, (
             LieART`Dim[LieART`Private`irrep] 
             LieART`ScalarProduct[
              LieART`Private`highestWeight, LieART`Private`highestWeight + 
               2 LieART`Private`delta])/LieART`NumberOfRoots[
             LieART`Algebra[LieART`Private`irrep]]]), 
         TagSet[LieART`Index, 
          MessageName[LieART`Index, "usage"], 
          "Index[irrep] computes the index of irrep."], LieART`NumberOfRoots[
           PatternTest[
            Pattern[LieART`Private`algebra, 
             Blank[]], LieART`SimpleLieAlgebraQ]] := Length[
           LieART`RootSystem[LieART`Private`algebra]], 
         TagSet[LieART`NumberOfRoots, 
          MessageName[LieART`NumberOfRoots, "usage"], 
          "NumberOfRoots[algebra] gives the number of roots in the root \
system of algebra."], 
         UpSetDelayed[LieART`IrrepPlus[
            Pattern[LieART`Private`terms, 
             BlankSequence[]]] PatternTest[
            Pattern[LieART`Private`factor, 
             Blank[]], LieART`Private`NaturalNumberQ], 
          Apply[LieART`IrrepPlus, 
           LieART`IrrepTimes[LieART`Private`factor, {LieART`Private`terms}]]], 
         UpSetDelayed[
          LieART`DecomposeIrrep[
           LieART`IrrepPlus[
            Pattern[LieART`Private`irreps, 
             BlankSequence[]]], 
           PatternTest[
            Pattern[LieART`Private`algebra, 
             Blank[]], LieART`Private`LieAlgebraQ], 
           Pattern[LieART`Private`args, 
            BlankNullSequence[]]], 
          Apply[LieART`IrrepPlus, 
           
           LieART`DecomposeIrrep[{LieART`Private`irreps}, 
            LieART`Private`algebra, LieART`Private`args], {0, 1}]], 
         UpSetDelayed[
          LieART`DecomposeProduct[
           Pattern[LieART`Private`irreps1, 
            Blank[LieART`IrrepPlus]], 
           Pattern[LieART`Private`irreps2, 
            Blank[LieART`IrrepPlus]]], 
          Apply[LieART`IrrepPlus, 
           Apply[LieART`DecomposeProduct, 
            Tuples[{LieART`Private`irreps1, LieART`Private`irreps2}], {1}]]], 
         UpSetDelayed[
          LieART`DecomposeProduct[
           Pattern[LieART`Private`irreps1, 
            Blank[LieART`IrrepPlus]], 
           PatternTest[
            Pattern[LieART`Private`irrep2, 
             BlankSequence[]], LieART`Private`SingleOrProductIrrepQ]], 
          Apply[LieART`IrrepPlus, 
           Map[LieART`DecomposeProduct[#, LieART`Private`irrep2]& , 
            Apply[List, LieART`Private`irreps1]]]], 
         UpSetDelayed[
          LieART`DecomposeProduct[
           PatternTest[
            Pattern[LieART`Private`irrep1, 
             BlankSequence[]], LieART`Private`SingleOrProductIrrepQ], 
           Pattern[LieART`Private`irreps2, 
            Blank[LieART`IrrepPlus]]], 
          Apply[LieART`IrrepPlus, 
           Map[LieART`DecomposeProduct[LieART`Private`irrep1, #]& , 
            Apply[List, LieART`Private`irreps2]]]], LieART`IrrepPlus[{
            PatternTest[
             Pattern[LieART`Private`irreps, 
              BlankSequence[]], LieART`Private`SingleOrProductIrrepQ]}] := 
         Apply[LieART`IrrepPlus, 
           Apply[LieART`IrrepTimes[#2, #]& , 
            Sort[
             Tally[{LieART`Private`irreps}], LieART`IrrepOrderedQ[
              Part[#, 1], 
              Part[#2, 1]]& ], {1}]], LieART`IrrepPlus[
           Pattern[LieART`Private`irrepSums, 
            BlankSequence[LieART`IrrepPlus]]] := Module[{}, 
           Apply[LieART`IrrepPlus, 
            Apply[LieART`IrrepTimes[#2, #]& , 
             Sort[
              Map[{
                Part[#, 1, 1], 
                Total[
                 Part[#, All, 2]]}& , 
               GatherBy[
                ReplaceAll[
                 Replace[
                  Flatten[
                   Apply[List, {LieART`Private`irrepSums}, {1}]], Alternatives[
                    PatternTest[
                    Pattern[LieART`Private`irrep, 
                    Blank[]], LieART`IrrepQ], 
                    PatternTest[
                    Pattern[LieART`Private`irrep, 
                    Blank[]], LieART`Private`ProductIrrepQ]] :> {
                   LieART`Private`irrep, 1}, 1], LieART`IrrepTimes[
                   PatternTest[
                    Pattern[LieART`Private`factor, 
                    Blank[]], IntegerQ], 
                   Alternatives[
                    PatternTest[
                    Pattern[LieART`Private`irrep, 
                    Blank[]], LieART`IrrepQ], 
                    PatternTest[
                    Pattern[LieART`Private`irrep, 
                    Blank[]], LieART`Private`ProductIrrepQ]]] :> {
                  LieART`Private`irrep, LieART`Private`factor}], First]], 
              LieART`IrrepOrderedQ[
               Part[#, 1], 
               Part[#2, 1]]& ], {1}]]], 
         TagSetDelayed[LieART`IrrepPlus, 
          MakeBoxes[
           LieART`IrrepPlus[
            Pattern[LieART`Private`expr, 
             BlankNullSequence[]]], TraditionalForm], 
          RowBox[
           Riffle[
            Map[MakeBoxes[#, TraditionalForm]& , {LieART`Private`expr}], 
            "+"]]], 
         TagSetDelayed[LieART`IrrepPlus, 
          MakeBoxes[
           LieART`IrrepPlus[
            Pattern[LieART`Private`expr, 
             BlankNullSequence[]]], StandardForm], 
          Format[
           DisplayForm[
            RowBox[
             Riffle[
              Map[MakeBoxes[#, StandardForm]& , {LieART`Private`expr}], 
              "+"]]], StandardForm]], 
         TagSetDelayed[LieART`IrrepPlus, 
          MakeBoxes[
           LieART`IrrepPlus[
            Pattern[LieART`Private`expr, 
             BlankNullSequence[]]], LieART`LaTeXForm], 
          Format[
           ToString[
            StringJoin["$", 
             ToString[
              Row[
               Map[LieART`LaTeXForm, {LieART`Private`expr}], "+"]], "$"]], 
           LieART`LaTeXForm]], 
         TagSet[LieART`IrrepPlus, 
          MessageName[LieART`IrrepPlus, "usage"], "IrrepPlus  "], 
         Attributes[LieART`IrrepTimes] = {Listable}, 
         UpSetDelayed[
          LieART`DecomposeIrrep[
           LieART`IrrepTimes[
            PatternTest[
             Pattern[LieART`Private`factor, 
              Blank[]], IntegerQ], 
            PatternTest[
             Pattern[LieART`Private`irrep, 
              Blank[]], LieART`Private`SingleOrProductIrrepQ]], 
           PatternTest[
            Pattern[LieART`Private`algebra, 
             Blank[]], LieART`Private`LieAlgebraQ], 
           Pattern[LieART`Private`pos, 
            Blank[]]], 
          LieART`IrrepTimes[LieART`Private`factor, 
           LieART`DecomposeIrrep[
           LieART`Private`irrep, LieART`Private`algebra, 
            LieART`Private`pos]]], 
         UpSetDelayed[
          LieART`DecomposeProduct[
           LieART`IrrepTimes[
            PatternTest[
             Pattern[LieART`Private`factor1, 
              Blank[]], LieART`Private`NaturalNumberQ], 
            PatternTest[
             Pattern[LieART`Private`irrep1, 
              Blank[]], LieART`Private`SingleOrProductIrrepQ]], 
           LieART`IrrepTimes[
            PatternTest[
             Pattern[LieART`Private`factor2, 
              Blank[]], LieART`Private`NaturalNumberQ], 
            PatternTest[
             Pattern[LieART`Private`irrep2, 
              Blank[]], LieART`Private`SingleOrProductIrrepQ]]], 
          LieART`IrrepTimes[LieART`Private`factor1 LieART`Private`factor2, 
           LieART`DecomposeProduct[
           LieART`Private`irrep1, LieART`Private`irrep2]]], 
         UpSetDelayed[
          LieART`DecomposeProduct[
           PatternTest[
            Pattern[LieART`Private`irrep1, 
             BlankSequence[]], LieART`Private`SingleOrProductIrrepQ], 
           LieART`IrrepTimes[
            PatternTest[
             Pattern[LieART`Private`factor, 
              Blank[]], LieART`Private`NaturalNumberQ], 
            PatternTest[
             Pattern[LieART`Private`irrep2, 
              Blank[]], LieART`Private`SingleOrProductIrrepQ]]], 
          LieART`IrrepTimes[LieART`Private`factor, 
           LieART`DecomposeProduct[
           LieART`Private`irrep1, LieART`Private`irrep2]]], 
         UpSetDelayed[
          LieART`DecomposeProduct[
           LieART`IrrepTimes[
            PatternTest[
             Pattern[LieART`Private`factor, 
              Blank[]], LieART`Private`NaturalNumberQ], 
            PatternTest[
             Pattern[LieART`Private`irrep1, 
              Blank[]], LieART`Private`SingleOrProductIrrepQ]], 
           PatternTest[
            Pattern[LieART`Private`irrep2, 
             BlankSequence[]], LieART`Private`SingleOrProductIrrepQ]], 
          LieART`IrrepTimes[LieART`Private`factor, 
           LieART`DecomposeProduct[
           LieART`Private`irrep1, LieART`Private`irrep2]]], 
         LieART`IrrepTimes[1, 
           PatternTest[
            Pattern[LieART`Private`irrep, 
             Blank[]], LieART`Private`SingleOrProductIrrepQ]] := 
         LieART`Private`irrep, LieART`IrrepTimes[
           PatternTest[
            Pattern[LieART`Private`factor, 
             Blank[]], LieART`Private`NaturalNumberQ], 
           LieART`IrrepPlus[
            Pattern[LieART`Private`terms, 
             BlankSequence[]]]] := Apply[LieART`IrrepPlus, 
           LieART`IrrepTimes[LieART`Private`factor, {LieART`Private`terms}]], 
         LieART`IrrepTimes[
           PatternTest[
            Pattern[LieART`Private`factor1, 
             Blank[]], LieART`Private`NaturalNumberQ], 
           LieART`IrrepTimes[
            PatternTest[
             Pattern[LieART`Private`factor2, 
              Blank[]], LieART`Private`NaturalNumberQ], 
            PatternTest[
             Pattern[LieART`Private`irrep, 
              Blank[]], LieART`Private`SingleOrProductIrrepQ]]] := 
         LieART`IrrepTimes[
          LieART`Private`factor1 LieART`Private`factor2, 
           LieART`Private`irrep], 
         TagSetDelayed[LieART`IrrepTimes, 
          MakeBoxes[
           LieART`IrrepTimes[
            Pattern[LieART`Private`factor, 
             Blank[]], 
            PatternTest[
             Pattern[LieART`Private`irrep, 
              Blank[]], LieART`IrrepQ]], TraditionalForm], 
          RowBox[{
            MakeBoxes[LieART`Private`factor, TraditionalForm], "(", 
            MakeBoxes[LieART`Private`irrep, TraditionalForm], ")"}]], 
         TagSetDelayed[LieART`IrrepTimes, 
          MakeBoxes[
           LieART`IrrepTimes[
            Pattern[LieART`Private`factor, 
             Blank[]], 
            PatternTest[
             Pattern[LieART`Private`irrep, 
              Blank[]], LieART`IrrepQ]], StandardForm], 
          Format[
           DisplayForm[
            RowBox[{LieART`Private`factor, LieART`Private`irrep}]], 
           StandardForm]], 
         TagSetDelayed[LieART`IrrepTimes, 
          MakeBoxes[
           LieART`IrrepTimes[1, 
            PatternTest[
             Pattern[LieART`Private`irrep, 
              Blank[]], LieART`IrrepQ]], LieART`LaTeXForm], 
          Format[
           ToString[
            LieART`ToLaTeX[LieART`Private`irrep]], LieART`LaTeXForm]], 
         TagSetDelayed[LieART`IrrepTimes, 
          MakeBoxes[
           LieART`IrrepTimes[
            Pattern[LieART`Private`factor, 
             Blank[]], 
            PatternTest[
             Pattern[LieART`Private`irrep, 
              Blank[]], LieART`IrrepQ]], LieART`LaTeXForm], 
          Format[
           ToString[
            StringJoin[
             ToString[LieART`Private`factor], "(", 
             LieART`ToLaTeX[LieART`Private`irrep], ")"]], LieART`LaTeXForm]], 
         TagSetDelayed[LieART`IrrepTimes, 
          MakeBoxes[
           LieART`IrrepTimes[
            Pattern[LieART`Private`factor, 
             Blank[]], 
            Pattern[LieART`Private`irrep, 
             Blank[LieART`ProductIrrep]]], TraditionalForm], 
          RowBox[{
            MakeBoxes[LieART`Private`factor, TraditionalForm], 
            MakeBoxes[LieART`Private`irrep, TraditionalForm]}]], 
         TagSetDelayed[LieART`IrrepTimes, 
          MakeBoxes[
           LieART`IrrepTimes[
            Pattern[LieART`Private`factor, 
             Blank[]], 
            Pattern[LieART`Private`irrep, 
             Blank[LieART`ProductIrrep]]], StandardForm], 
          Format[
           DisplayForm[
            RowBox[{LieART`Private`factor, 
              Format[LieART`Private`irrep, StandardForm]}]], StandardForm]], 
         TagSetDelayed[LieART`IrrepTimes, 
          MakeBoxes[
           LieART`IrrepTimes[
            Pattern[LieART`Private`factor, 
             Blank[]], 
            Pattern[LieART`Private`irrep, 
             Blank[LieART`ProductIrrep]]], LieART`LaTeXForm], 
          Format[
           ToString[
            StringJoin[
             ToString[LieART`Private`factor], 
             LieART`ToLaTeX[LieART`Private`irrep]]], LieART`LaTeXForm]], 
         TagSet[LieART`IrrepTimes, 
          MessageName[LieART`IrrepTimes, "usage"], "IrrepTimes  "], 
         Attributes[LieART`DecomposeIrrep] = {Listable}, LieART`DecomposeIrrep[
           PatternTest[
            Pattern[LieART`Private`irrep, 
             Blank[]], LieART`IrrepQ], 
           PatternTest[
            Pattern[LieART`Private`algebra, 
             Blank[]], LieART`SimpleLieAlgebraQ], 
           Pattern[LieART`Private`args, 
            BlankNullSequence[]]] := ReplaceAll[
           LieART`DecomposeIrrep[LieART`Private`irrep, 
            LieART`ProductAlgebra[LieART`Private`algebra], 
            LieART`Private`args], LieART`ProductIrrep -> Sequence], 
         LieART`DecomposeIrrep[
           PatternTest[
            Pattern[LieART`Private`irrep, 
             Blank[]], LieART`IrrepQ], 
           PatternTest[
            Pattern[LieART`Private`target, 
             Blank[]], LieART`Private`ProductLieAlgebraQ], 
           Alternatives[
            Pattern[LieART`Private`branchingIndex, 
             Blank[]], 
            PatternSequence[]]] := Condition[
           
           Module[{LieART`Private`irrepsOfAll, 
             LieART`Private`dominantProjectedWeights, 
             LieART`Private`cutU1Charge}, 
            LieART`Private`cutU1Charge = 
             If[Last[LieART`Private`target] === LieART`Algebra[LieART`U][1], 
               Most, Identity]; 
            LieART`Private`dominantProjectedWeights = Select[
               LieART`Project[
                LieART`ProjectionMatrix[
                 LieART`Algebra[LieART`Private`irrep], LieART`Private`target, 
                 LieART`Private`branchingIndex], 
                LieART`WeightSystem[LieART`Private`irrep]], 
               LieART`Private`PositiveQ[
                LieART`Private`cutU1Charge[#]]& ]; 
            LieART`Private`irrepsOfAll = 
             Fold[LieART`Private`GetAllProductIrrep, 
               LieART`GroupProjectedWeights[
               LieART`Private`dominantProjectedWeights, 
                LieART`Private`target], 
               Range[
                Length[
                 LieART`Private`cutU1Charge[LieART`Private`target]]]]; 
            LieART`IrrepPlus[
              ReplaceAll[
               Apply[LieART`ProductIrrep, LieART`Private`irrepsOfAll, {1}], 
               LieART`Weight[LieART`U] -> LieART`Irrep[LieART`U]]]], 
           If[Head[
              LieART`ProjectionMatrix[
               LieART`Algebra[LieART`Private`irrep], LieART`Private`target, 
               LieART`Private`branchingIndex]] === List, True, Message[
              MessageName[LieART`DecomposeIrrep, "nosubalgebra"], 
              LieART`Algebra[LieART`Private`irrep], LieART`Private`target]; 
            False]], LieART`DecomposeIrrep[
           PatternTest[
            Pattern[LieART`Private`irrep, 
             Blank[]], LieART`Private`ProductIrrepQ], 
           PatternTest[
            Pattern[LieART`Private`algebra, 
             Blank[]], LieART`SimpleLieAlgebraQ], 
           Pattern[LieART`Private`args, 
            BlankNullSequence[]]] := 
         LieART`DecomposeIrrep[LieART`Private`irrep, 
           LieART`ProductAlgebra[LieART`Private`algebra], 
           LieART`Private`args], LieART`DecomposeIrrep[
           PatternTest[
            Pattern[LieART`Private`productIrrep, 
             Blank[]], LieART`Private`ProductIrrepQ], 
           PatternTest[
            Pattern[LieART`Private`target, 
             Blank[]], LieART`Private`ProductLieAlgebraQ], 
           Pattern[LieART`Private`pos, 
            Blank[]], 
           Alternatives[
            Pattern[LieART`Private`branchingIndex, 
             Blank[]], 
            PatternSequence[]]] := 
         Module[{LieART`Private`decomposition}, 
           LieART`Private`decomposition = MapAt[LieART`IrrepList[
               
               LieART`DecomposeIrrep[#, LieART`Private`target, 
                LieART`Private`branchingIndex]]& , 
              LieART`Private`productIrrep, LieART`Private`pos]; 
           LieART`IrrepPlus[
             Map[Sort[#, OrderedQ[{
                 First[
                  Head[#]], 
                 First[
                  Head[#2]]}]& ]& , 
              Thread[LieART`Private`decomposition]]]], 
         TagSetDelayed[LieART`DecomposeIrrep, 
          MessageName[LieART`DecomposeIrrep, "nosubalgebra"], 
          "Either `1` does not have `2` as a subalgebra or the branching rule \
is implemented with a different ordering of `2` or not at all. Try changing \
the order in `2`."], LieART`Project[
           Pattern[LieART`Private`matrix, 
            Blank[]], 
           Pattern[LieART`Private`weights, 
            Blank[]]] := Map[Dot[LieART`Private`matrix, #]& , 
           Apply[List, LieART`Private`weights, {1}]], 
         TagSet[LieART`Project, 
          MessageName[LieART`Project, "usage"], "Project  "], 
         LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`B][3]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1], 
            LieART`Algebra[LieART`A][1], 
            LieART`Algebra[LieART`A][1]]] := 
         LieART`SemiSimpleSubalgebra[LieART`BranchingRules`Private`origin, 2],
          LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`B][3]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][3]]] := Permute[
           LieART`SemiSimpleSubalgebra[
           LieART`BranchingRules`Private`origin, 3], 
           Cycles[{{2, 3}}]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`B][4]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][3], 
            LieART`Algebra[LieART`A][1]]] := Permute[
           LieART`SemiSimpleSubalgebra[
           LieART`BranchingRules`Private`origin, 3], 
           Cycles[{{2, 3}}]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`B][5]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][3], 
            LieART`Algebra[C][2]]] := 
         Permute[{{0, 1, 0, 0, 0}, {1, 0, 0, 0, 0}, {-1, -2, -2, -2, -1}, {0, 
           0, 0, 0, 1}, {0, 0, 0, 1, 0}}, 
           Cycles[{{1, 2}}]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`B][
             Pattern[LieART`BranchingRules`Private`n, 
              Blank[]]]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][3], 
            LieART`Algebra[LieART`B][
             Pattern[LieART`BranchingRules`Private`m, 
              Blank[]]]]] := Condition[
           Permute[
            LieART`SemiSimpleSubalgebra[
            LieART`BranchingRules`Private`origin, 3], 
            Cycles[{{2, 3}}]], 
           And[
           LieART`BranchingRules`Private`m == 
            LieART`BranchingRules`Private`n - 3, 
            LieART`BranchingRules`Private`n >= 6]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`B][
             Pattern[LieART`BranchingRules`Private`n, 
              Blank[]]]], 
           LieART`ProductAlgebra[
            LieART`Algebra[D][
             Pattern[LieART`BranchingRules`Private`n, 
              Blank[]]]]] := Condition[
           LieART`ReverseOrderSimpleRoots[
            LieART`SemiSimpleSubalgebra[
            LieART`BranchingRules`Private`origin, -1], 
            LieART`BranchingRules`Private`n], LieART`BranchingRules`Private`n >= 
           4], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`B][
             Pattern[LieART`BranchingRules`Private`n, 
              Blank[]]]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1], 
            LieART`Algebra[LieART`A][1], 
            LieART`Algebra[LieART`B][
             Pattern[LieART`BranchingRules`Private`m, 
              Blank[]]]]] := Condition[
           
           Module[{LieART`BranchingRules`Private`mat}, 
            LieART`BranchingRules`Private`mat = Join[{1}, 
               ConstantArray[0, LieART`BranchingRules`Private`n - 1]]; 
            LieART`BranchingRules`Private`mat = {
              LieART`BranchingRules`Private`mat, 
               Join[{-1}, 
                
                ConstantArray[-2, LieART`BranchingRules`Private`n - 
                 2], {-1}]}; 
            LieART`BranchingRules`Private`mat = 
             Join[LieART`BranchingRules`Private`mat, 
               Join[
                ConstantArray[0, {LieART`BranchingRules`Private`n - 2, 2}], 
                IdentityMatrix[LieART`BranchingRules`Private`n - 2], 2]]; 
            LieART`BranchingRules`Private`mat], 
           And[
           LieART`BranchingRules`Private`n >= 5, 
            LieART`BranchingRules`Private`m == 
            LieART`BranchingRules`Private`n - 2]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`B][4]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1], 
            LieART`Algebra[LieART`A][1], 
            LieART`Algebra[C][2]]] := Permute[
           LieART`SemiSimpleSubalgebra[
           LieART`BranchingRules`Private`origin, 2], 
           Cycles[{{3, 4}}]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`B][
             Pattern[LieART`BranchingRules`Private`n, 
              Blank[]]]], 
           LieART`ProductAlgebra[
            LieART`Algebra[D][
             Pattern[LieART`BranchingRules`Private`k, 
              Blank[]]], 
            LieART`Algebra[LieART`B][
             Pattern[LieART`BranchingRules`Private`m, 
              Blank[]]]]] := Condition[
           
           Module[{LieART`BranchingRules`Private`mat}, 
            LieART`BranchingRules`Private`mat = Join[
               Reverse[
                IdentityMatrix[LieART`BranchingRules`Private`k - 1]], 
               ConstantArray[
               0, {LieART`BranchingRules`Private`k - 1, 
                 LieART`BranchingRules`Private`n - 
                 LieART`BranchingRules`Private`k + 1}], 2]; 
            AppendTo[LieART`BranchingRules`Private`mat, 
              Join[{-1}, 
               ConstantArray[-2, LieART`BranchingRules`Private`n - 2], {-1}]]; 
            LieART`BranchingRules`Private`mat = 
             Join[LieART`BranchingRules`Private`mat, 
               Join[
                ConstantArray[
                0, {LieART`BranchingRules`Private`n - 
                  LieART`BranchingRules`Private`k, 
                  LieART`BranchingRules`Private`k}], 
                IdentityMatrix[
                LieART`BranchingRules`Private`n - 
                 LieART`BranchingRules`Private`k], 2]]; 
            LieART`BranchingRules`Private`mat], 
           And[
           LieART`BranchingRules`Private`k >= 4, 
            LieART`BranchingRules`Private`k <= 
            LieART`BranchingRules`Private`n, 
            LieART`BranchingRules`Private`n - LieART`BranchingRules`Private`k >= 
            3, LieART`BranchingRules`Private`m == 
            LieART`BranchingRules`Private`n - 
             LieART`BranchingRules`Private`k]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`B][
             Pattern[LieART`BranchingRules`Private`n, 
              Blank[]]]], 
           LieART`ProductAlgebra[
            LieART`Algebra[D][
             Pattern[LieART`BranchingRules`Private`m, 
              Blank[]]], 
            LieART`Algebra[LieART`A][1]]] := Condition[
           LieART`ReverseOrderSimpleRoots[
            LieART`SemiSimpleSubalgebra[
            LieART`BranchingRules`Private`origin, 
             LieART`BranchingRules`Private`n - 1], 
            LieART`BranchingRules`Private`n - 1], 
           And[
           LieART`BranchingRules`Private`m == 
            LieART`BranchingRules`Private`n - 1, 
            LieART`BranchingRules`Private`n >= 5]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`B][
             Pattern[LieART`BranchingRules`Private`n, 
              Blank[]]]], 
           LieART`ProductAlgebra[
            LieART`Algebra[D][
             Pattern[LieART`BranchingRules`Private`k, 
              Blank[]]], 
            LieART`Algebra[C][2]]] := Condition[
           Permute[
            
            Module[{LieART`BranchingRules`Private`mat}, 
             LieART`BranchingRules`Private`mat = Join[
                Reverse[
                 IdentityMatrix[LieART`BranchingRules`Private`k - 1]], 
                ConstantArray[
                0, {LieART`BranchingRules`Private`k - 1, 
                  LieART`BranchingRules`Private`n - 
                  LieART`BranchingRules`Private`k + 1}], 2]; 
             AppendTo[LieART`BranchingRules`Private`mat, 
               Join[{-1}, 
                
                ConstantArray[-2, LieART`BranchingRules`Private`n - 
                 2], {-1}]]; 
             LieART`BranchingRules`Private`mat = 
              Join[LieART`BranchingRules`Private`mat, 
                Join[
                 ConstantArray[
                 0, {LieART`BranchingRules`Private`n - 
                   LieART`BranchingRules`Private`k, 
                   LieART`BranchingRules`Private`k}], 
                 IdentityMatrix[
                 LieART`BranchingRules`Private`n - 
                  LieART`BranchingRules`Private`k], 2]]; 
             LieART`BranchingRules`Private`mat], 
            
            Cycles[{{
              LieART`BranchingRules`Private`n, 
               LieART`BranchingRules`Private`n - 1}}]], 
           And[
           LieART`BranchingRules`Private`k >= 4, 
            LieART`BranchingRules`Private`n - LieART`BranchingRules`Private`k == 
            2]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[C][
             Pattern[LieART`BranchingRules`Private`n, 
              Blank[]]]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1], 
            LieART`Algebra[C][
             Pattern[LieART`BranchingRules`Private`m, 
              Blank[]]]]] := Condition[
           Join[{
             ConstantArray[1, LieART`BranchingRules`Private`n]}, 
            MapThread[Prepend, {
              IdentityMatrix[LieART`BranchingRules`Private`n - 1], 
              ConstantArray[0, LieART`BranchingRules`Private`n - 1]}]], 
           And[
           LieART`BranchingRules`Private`n >= 3, 
            LieART`BranchingRules`Private`m == 
            LieART`BranchingRules`Private`n - 1]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[C][2]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1], 
            LieART`Algebra[LieART`A][1]]] := {{1, 1}, {0, 1}}, 
         LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[C][
             Pattern[LieART`BranchingRules`Private`n, 
              Blank[]]]], 
           LieART`ProductAlgebra[
            LieART`Algebra[C][
             Pattern[LieART`BranchingRules`Private`k, 
              Blank[]]], 
            LieART`Algebra[C][
             Pattern[LieART`BranchingRules`Private`m, 
              Blank[]]]]] := Condition[
           
           Module[{LieART`BranchingRules`Private`mat}, 
            LieART`BranchingRules`Private`mat = Join[
               IdentityMatrix[LieART`BranchingRules`Private`k - 1], 
               ConstantArray[
               0, {LieART`BranchingRules`Private`k - 1, 
                 LieART`BranchingRules`Private`n - 
                 LieART`BranchingRules`Private`k + 1}], 2]; 
            AppendTo[LieART`BranchingRules`Private`mat, 
              Join[
               ConstantArray[0, LieART`BranchingRules`Private`k - 1], 
               ConstantArray[
               1, LieART`BranchingRules`Private`n - 
                LieART`BranchingRules`Private`k + 1]]]; 
            LieART`BranchingRules`Private`mat = 
             Join[LieART`BranchingRules`Private`mat, 
               Join[
                ConstantArray[
                0, {LieART`BranchingRules`Private`n - 
                  LieART`BranchingRules`Private`k, 
                  LieART`BranchingRules`Private`k}], 
                IdentityMatrix[
                LieART`BranchingRules`Private`n - 
                 LieART`BranchingRules`Private`k], 2]]; 
            LieART`BranchingRules`Private`mat], 
           And[
           LieART`BranchingRules`Private`n >= 3, 
            LieART`BranchingRules`Private`k >= 2, 
            LieART`BranchingRules`Private`k <= 
            LieART`BranchingRules`Private`n - 2, 
            LieART`BranchingRules`Private`m == 
            LieART`BranchingRules`Private`n - LieART`BranchingRules`Private`k,
             LieART`BranchingRules`Private`m >= 
            LieART`BranchingRules`Private`k]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[D][4]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1], 
            LieART`Algebra[LieART`A][1], 
            LieART`Algebra[LieART`A][1], 
            LieART`Algebra[LieART`A][1]]] := {{1, 0, 0, 
          0}, {-1, -2, -1, -1}, {0, 0, 1, 0}, {0, 0, 0, 1}}, 
         LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[D][5]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1], 
            LieART`Algebra[LieART`A][1], 
            LieART`Algebra[LieART`A][3]]] := Permute[
           LieART`SemiSimpleSubalgebra[
           LieART`BranchingRules`Private`origin, 2], 
           Cycles[{{3, 4}}]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[D][6]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][3], 
            LieART`Algebra[LieART`A][3]]] := {{1, 0, 0, 0, 0, 0}, {0, 1, 0, 0,
           0, 0}, {-1, -2, -2, -2, -1, -1}, {0, 0, 0, 0, 1, 0}, {0, 0, 0, 1, 
          0, 0}, {0, 0, 0, 0, 0, 1}}, LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[D][
             Pattern[LieART`BranchingRules`Private`n, 
              Blank[]]]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1], 
            LieART`Algebra[LieART`A][1], 
            LieART`Algebra[D][
             Pattern[LieART`BranchingRules`Private`m, 
              Blank[]]]]] := Condition[
           LieART`SemiSimpleSubalgebra[
           LieART`BranchingRules`Private`origin, 2], 
           And[
           LieART`BranchingRules`Private`m == 
            LieART`BranchingRules`Private`n - 2, 
            LieART`BranchingRules`Private`n >= 3]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[D][
             Pattern[LieART`BranchingRules`Private`n, 
              Blank[]]]], 
           LieART`ProductAlgebra[
            LieART`Algebra[D][
             Pattern[LieART`BranchingRules`Private`m, 
              Blank[]]], 
            LieART`Algebra[D][
             Pattern[LieART`BranchingRules`Private`k, 
              Blank[]]]]] := Condition[
           LieART`ReverseOrderSimpleRoots[
            LieART`SemiSimpleSubalgebra[
            LieART`BranchingRules`Private`origin, 
             LieART`BranchingRules`Private`m], 
            LieART`BranchingRules`Private`m], 
           And[
           LieART`BranchingRules`Private`m == 
            LieART`BranchingRules`Private`n - LieART`BranchingRules`Private`k,
             LieART`BranchingRules`Private`n >= 6]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[D][
             Pattern[LieART`BranchingRules`Private`n, 
              Blank[]]]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][3], 
            LieART`Algebra[D][
             Pattern[LieART`BranchingRules`Private`k, 
              Blank[]]]]] := Condition[
           Permute[
            LieART`SemiSimpleSubalgebra[
            LieART`BranchingRules`Private`origin, 3], 
            Cycles[{{2, 3}}]], 
           And[
           LieART`BranchingRules`Private`n >= 7, 
            LieART`BranchingRules`Private`k == 
            LieART`BranchingRules`Private`n - 3]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, LieART`E6], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][2], 
            LieART`Algebra[LieART`A][2], 
            LieART`Algebra[LieART`A][2]]] := 
         LieART`SemiSimpleSubalgebra[LieART`BranchingRules`Private`origin, 3],
          LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, LieART`E6], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][5], 
            LieART`Algebra[LieART`A][1]]] := 
         LieART`SemiSimpleSubalgebra[LieART`BranchingRules`Private`origin, 6],
          LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, LieART`E7], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][7]]] := 
         LieART`SemiSimpleSubalgebra[LieART`BranchingRules`Private`origin, 7],
          LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, LieART`E7], 
           LieART`ProductAlgebra[
            LieART`Algebra[D][6], 
            LieART`Algebra[LieART`A][1]]] := Permute[
           LieART`SemiSimpleSubalgebra[
           LieART`BranchingRules`Private`origin, 5], 
           Cycles[{{5, 6, 7}}]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, LieART`E7], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][5], 
            LieART`Algebra[LieART`A][2]]] := Permute[
           LieART`SemiSimpleSubalgebra[
           LieART`BranchingRules`Private`origin, 4], 
           Cycles[{{5, 6, 7}}]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, LieART`E8], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][8]]] := 
         LieART`SemiSimpleSubalgebra[LieART`BranchingRules`Private`origin, 8],
          LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, LieART`E8], 
           LieART`ProductAlgebra[LieART`E7, 
            LieART`Algebra[LieART`A][1]]] := Permute[
           LieART`SemiSimpleSubalgebra[
           LieART`BranchingRules`Private`origin, 7], 
           Cycles[{{7, 8}}]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, LieART`E8], 
           LieART`ProductAlgebra[LieART`E6, 
            LieART`Algebra[LieART`A][2]]] := Permute[
           LieART`SemiSimpleSubalgebra[
           LieART`BranchingRules`Private`origin, 6], 
           Cycles[{{6, 8}}]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, LieART`E8], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][4], 
            LieART`Algebra[LieART`A][4]]] := Permute[
           LieART`SemiSimpleSubalgebra[
           LieART`BranchingRules`Private`origin, 4], 
           Cycles[{{4, 5, 6, 7, 8}}]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, LieART`E8], 
           LieART`ProductAlgebra[
            LieART`Algebra[D][8]]] := Permute[
           LieART`ReverseOrderSimpleRoots[
            LieART`SemiSimpleSubalgebra[
            LieART`BranchingRules`Private`origin, 1], 7], 
           Cycles[{{7, 8}}]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, LieART`F4], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`B][4]]] := {{-2, -3, -2, -1}, {1, 0, 0, 
          0}, {0, 1, 0, 0}, {0, 0, 1, 0}}, LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, LieART`F4], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][2], 
            LieART`Algebra[LieART`A][2]]] := Permute[
           LieART`SemiSimpleSubalgebra[
           LieART`BranchingRules`Private`origin, 2], 
           Cycles[{{1, 4, 3, 2}}]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, LieART`F4], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1], 
            LieART`Algebra[C][3]]] := {{-2, -3, -2, -1}, {0, 0, 0, 1}, {0, 0, 
          1, 0}, {0, 1, 0, 0}}, LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, LieART`G2], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][2]]] := 
         LieART`SemiSimpleSubalgebra[LieART`BranchingRules`Private`origin, 1],
          LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, LieART`G2], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1], 
            LieART`Algebra[LieART`A][1]]] := 
         LieART`SemiSimpleSubalgebra[LieART`BranchingRules`Private`origin, 2],
          LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`A][
             Pattern[LieART`BranchingRules`Private`n, 
              Blank[]]]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][
             Pattern[LieART`BranchingRules`Private`m, 
              Blank[]]], 
            LieART`Algebra[LieART`A][
             Pattern[LieART`BranchingRules`Private`k, 
              Blank[]]], 
            LieART`Algebra[LieART`U][1]]] := Condition[
           LieART`NonSemiSimpleSubalgebra[
           LieART`BranchingRules`Private`origin, -
             LieART`BranchingRules`Private`k - 1], 
           LieART`BranchingRules`Private`m == 
           LieART`BranchingRules`Private`n - LieART`BranchingRules`Private`k - 
            1], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`A][
             Pattern[LieART`BranchingRules`Private`n, 
              Blank[]]]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][
             Pattern[LieART`BranchingRules`Private`m, 
              Blank[]]], 
            LieART`Algebra[LieART`U][1]]] := Condition[
           LieART`NonSemiSimpleSubalgebra[
           LieART`BranchingRules`Private`origin, -1], 
           And[
           LieART`BranchingRules`Private`m == 
            LieART`BranchingRules`Private`n - 1, 
            LieART`BranchingRules`Private`n >= 2]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`A][1]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`U][1]]] := 
         LieART`NonSemiSimpleSubalgebra[
          LieART`BranchingRules`Private`origin, 1], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`B][3]], 
           LieART`ProductAlgebra[
            LieART`Algebra[C][2], 
            LieART`Algebra[LieART`U][1]]] := {{0, 0, 1}, {0, 1, 0}, {2, 2, 
          1}}, LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`B][
             Pattern[LieART`BranchingRules`Private`n, 
              Blank[]]]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`B][
             Pattern[LieART`BranchingRules`Private`m, 
              Blank[]]], 
            LieART`Algebra[LieART`U][1]]] := Condition[
           LieART`NonSemiSimpleSubalgebra[
           LieART`BranchingRules`Private`origin, 1], 
           And[
           LieART`BranchingRules`Private`m == 
            LieART`BranchingRules`Private`n - 1, 
            LieART`BranchingRules`Private`n >= 3]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[C][
             Pattern[LieART`BranchingRules`Private`n, 
              Blank[]]]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][
             Pattern[LieART`BranchingRules`Private`m, 
              Blank[]]], 
            LieART`Algebra[LieART`U][1]]] := Condition[
           LieART`NonSemiSimpleSubalgebra[
           LieART`BranchingRules`Private`origin, -1], 
           And[
           LieART`BranchingRules`Private`m == 
            LieART`BranchingRules`Private`n - 1, 
            LieART`BranchingRules`Private`n >= 2]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[D][
             Pattern[LieART`BranchingRules`Private`n, 
              Blank[]]]], 
           LieART`ProductAlgebra[
            LieART`Algebra[D][
             Pattern[LieART`BranchingRules`Private`m, 
              Blank[]]], 
            LieART`Algebra[LieART`U][1]]] := Condition[
           LieART`NonSemiSimpleSubalgebra[
           LieART`BranchingRules`Private`origin, 1], 
           And[
           LieART`BranchingRules`Private`m == 
            LieART`BranchingRules`Private`n - 1, 
            LieART`BranchingRules`Private`n >= 5]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[D][
             Pattern[LieART`BranchingRules`Private`n, 
              Blank[]]]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][
             Pattern[LieART`BranchingRules`Private`m, 
              Blank[]]], 
            LieART`Algebra[LieART`U][1]]] := Condition[
           LieART`NonSemiSimpleSubalgebra[
           LieART`BranchingRules`Private`origin, -2], 
           And[
           LieART`BranchingRules`Private`m == 
            LieART`BranchingRules`Private`n - 1, 
            LieART`BranchingRules`Private`n >= 3]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, LieART`E6], 
           LieART`ProductAlgebra[
            LieART`Algebra[D][5], 
            LieART`Algebra[LieART`U][1]]] := 
         LieART`NonSemiSimpleSubalgebra[
          LieART`BranchingRules`Private`origin, 5], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, LieART`E7], 
           LieART`ProductAlgebra[LieART`E6, 
            LieART`Algebra[LieART`U][1]]] := 
         LieART`NonSemiSimpleSubalgebra[
          LieART`BranchingRules`Private`origin, 6], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`A][2]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1]]] := 
         LieART`SpecialSubalgebra[LieART`BranchingRules`Private`origin, {
            LieART`ProductIrrep[
             LieART`Irrep[LieART`A][2]]}], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`A][5]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][3]]] := {{0, 1, 0, 1, 0}, {1, 0, 0, 0, 
          1}, {0, 1, 2, 1, 0}}, LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`A][5]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][2]]] := {{0, 1, 0, 2, 2}, {2, 2, 3, 1, 
          0}}, LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`A][6]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`B][3]]] := 
         LieART`SpecialSubalgebra[LieART`BranchingRules`Private`origin, {
            LieART`ProductIrrep[
             LieART`Irrep[LieART`B][1, 0, 0]]}], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`A][
             Pattern[LieART`BranchingRules`Private`m, 
              Blank[]]]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`B][
             Pattern[LieART`BranchingRules`Private`n, 
              Blank[]]]]] := Condition[
           
           Module[{LieART`BranchingRules`Private`p, 
             LieART`BranchingRules`Private`bottom}, 
            LieART`BranchingRules`Private`p = 
             IdentityMatrix[LieART`BranchingRules`Private`n - 1]; 
            LieART`BranchingRules`Private`p = 
             MapThread[Append, {LieART`BranchingRules`Private`p, 
                ConstantArray[0, LieART`BranchingRules`Private`n - 1]}]; 
            LieART`BranchingRules`Private`p = 
             MapThread[Append, {LieART`BranchingRules`Private`p, 
                ConstantArray[0, LieART`BranchingRules`Private`n - 1]}]; 
            LieART`BranchingRules`Private`p = 
             Join[LieART`BranchingRules`Private`p, 
               Reverse[
                IdentityMatrix[LieART`BranchingRules`Private`n - 1]], 2]; 
            LieART`BranchingRules`Private`bottom = 
             ConstantArray[0, LieART`BranchingRules`Private`n - 1]; 
            AppendTo[LieART`BranchingRules`Private`bottom, 2]; 
            AppendTo[LieART`BranchingRules`Private`bottom, 2]; 
            LieART`BranchingRules`Private`bottom = 
             Join[LieART`BranchingRules`Private`bottom, 
               ConstantArray[0, LieART`BranchingRules`Private`n - 1]]; 
            AppendTo[
             LieART`BranchingRules`Private`p, 
              LieART`BranchingRules`Private`bottom]; 
            Return[LieART`BranchingRules`Private`p]], 
           And[
           LieART`BranchingRules`Private`n >= 3, 
            LieART`BranchingRules`Private`m == 
            2 LieART`BranchingRules`Private`n]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`A][
             Pattern[LieART`BranchingRules`Private`m, 
              Blank[]]]], 
           LieART`ProductAlgebra[
            LieART`Algebra[C][
             Pattern[LieART`BranchingRules`Private`n, 
              Blank[]]]]] := Condition[
           
           Module[{LieART`BranchingRules`Private`p, 
             LieART`BranchingRules`Private`bottom}, 
            LieART`BranchingRules`Private`p = 
             IdentityMatrix[LieART`BranchingRules`Private`n - 1]; 
            LieART`BranchingRules`Private`p = 
             MapThread[Append, {LieART`BranchingRules`Private`p, 
                ConstantArray[0, LieART`BranchingRules`Private`n - 1]}]; 
            LieART`BranchingRules`Private`p = 
             Join[LieART`BranchingRules`Private`p, 
               Reverse[
                IdentityMatrix[LieART`BranchingRules`Private`n - 1]], 2]; 
            LieART`BranchingRules`Private`bottom = 
             ConstantArray[0, LieART`BranchingRules`Private`n - 1]; 
            AppendTo[LieART`BranchingRules`Private`bottom, 1]; 
            LieART`BranchingRules`Private`bottom = 
             Join[LieART`BranchingRules`Private`bottom, 
               ConstantArray[0, LieART`BranchingRules`Private`n - 1]]; 
            AppendTo[
             LieART`BranchingRules`Private`p, 
              LieART`BranchingRules`Private`bottom]; 
            Return[LieART`BranchingRules`Private`p]], 
           And[
           LieART`BranchingRules`Private`n >= 2, 
            LieART`BranchingRules`Private`m == 
            2 LieART`BranchingRules`Private`n - 1]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`A][
             Pattern[LieART`BranchingRules`Private`m, 
              Blank[]]]], 
           LieART`ProductAlgebra[
            LieART`Algebra[D][
             Pattern[LieART`BranchingRules`Private`n, 
              Blank[]]]]] := Condition[
           
           Module[{LieART`BranchingRules`Private`p, 
             LieART`BranchingRules`Private`bottom}, 
            LieART`BranchingRules`Private`p = 
             IdentityMatrix[LieART`BranchingRules`Private`n - 1]; 
            LieART`BranchingRules`Private`p = 
             MapThread[Append, {LieART`BranchingRules`Private`p, 
                ConstantArray[0, LieART`BranchingRules`Private`n - 1]}]; 
            LieART`BranchingRules`Private`p = 
             Join[LieART`BranchingRules`Private`p, 
               Reverse[
                IdentityMatrix[LieART`BranchingRules`Private`n - 1]], 2]; 
            LieART`BranchingRules`Private`bottom = 
             ConstantArray[0, LieART`BranchingRules`Private`n - 2]; 
            AppendTo[LieART`BranchingRules`Private`bottom, 1]; 
            AppendTo[LieART`BranchingRules`Private`bottom, 2]; 
            AppendTo[LieART`BranchingRules`Private`bottom, 1]; 
            LieART`BranchingRules`Private`bottom = 
             Join[LieART`BranchingRules`Private`bottom, 
               ConstantArray[0, LieART`BranchingRules`Private`n - 2]]; 
            AppendTo[
             LieART`BranchingRules`Private`p, 
              LieART`BranchingRules`Private`bottom]; 
            Return[LieART`BranchingRules`Private`p]], 
           And[
           LieART`BranchingRules`Private`n >= 4, 
            LieART`BranchingRules`Private`m == 
            2 LieART`BranchingRules`Private`n - 1]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`A][
             Pattern[LieART`BranchingRules`Private`r, 
              Blank[]]]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][
             Pattern[LieART`BranchingRules`Private`s, 
              Blank[]]], 
            LieART`Algebra[LieART`A][
             Pattern[LieART`BranchingRules`Private`t, 
              Blank[]]]]] := Condition[
           
           Module[{LieART`BranchingRules`Private`i, 
             LieART`BranchingRules`Private`mat}, 
            LieART`BranchingRules`Private`mat = 
             IdentityMatrix[LieART`BranchingRules`Private`s]; 
            For[LieART`BranchingRules`Private`i = 2, 
              LieART`BranchingRules`Private`i <= 
              LieART`BranchingRules`Private`t + 1, 
              Increment[LieART`BranchingRules`Private`i], 
              LieART`BranchingRules`Private`mat = 
               MapThread[Append, {LieART`BranchingRules`Private`mat, 
                  ConstantArray[0, LieART`BranchingRules`Private`s]}]; 
              LieART`BranchingRules`Private`mat = 
               Join[LieART`BranchingRules`Private`mat, 
                 IdentityMatrix[LieART`BranchingRules`Private`s], 2]; Null]; 
            For[LieART`BranchingRules`Private`i = 1, 
              LieART`BranchingRules`Private`i <= 
              LieART`BranchingRules`Private`t, 
              Increment[LieART`BranchingRules`Private`i], 
              AppendTo[LieART`BranchingRules`Private`mat, 
                Join[
                 ConstantArray[
                 0, (LieART`BranchingRules`Private`i - 1) (
                   LieART`BranchingRules`Private`s + 1)], 
                 Range[LieART`BranchingRules`Private`s + 1], 
                 Reverse[
                  Range[LieART`BranchingRules`Private`s]], 
                 ConstantArray[
                 0, LieART`BranchingRules`Private`s 
                   LieART`BranchingRules`Private`t + 
                  LieART`BranchingRules`Private`s + 
                  LieART`BranchingRules`Private`t - (
                  2 LieART`BranchingRules`Private`s + 
                  1) - (LieART`BranchingRules`Private`i - 1) (
                   LieART`BranchingRules`Private`s + 1)]]]; Null]; 
            Return[LieART`BranchingRules`Private`mat]], 
           And[
           LieART`BranchingRules`Private`s >= LieART`BranchingRules`Private`t,
             LieART`BranchingRules`Private`r == 
            LieART`BranchingRules`Private`s LieART`BranchingRules`Private`t + 
             LieART`BranchingRules`Private`s + 
             LieART`BranchingRules`Private`t]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`A][4]], 
           LieART`ProductAlgebra[
            LieART`Algebra[C][2]]] := 
         LieART`SpecialSubalgebra[LieART`BranchingRules`Private`origin, {
            LieART`ProductIrrep[
             LieART`Irrep[C][0, 1]]}], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`A][9]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][2]]] := {{3, 4, 3, 5, 2, 2, 0, 1, 0}, {0,
           1, 3, 2, 5, 5, 6, 4, 3}}, LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`A][9]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][3]]] := {{2, 2, 3, 1, 0, 1, 1, 0, 0}, {0,
           1, 0, 2, 2, 2, 0, 1, 0}, {0, 0, 1, 1, 2, 1, 3, 2, 2}}, 
         LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`A][9]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][4]]] := {{0, 1, 0, 1, 0, 1, 1, 0, 0}, {1,
           0, 0, 0, 1, 1, 0, 1, 0}, {0, 1, 2, 1, 0, 0, 0, 0, 1}, {0, 0, 0, 1, 
          2, 1, 2, 1, 0}}, LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`A][9]], 
           LieART`ProductAlgebra[
            LieART`Algebra[C][2]]] := {{2, 2, 4, 2, 2, 2, 4, 2, 2}, {0, 1, 0, 
          2, 2, 2, 0, 1, 0}}, LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`A][14]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][2]]] := {{2, 5, 5, 6, 7, 5, 7, 6, 5, 5, 
          5, 2, 3, 1}, {1, 0, 2, 2, 2, 5, 3, 4, 5, 4, 3, 5, 2, 2}}, 
         LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`A][14]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][2]], 1] := {{2, 5, 5, 6, 7, 5, 7, 6, 5, 
          5, 5, 2, 3, 1}, {1, 0, 2, 2, 2, 5, 3, 4, 5, 4, 3, 5, 2, 2}}, 
         LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`A][14]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][2]], 2] := {{4, 6, 9, 9, 10, 8, 10, 9, 5,
           5, 2, 3, 1, 0}, {0, 1, 0, 2, 2, 5, 3, 4, 8, 7, 9, 6, 6, 4}}, 
         LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`A][14]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][4]]] := {{2, 2, 3, 1, 0, 1, 0, 1, 1, 1, 
          0, 0, 0, 0}, {0, 1, 0, 2, 2, 2, 3, 3, 1, 0, 1, 0, 0, 0}, {0, 0, 1, 
          1, 2, 1, 0, 0, 2, 2, 2, 3, 1, 0}, {0, 0, 0, 0, 0, 1, 2, 1, 1, 2, 1, 
          0, 2, 2}}, LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`A][14]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][5]]] := {{0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 
          0, 0, 0, 0}, {1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0}, {0, 1, 2, 
          1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0}, {0, 0, 0, 1, 2, 1, 2, 1, 1, 0, 0, 
          0, 0, 1}, {0, 0, 0, 0, 0, 1, 1, 2, 1, 2, 1, 2, 1, 0}}, 
         LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`A][15]], 
           LieART`ProductAlgebra[
            LieART`Algebra[D][5]]] := {{0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0,
           0, 0}, {0, 0, 1, 2, 1, 1, 0, 0, 0, 1, 1, 2, 1, 0, 0}, {0, 1, 0, 0, 
          0, 0, 1, 2, 1, 0, 0, 0, 0, 1, 0}, {0, 0, 1, 0, 1, 2, 1, 0, 0, 0, 0, 
          0, 0, 0, 1}, {1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 1, 0, 1, 0, 0}}, 
         LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`A][26]], 
           LieART`ProductAlgebra[LieART`E6]] := 
         LieART`SpecialSubalgebra[LieART`BranchingRules`Private`origin, {
            LieART`ProductIrrep[
             LieART`Irrep[LieART`E6][1, 0, 0, 0, 0, 0]]}], 
         LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`B][3]], 
           LieART`ProductAlgebra[LieART`G2]] := 
         LieART`SpecialSubalgebra[LieART`BranchingRules`Private`origin, {
            LieART`ProductIrrep[
             LieART`Irrep[LieART`G2][0, 0]], 
            LieART`ProductIrrep[
             LieART`Irrep[LieART`G2][1, 0]]}], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`B][4]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1], 
            LieART`Algebra[LieART`A][1]]] := {{2, 4, 6, 3}, {2, 2, 0, 1}}, 
         LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`B][7]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][3]]] := {{1, 0, 1, 0, 0, 2, 1}, {0, 1, 2,
           4, 3, 2, 1}, {1, 2, 1, 0, 2, 2, 1}}, LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`B][7]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1], 
            LieART`Algebra[C][2]]] := {{2, 4, 6, 8, 10, 10, 5}, {0, 2, 2, 0, 
          0, 0, 1}, {1, 0, 0, 1, 0, 1, 0}}, LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`B][10]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1], 
            LieART`Algebra[LieART`B][3]]] := {{2, 4, 6, 8, 10, 12, 14, 14, 14,
           7}, {1, 0, 0, 0, 0, 1, 0, 1, 0, 0}, {0, 1, 0, 0, 1, 0, 0, 0, 1, 
          0}, {0, 0, 2, 2, 0, 0, 0, 0, 0, 1}}, LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`B][10]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`B][3]]] := {{0, 1, 0, 1, 0, 1, 0, 0, 2, 
          1}, {1, 0, 0, 0, 1, 2, 4, 3, 2, 1}, {0, 2, 4, 4, 4, 2, 0, 2, 2, 1}},
          LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`B][10]], 
           LieART`ProductAlgebra[
            LieART`Algebra[C][3]]] := {{2, 2, 0, 1, 0, 1, 0, 2, 2, 1}, {0, 1, 
          3, 2, 2, 3, 5, 4, 2, 1}, {0, 0, 0, 1, 2, 1, 0, 0, 2, 1}}, 
         LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`B][12]], 
           LieART`ProductAlgebra[
            LieART`Algebra[C][2], 
            LieART`Algebra[C][2]]] := {{0, 0, 0, 0, 0, 2, 4, 6, 8, 10, 10, 
          5}, {1, 2, 3, 4, 5, 4, 3, 2, 1, 0, 0, 0}, {0, 2, 2, 0, 0, 0, 2, 2, 
          0, 0, 0, 1}, {1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0}}, 
         LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`B][13]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][2]]] := {{2, 5, 5, 9, 7, 8, 9, 11, 13, 
          12, 11, 14, 7}, {2, 2, 5, 3, 7, 8, 9, 8, 7, 9, 11, 8, 4}}, 
         LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`B][13]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`B][3]]] := {{2, 2, 3, 1, 2, 1, 2, 1, 1, 3, 
          2, 2, 1}, {0, 1, 0, 2, 2, 2, 3, 4, 2, 1, 3, 2, 1}, {0, 0, 2, 2, 2, 
          4, 2, 2, 6, 6, 4, 6, 3}}, LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`B][13]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1], 
            LieART`Algebra[LieART`B][4]]] := {{2, 4, 6, 8, 10, 12, 14, 16, 18,
           18, 18, 18, 9}, {1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0}, {0, 1, 0, 
          0, 0, 0, 1, 0, 0, 0, 1, 0, 0}, {0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 
          0}, {0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 1}}, 
         LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`B][
             Pattern[LieART`BranchingRules`Private`n, 
              Blank[]]]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1]]] := Condition[
           
           Module[{LieART`BranchingRules`Private`mat, 
             LieART`BranchingRules`Private`k}, 
            LieART`BranchingRules`Private`mat = {}; 
            For[LieART`BranchingRules`Private`k = 1, 
              LieART`BranchingRules`Private`k < 
              LieART`BranchingRules`Private`n, 
              Increment[LieART`BranchingRules`Private`k], 
              AppendTo[
               LieART`BranchingRules`Private`mat, 
                LieART`BranchingRules`Private`k (
                 2 LieART`BranchingRules`Private`n - 
                 LieART`BranchingRules`Private`k + 1)]; Null]; 
            AppendTo[
             LieART`BranchingRules`Private`mat, (
               LieART`BranchingRules`Private`n (
                LieART`BranchingRules`Private`n + 1))/2]; 
            Return[{LieART`BranchingRules`Private`mat}]], 
           LieART`BranchingRules`Private`n >= 4], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`B][
             Pattern[LieART`BranchingRules`Private`p, 
              Blank[]]]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`B][
             Pattern[LieART`BranchingRules`Private`s, 
              Blank[]]], 
            LieART`Algebra[LieART`B][
             Pattern[LieART`BranchingRules`Private`t, 
              Blank[]]]]] := Condition[
           
           Module[{LieART`BranchingRules`Private`mat, 
             LieART`BranchingRules`Private`bottom, 
             LieART`BranchingRules`Private`q, LieART`BranchingRules`Private`b,
              LieART`BranchingRules`Private`r, 
             LieART`BranchingRules`Private`row, 
             LieART`BranchingRules`Private`m, 
             LieART`BranchingRules`Private`n}, 
            LieART`BranchingRules`Private`m = 
             2 LieART`BranchingRules`Private`s + 1; 
            LieART`BranchingRules`Private`n = 
             2 LieART`BranchingRules`Private`t + 1; 
            LieART`BranchingRules`Private`q = Join[
               IdentityMatrix[(LieART`BranchingRules`Private`n - 3)/2], 
               ConstantArray[0, {(LieART`BranchingRules`Private`n - 3)/2, 2}], 
               Reverse[
                IdentityMatrix[(LieART`BranchingRules`Private`n - 3)/2]], 2]; 
            AppendTo[LieART`BranchingRules`Private`q, 
              Join[
               ConstantArray[0, (LieART`BranchingRules`Private`n - 3)/2], {2, 
               2}, 
               ConstantArray[0, (LieART`BranchingRules`Private`n - 3)/2]]]; 
            LieART`BranchingRules`Private`q = 
             MapThread[Append, {LieART`BranchingRules`Private`q, 
                ConstantArray[0, (LieART`BranchingRules`Private`n - 1)/2]}]; 
            LieART`BranchingRules`Private`b = MapThread[Append, {
                IdentityMatrix[(LieART`BranchingRules`Private`n - 3)/2], 
                ConstantArray[0, (LieART`BranchingRules`Private`n - 3)/2]}]; 
            AppendTo[LieART`BranchingRules`Private`b, 
              Join[
               ConstantArray[0, (LieART`BranchingRules`Private`n - 3)/2], {
               1}]]; LieART`BranchingRules`Private`bottom = 
             LieART`BranchingRules`Private`q; 
            For[LieART`BranchingRules`Private`row = 2, 
              LieART`BranchingRules`Private`row <= (
                LieART`BranchingRules`Private`m - 1)/2, 
              Increment[LieART`BranchingRules`Private`row], 
              LieART`BranchingRules`Private`bottom = 
               Join[LieART`BranchingRules`Private`bottom, 
                 LieART`BranchingRules`Private`q, 2]; Null]; 
            LieART`BranchingRules`Private`bottom = 
             Join[LieART`BranchingRules`Private`bottom, 
               LieART`BranchingRules`Private`b, 2]; 
            LieART`BranchingRules`Private`mat = {}; 
            For[LieART`BranchingRules`Private`row = 1, 
              LieART`BranchingRules`Private`row <= (
                 LieART`BranchingRules`Private`m - 1)/2 - 1, 
              Increment[LieART`BranchingRules`Private`row], 
              LieART`BranchingRules`Private`r = Join[
                 ConstantArray[
                 0, LieART`BranchingRules`Private`n (
                   LieART`BranchingRules`Private`row - 1)], 
                 Range[LieART`BranchingRules`Private`n], 
                 Reverse[
                  Range[LieART`BranchingRules`Private`n - 1]], 
                 ConstantArray[
                 0, (LieART`BranchingRules`Private`m 
                    LieART`BranchingRules`Private`n - 1)/2 - 
                  LieART`BranchingRules`Private`n (
                   LieART`BranchingRules`Private`row - 1) - (
                  2 LieART`BranchingRules`Private`n - 1)]]; 
              AppendTo[
               LieART`BranchingRules`Private`mat, 
                LieART`BranchingRules`Private`r]; Null]; 
            AppendTo[LieART`BranchingRules`Private`mat, 
              Join[
               ConstantArray[
               0, (LieART`BranchingRules`Private`m 
                   LieART`BranchingRules`Private`n - 1)/2 - 
                LieART`BranchingRules`Private`n - (
                 LieART`BranchingRules`Private`n - 1)/2], 
               Range[2, 2 LieART`BranchingRules`Private`n - 2, 2], 
               ConstantArray[
               2 LieART`BranchingRules`Private`n, (
                 LieART`BranchingRules`Private`n - 1)/2], {
               LieART`BranchingRules`Private`n}]]; 
            LieART`BranchingRules`Private`mat = 
             Join[LieART`BranchingRules`Private`mat, 
               LieART`BranchingRules`Private`bottom]; 
            Return[LieART`BranchingRules`Private`mat]], 
           And[
           LieART`BranchingRules`Private`s >= LieART`BranchingRules`Private`t,
             LieART`BranchingRules`Private`t >= 2, 
            LieART`BranchingRules`Private`s >= 3, 
            LieART`BranchingRules`Private`p == (2 
               LieART`BranchingRules`Private`s) 
              LieART`BranchingRules`Private`t + 
             LieART`BranchingRules`Private`s + 
             LieART`BranchingRules`Private`t]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`B][
             Pattern[LieART`BranchingRules`Private`p, 
              Blank[]]]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`B][
             Pattern[LieART`BranchingRules`Private`s, 
              Blank[]]], 
            LieART`Algebra[C][2]]] := Condition[
           
           Module[{LieART`BranchingRules`Private`mat, 
             LieART`BranchingRules`Private`bottom, 
             LieART`BranchingRules`Private`q, LieART`BranchingRules`Private`b,
              LieART`BranchingRules`Private`r, 
             LieART`BranchingRules`Private`row, 
             LieART`BranchingRules`Private`m, 
             LieART`BranchingRules`Private`n}, 
            LieART`BranchingRules`Private`m = 
             2 LieART`BranchingRules`Private`s + 1; 
            LieART`BranchingRules`Private`n = 2 2 + 1; 
            LieART`BranchingRules`Private`q = Join[
               IdentityMatrix[(LieART`BranchingRules`Private`n - 3)/2], 
               ConstantArray[0, {(LieART`BranchingRules`Private`n - 3)/2, 2}], 
               Reverse[
                IdentityMatrix[(LieART`BranchingRules`Private`n - 3)/2]], 2]; 
            AppendTo[LieART`BranchingRules`Private`q, 
              Join[
               ConstantArray[0, (LieART`BranchingRules`Private`n - 3)/2], {2, 
               2}, 
               ConstantArray[0, (LieART`BranchingRules`Private`n - 3)/2]]]; 
            LieART`BranchingRules`Private`q = 
             MapThread[Append, {LieART`BranchingRules`Private`q, 
                ConstantArray[0, (LieART`BranchingRules`Private`n - 1)/2]}]; 
            LieART`BranchingRules`Private`b = MapThread[Append, {
                IdentityMatrix[(LieART`BranchingRules`Private`n - 3)/2], 
                ConstantArray[0, (LieART`BranchingRules`Private`n - 3)/2]}]; 
            AppendTo[LieART`BranchingRules`Private`b, 
              Join[
               ConstantArray[0, (LieART`BranchingRules`Private`n - 3)/2], {
               1}]]; LieART`BranchingRules`Private`bottom = 
             LieART`BranchingRules`Private`q; 
            For[LieART`BranchingRules`Private`row = 2, 
              LieART`BranchingRules`Private`row <= (
                LieART`BranchingRules`Private`m - 1)/2, 
              Increment[LieART`BranchingRules`Private`row], 
              LieART`BranchingRules`Private`bottom = 
               Join[LieART`BranchingRules`Private`bottom, 
                 LieART`BranchingRules`Private`q, 2]; Null]; 
            LieART`BranchingRules`Private`bottom = 
             Join[LieART`BranchingRules`Private`bottom, 
               LieART`BranchingRules`Private`b, 2]; 
            LieART`BranchingRules`Private`mat = {}; 
            For[LieART`BranchingRules`Private`row = 1, 
              LieART`BranchingRules`Private`row <= (
                 LieART`BranchingRules`Private`m - 1)/2 - 1, 
              Increment[LieART`BranchingRules`Private`row], 
              LieART`BranchingRules`Private`r = Join[
                 ConstantArray[
                 0, LieART`BranchingRules`Private`n (
                   LieART`BranchingRules`Private`row - 1)], 
                 Range[LieART`BranchingRules`Private`n], 
                 Reverse[
                  Range[LieART`BranchingRules`Private`n - 1]], 
                 ConstantArray[
                 0, (LieART`BranchingRules`Private`m 
                    LieART`BranchingRules`Private`n - 1)/2 - 
                  LieART`BranchingRules`Private`n (
                   LieART`BranchingRules`Private`row - 1) - (
                  2 LieART`BranchingRules`Private`n - 1)]]; 
              AppendTo[
               LieART`BranchingRules`Private`mat, 
                LieART`BranchingRules`Private`r]; Null]; 
            AppendTo[LieART`BranchingRules`Private`mat, 
              Join[
               ConstantArray[
               0, (LieART`BranchingRules`Private`m 
                   LieART`BranchingRules`Private`n - 1)/2 - 
                LieART`BranchingRules`Private`n - (
                 LieART`BranchingRules`Private`n - 1)/2], 
               Range[2, 2 LieART`BranchingRules`Private`n - 2, 2], 
               ConstantArray[
               2 LieART`BranchingRules`Private`n, (
                 LieART`BranchingRules`Private`n - 1)/2], {
               LieART`BranchingRules`Private`n}]]; 
            LieART`BranchingRules`Private`mat = 
             Join[LieART`BranchingRules`Private`mat, 
               LieART`BranchingRules`Private`bottom]; 
            LieART`BranchingRules`Private`mat = 
             Permute[LieART`BranchingRules`Private`mat, 
               Cycles[{{
                  Length[LieART`BranchingRules`Private`mat], 
                  Length[LieART`BranchingRules`Private`mat] - 1}}]]; 
            Return[LieART`BranchingRules`Private`mat]], 
           And[
           LieART`BranchingRules`Private`s >= 3, 
            LieART`BranchingRules`Private`p == 
            5 LieART`BranchingRules`Private`s + 2]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[C][3]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1], 
            LieART`Algebra[LieART`A][1]]] := {{2, 4, 4}, {1, 0, 1}}, 
         LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[C][5]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1], 
            LieART`Algebra[C][2]]] := 
         LieART`SpecialSubalgebra[LieART`BranchingRules`Private`origin, {
            LieART`ProductIrrep[
             LieART`Irrep[LieART`A][1], 
             LieART`Irrep[C][0, 1]]}], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[C][6]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1], 
            LieART`Algebra[C][2]]] := 
         LieART`SpecialSubalgebra[LieART`BranchingRules`Private`origin, {
            LieART`ProductIrrep[
             LieART`Irrep[LieART`A][2], 
             LieART`Irrep[C][1, 0]]}], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[C][8]], 
           LieART`ProductAlgebra[
            LieART`Algebra[C][2]]] := 
         LieART`SpecialSubalgebra[LieART`BranchingRules`Private`origin, {
            LieART`ProductIrrep[
             LieART`Irrep[C][1, 1]]}], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[C][7]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1], 
            LieART`Algebra[LieART`B][3]]] := {{1, 2, 3, 4, 5, 6, 7}, {1, 0, 0,
           0, 0, 1, 0}, {0, 1, 0, 0, 1, 0, 0}, {0, 0, 2, 2, 0, 0, 0}}, 
         LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[C][9]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1], 
            LieART`Algebra[LieART`B][4]]] := {{1, 2, 3, 4, 5, 6, 7, 8, 9}, {1,
           0, 0, 0, 0, 0, 0, 1, 0}, {0, 1, 0, 0, 0, 0, 1, 0, 0}, {0, 0, 1, 0, 
          0, 1, 0, 0, 0}, {0, 0, 0, 2, 2, 0, 0, 0, 0}}, 
         LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[C][10]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][5]]] := {{0, 0, 1, 1, 0, 1, 1, 0, 1, 
          2}, {0, 1, 0, 1, 1, 0, 1, 1, 1, 0}, {1, 0, 0, 0, 0, 1, 1, 2, 1, 
          2}, {0, 1, 2, 1, 2, 1, 1, 0, 0, 0}, {0, 0, 0, 1, 1, 2, 1, 2, 3, 2}},
          LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[C][15]], 
           LieART`ProductAlgebra[
            LieART`Algebra[C][2], 
            LieART`Algebra[C][3]]] := 
         Permute[{{1, 2, 3, 4, 5, 6, 5, 4, 3, 2, 1, 0, 0, 0, 0}, {0, 0, 0, 0, 
           0, 0, 2, 4, 6, 8, 10, 12, 12, 12, 12}, {1, 0, 0, 0, 1, 0, 1, 0, 0, 
           0, 1, 0, 1, 0, 0}, {0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0}, {
           0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1}}, 
           Cycles[{{1, 2}}]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[C][
             Pattern[LieART`BranchingRules`Private`m, 
              Blank[]]]], 
           LieART`ProductAlgebra[
            LieART`Algebra[D][
             Pattern[LieART`BranchingRules`Private`n, 
              Blank[]]], 
            LieART`Algebra[LieART`A][1]]] := Condition[
           
           Module[{LieART`BranchingRules`Private`mat, 
             LieART`BranchingRules`Private`rightSide}, 
            LieART`BranchingRules`Private`mat = 
             IdentityMatrix[LieART`BranchingRules`Private`n - 1]; 
            AppendTo[LieART`BranchingRules`Private`mat, 
              ConstantArray[0, LieART`BranchingRules`Private`n - 1]]; 
            LieART`BranchingRules`Private`mat = 
             Join[LieART`BranchingRules`Private`mat, 
               IdentityMatrix[LieART`BranchingRules`Private`n - 1]]; 
            AppendTo[LieART`BranchingRules`Private`mat, 
              ConstantArray[0, LieART`BranchingRules`Private`n - 1]]; 
            LieART`BranchingRules`Private`rightSide = 
             ConstantArray[0, LieART`BranchingRules`Private`n - 2]; 
            LieART`BranchingRules`Private`rightSide = 
             Join[LieART`BranchingRules`Private`rightSide, {1}, 
               ConstantArray[2, LieART`BranchingRules`Private`n - 1], {3, 4}]; 
            LieART`BranchingRules`Private`mat = 
             MapThread[
              Append, {
               LieART`BranchingRules`Private`mat, 
                LieART`BranchingRules`Private`rightSide}]; 
            LieART`BranchingRules`Private`rightSide = Join[
               Range[LieART`BranchingRules`Private`n], 
               Reverse[
                Range[LieART`BranchingRules`Private`n - 1]], {0}]; 
            LieART`BranchingRules`Private`mat = 
             MapThread[
              Append, {
               LieART`BranchingRules`Private`mat, 
                LieART`BranchingRules`Private`rightSide}]; Return[
              Transpose[LieART`BranchingRules`Private`mat]]], 
           And[
           LieART`BranchingRules`Private`m == 
            2 LieART`BranchingRules`Private`n, 
            LieART`BranchingRules`Private`n >= 4]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[C][4]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1], 
            LieART`Algebra[LieART`A][1], 
            LieART`Algebra[LieART`A][1]]] := {{1, 2, 3, 4}, {1, 0, 1, 0}, {1, 
          2, 1, 0}}, LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[C][6]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1], 
            LieART`Algebra[LieART`A][3]]] := {{1, 2, 3, 4, 5, 6}, {0, 1, 0, 1,
           0, 0}, {1, 0, 0, 0, 1, 0}, {0, 1, 2, 1, 0, 0}}, 
         LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[C][
             Pattern[LieART`BranchingRules`Private`n, 
              Blank[]]]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1]]] := Condition[
           LieART`SpecialSubalgebra[LieART`BranchingRules`Private`origin, {
             LieART`ProductIrrep[
              LieART`Irrep[
               LieART`Algebra[LieART`A][1]][
              2 LieART`BranchingRules`Private`n]]}], 
           LieART`BranchingRules`Private`n >= 2], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[C][
             Pattern[LieART`BranchingRules`Private`t, 
              Blank[]]]], 
           LieART`ProductAlgebra[
            LieART`Algebra[C][
             Pattern[LieART`BranchingRules`Private`m, 
              Blank[]]], 
            LieART`Algebra[D][
             Pattern[LieART`BranchingRules`Private`s, 
              Blank[]]]]] := Condition[
           
           Module[{LieART`BranchingRules`Private`mid, 
             LieART`BranchingRules`Private`bottom, 
             LieART`BranchingRules`Private`f, LieART`BranchingRules`Private`d,
              LieART`BranchingRules`Private`e, 
             LieART`BranchingRules`Private`row, 
             LieART`BranchingRules`Private`r, 
             LieART`BranchingRules`Private`mat, 
             LieART`BranchingRules`Private`n, 
             LieART`BranchingRules`Private`i}, 
            LieART`BranchingRules`Private`n = 
             2 LieART`BranchingRules`Private`s; 
            LieART`BranchingRules`Private`f = 
             IdentityMatrix[(LieART`BranchingRules`Private`n - 2)/2]; 
            LieART`BranchingRules`Private`f = 
             MapThread[Append, {LieART`BranchingRules`Private`f, 
                ConstantArray[0, (LieART`BranchingRules`Private`n - 2)/2]}]; 
            LieART`BranchingRules`Private`f = 
             Join[LieART`BranchingRules`Private`f, 
               Reverse[
                IdentityMatrix[(LieART`BranchingRules`Private`n - 2)/2]], 2]; 
            AppendTo[LieART`BranchingRules`Private`f, 
              Join[
               ConstantArray[0, (LieART`BranchingRules`Private`n - 2)/2], {
               121}, 
               ConstantArray[0, (LieART`BranchingRules`Private`n - 2)/2]]]; 
            LieART`BranchingRules`Private`d = {}; 
            For[LieART`BranchingRules`Private`row = 1, 
              LieART`BranchingRules`Private`row <= 
              LieART`BranchingRules`Private`m - 2, 
              Increment[LieART`BranchingRules`Private`row], 
              LieART`BranchingRules`Private`r = Join[
                 ConstantArray[
                 0, LieART`BranchingRules`Private`n (
                   LieART`BranchingRules`Private`row - 1)], 
                 Range[LieART`BranchingRules`Private`n], 
                 Reverse[
                  Range[LieART`BranchingRules`Private`n - 1]], 
                 ConstantArray[
                 0, LieART`BranchingRules`Private`m 
                   LieART`BranchingRules`Private`n - 
                  LieART`BranchingRules`Private`n (
                   LieART`BranchingRules`Private`row - 1) - (
                  2 LieART`BranchingRules`Private`n - 1)]]; 
              AppendTo[
               LieART`BranchingRules`Private`d, 
                LieART`BranchingRules`Private`r]; Null]; 
            LieART`BranchingRules`Private`e = {
               Join[
                Range[LieART`BranchingRules`Private`n - 1], 
                Reverse[
                 Range[0, LieART`BranchingRules`Private`n]]], 
               Join[
                ConstantArray[0, LieART`BranchingRules`Private`n], 
                Range[LieART`BranchingRules`Private`n]]}; 
            LieART`BranchingRules`Private`mid = Join[
               ConstantArray[
               0, {2, LieART`BranchingRules`Private`m 
                  LieART`BranchingRules`Private`n - 2 
                 LieART`BranchingRules`Private`n}], 
               LieART`BranchingRules`Private`e, 2]; 
            LieART`BranchingRules`Private`bottom = 
             MapThread[Append, {LieART`BranchingRules`Private`f, 
                ConstantArray[0, LieART`BranchingRules`Private`n/2]}]; 
            For[LieART`BranchingRules`Private`i = 2, 
              LieART`BranchingRules`Private`i <= 
              LieART`BranchingRules`Private`m, 
              Increment[LieART`BranchingRules`Private`i], 
              LieART`BranchingRules`Private`bottom = 
              Join[LieART`BranchingRules`Private`bottom, 
                MapThread[Append, {LieART`BranchingRules`Private`f, 
                  ConstantArray[0, LieART`BranchingRules`Private`n/2]}], 2]]; 
            LieART`BranchingRules`Private`mat = 
             Join[LieART`BranchingRules`Private`d, 
               LieART`BranchingRules`Private`mid, 
               LieART`BranchingRules`Private`bottom]; 
            Return[LieART`BranchingRules`Private`mat]], 
           And[
           LieART`BranchingRules`Private`m >= LieART`BranchingRules`Private`s,
             LieART`BranchingRules`Private`s >= 2, 
            LieART`BranchingRules`Private`m >= 3, 
            LieART`BranchingRules`Private`t == (2 
              LieART`BranchingRules`Private`s) 
             LieART`BranchingRules`Private`m]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[C][12]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1], 
            LieART`Algebra[LieART`A][1], 
            LieART`Algebra[C][3]]] := {{1, 2, 3, 4, 5, 6, 5, 4, 3, 2, 1, 0}, {
          1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}, {1, 0, 0, 0, 1, 0, 1, 0, 0, 
          0, 1, 0}, {0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0}, {0, 0, 1, 0, 0, 0, 
          0, 0, 1, 0, 0, 0}}, LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[C][
             Pattern[LieART`BranchingRules`Private`t, 
              Blank[]]]], 
           LieART`ProductAlgebra[
            LieART`Algebra[D][
             Pattern[LieART`BranchingRules`Private`s, 
              Blank[]]], 
            LieART`Algebra[C][
             Pattern[LieART`BranchingRules`Private`n, 
              Blank[]]]]] := Condition[
           
           Module[{LieART`BranchingRules`Private`row, 
             LieART`BranchingRules`Private`r, LieART`BranchingRules`Private`d,
              LieART`BranchingRules`Private`l, 
             LieART`BranchingRules`Private`p, 
             LieART`BranchingRules`Private`mid, 
             LieART`BranchingRules`Private`bottom, 
             LieART`BranchingRules`Private`mat, 
             LieART`BranchingRules`Private`m}, 
            LieART`BranchingRules`Private`m = 
             2 LieART`BranchingRules`Private`s; 
            LieART`BranchingRules`Private`d = {}; 
            For[LieART`BranchingRules`Private`row = 1, 
              LieART`BranchingRules`Private`row <= 
              LieART`BranchingRules`Private`m/2 - 2, 
              Increment[LieART`BranchingRules`Private`row], 
              LieART`BranchingRules`Private`r = Join[
                 ConstantArray[
                 0, (2 LieART`BranchingRules`Private`n) (
                   LieART`BranchingRules`Private`row - 1)], 
                 Range[2 LieART`BranchingRules`Private`n], 
                 Reverse[
                  Range[2 LieART`BranchingRules`Private`n - 1]], 
                 ConstantArray[
                 0, LieART`BranchingRules`Private`m 
                   LieART`BranchingRules`Private`n - (2 
                   LieART`BranchingRules`Private`n) (
                   LieART`BranchingRules`Private`row - 1) - (
                  4 LieART`BranchingRules`Private`n - 1)]]; 
              AppendTo[
               LieART`BranchingRules`Private`d, 
                LieART`BranchingRules`Private`r]; Null]; 
            LieART`BranchingRules`Private`l = {
               Join[
                Range[0, 2 LieART`BranchingRules`Private`n], 
                Reverse[
                 Range[0, 2 LieART`BranchingRules`Private`n - 1]]], 
               Range[0, 4 LieART`BranchingRules`Private`n]}; 
            LieART`BranchingRules`Private`p = MapThread[Append, {
                IdentityMatrix[LieART`BranchingRules`Private`n - 1], 
                ConstantArray[0, LieART`BranchingRules`Private`n - 1]}]; 
            LieART`BranchingRules`Private`p = 
             Join[LieART`BranchingRules`Private`p, 
               Reverse[
                IdentityMatrix[LieART`BranchingRules`Private`n - 1]], 2]; 
            AppendTo[LieART`BranchingRules`Private`p, 
              Join[
               ConstantArray[0, LieART`BranchingRules`Private`n - 1], {1}, 
               ConstantArray[0, LieART`BranchingRules`Private`n - 1]]]; 
            LieART`BranchingRules`Private`p = 
             MapThread[Append, {LieART`BranchingRules`Private`p, 
                ConstantArray[0, LieART`BranchingRules`Private`n]}]; 
            LieART`BranchingRules`Private`mid = Join[
               ConstantArray[
               0, {2, LieART`BranchingRules`Private`m 
                  LieART`BranchingRules`Private`n - 4 
                 LieART`BranchingRules`Private`n - 1}], 
               LieART`BranchingRules`Private`l, 2]; 
            LieART`BranchingRules`Private`bottom = 
             LieART`BranchingRules`Private`p; 
            For[LieART`BranchingRules`Private`row = 2, 
              LieART`BranchingRules`Private`row <= 
              LieART`BranchingRules`Private`m/2, 
              Increment[LieART`BranchingRules`Private`row], 
              LieART`BranchingRules`Private`bottom = 
              Join[LieART`BranchingRules`Private`bottom, 
                LieART`BranchingRules`Private`p, 2]]; 
            LieART`BranchingRules`Private`mat = 
             Join[LieART`BranchingRules`Private`d, 
               LieART`BranchingRules`Private`mid, 
               LieART`BranchingRules`Private`bottom]; 
            Return[LieART`BranchingRules`Private`mat]], 
           And[
           LieART`BranchingRules`Private`n >= 2, 
            LieART`BranchingRules`Private`s >= 
            LieART`BranchingRules`Private`n, LieART`BranchingRules`Private`s >= 
            3, LieART`BranchingRules`Private`t == (2 
              LieART`BranchingRules`Private`s) 
             LieART`BranchingRules`Private`n]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[C][12]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][3], 
            LieART`Algebra[C][2]]] := {{0, 0, 0, 0, 1, 2, 3, 4, 3, 2, 1, 0}, {
          1, 2, 3, 4, 3, 2, 1, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 
          7, 8}, {1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0}, {0, 1, 0, 0, 0, 1, 0, 
          0, 0, 1, 0, 0}}, LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[C][
             Pattern[LieART`BranchingRules`Private`t, 
              Blank[]]]], 
           LieART`ProductAlgebra[
            LieART`Algebra[C][
             Pattern[LieART`BranchingRules`Private`m, 
              Blank[]]], 
            LieART`Algebra[LieART`B][
             Pattern[LieART`BranchingRules`Private`k, 
              Blank[]]]]] := Condition[
           
           Module[{LieART`BranchingRules`Private`row, 
             LieART`BranchingRules`Private`r, LieART`BranchingRules`Private`d,
              LieART`BranchingRules`Private`s, 
             LieART`BranchingRules`Private`q, 
             LieART`BranchingRules`Private`mid, 
             LieART`BranchingRules`Private`bottom, 
             LieART`BranchingRules`Private`mat, 
             LieART`BranchingRules`Private`n}, 
            LieART`BranchingRules`Private`n = 
             2 LieART`BranchingRules`Private`k + 1; 
            LieART`BranchingRules`Private`d = {}; 
            For[LieART`BranchingRules`Private`row = 1, 
              LieART`BranchingRules`Private`row <= 
              LieART`BranchingRules`Private`m - 2, 
              Increment[LieART`BranchingRules`Private`row], 
              LieART`BranchingRules`Private`r = Join[
                 ConstantArray[
                 0, LieART`BranchingRules`Private`n (
                   LieART`BranchingRules`Private`row - 1)], 
                 Range[LieART`BranchingRules`Private`n], 
                 Reverse[
                  Range[LieART`BranchingRules`Private`n - 1]], 
                 ConstantArray[
                 0, LieART`BranchingRules`Private`m 
                   LieART`BranchingRules`Private`n - 
                  LieART`BranchingRules`Private`n (
                   LieART`BranchingRules`Private`row - 1) - (
                  2 LieART`BranchingRules`Private`n - 1)]]; 
              AppendTo[
               LieART`BranchingRules`Private`d, 
                LieART`BranchingRules`Private`r]; Null]; 
            LieART`BranchingRules`Private`s = {
               Join[
                Range[0, LieART`BranchingRules`Private`n], 
                Reverse[
                 Range[0, LieART`BranchingRules`Private`n - 1]]], 
               Join[
                ConstantArray[0, LieART`BranchingRules`Private`n + 1], 
                Range[LieART`BranchingRules`Private`n]]}; 
            LieART`BranchingRules`Private`q = Join[
               IdentityMatrix[(LieART`BranchingRules`Private`n - 3)/2], 
               ConstantArray[0, {(LieART`BranchingRules`Private`n - 3)/2, 2}], 
               Reverse[
                IdentityMatrix[(LieART`BranchingRules`Private`n - 3)/2]], 2]; 
            AppendTo[LieART`BranchingRules`Private`q, 
              Join[
               ConstantArray[0, (LieART`BranchingRules`Private`n - 3)/2], {2, 
               2}, 
               ConstantArray[0, (LieART`BranchingRules`Private`n - 3)/2]]]; 
            LieART`BranchingRules`Private`q = 
             MapThread[Append, {LieART`BranchingRules`Private`q, 
                ConstantArray[0, (LieART`BranchingRules`Private`n - 1)/2]}]; 
            LieART`BranchingRules`Private`mid = Join[
               ConstantArray[
               0, {2, LieART`BranchingRules`Private`m 
                  LieART`BranchingRules`Private`n - 2 
                 LieART`BranchingRules`Private`n - 1}], 
               LieART`BranchingRules`Private`s, 2]; 
            LieART`BranchingRules`Private`bottom = 
             LieART`BranchingRules`Private`q; 
            For[LieART`BranchingRules`Private`row = 2, 
              LieART`BranchingRules`Private`row <= 
              LieART`BranchingRules`Private`m, 
              Increment[LieART`BranchingRules`Private`row], 
              LieART`BranchingRules`Private`bottom = 
               Join[LieART`BranchingRules`Private`bottom, 
                 LieART`BranchingRules`Private`q, 2]; Null]; 
            LieART`BranchingRules`Private`mat = 
             Join[LieART`BranchingRules`Private`d, 
               LieART`BranchingRules`Private`mid, 
               LieART`BranchingRules`Private`bottom]; 
            Return[LieART`BranchingRules`Private`mat]], 
           And[
           LieART`BranchingRules`Private`m >= LieART`BranchingRules`Private`k,
             LieART`BranchingRules`Private`k >= 2, 
            LieART`BranchingRules`Private`t == 
            LieART`BranchingRules`Private`m (
              2 LieART`BranchingRules`Private`k + 1)]], 
         LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[C][10]], 
           LieART`ProductAlgebra[
            LieART`Algebra[C][2], 
            LieART`Algebra[C][2]]] := {{1, 2, 3, 4, 5, 4, 3, 2, 1, 0}, {0, 0, 
          0, 0, 0, 1, 2, 3, 4, 5}, {0, 2, 2, 0, 0, 0, 2, 2, 0, 0}, {1, 0, 0, 
          1, 0, 1, 0, 0, 1, 0}}, LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[C][
             Pattern[LieART`BranchingRules`Private`k, 
              Blank[]]]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`B][
             Pattern[LieART`BranchingRules`Private`s, 
              Blank[]]], 
            LieART`Algebra[C][
             Pattern[LieART`BranchingRules`Private`n, 
              Blank[]]]]] := Condition[
           
           Module[{LieART`BranchingRules`Private`row, 
             LieART`BranchingRules`Private`r, LieART`BranchingRules`Private`d,
              LieART`BranchingRules`Private`bottom, 
             LieART`BranchingRules`Private`p, LieART`BranchingRules`Private`t,
              LieART`BranchingRules`Private`mat, 
             LieART`BranchingRules`Private`m}, 
            LieART`BranchingRules`Private`m = 
             2 LieART`BranchingRules`Private`s + 1; 
            LieART`BranchingRules`Private`d = {}; 
            For[LieART`BranchingRules`Private`row = 1, 
              LieART`BranchingRules`Private`row <= (
                LieART`BranchingRules`Private`m - 3)/2, 
              Increment[LieART`BranchingRules`Private`row], 
              LieART`BranchingRules`Private`r = Join[
                 ConstantArray[
                 0, (2 LieART`BranchingRules`Private`n) (
                   LieART`BranchingRules`Private`row - 1)], 
                 Range[2 LieART`BranchingRules`Private`n], 
                 Reverse[
                  Range[2 LieART`BranchingRules`Private`n - 1]], 
                 ConstantArray[
                 0, LieART`BranchingRules`Private`m 
                   LieART`BranchingRules`Private`n - (2 
                   LieART`BranchingRules`Private`n) (
                   LieART`BranchingRules`Private`row - 1) - (
                  4 LieART`BranchingRules`Private`n - 1)]]; 
              AppendTo[
               LieART`BranchingRules`Private`d, 
                LieART`BranchingRules`Private`r]; Null]; 
            LieART`BranchingRules`Private`p = MapThread[Append, {
                IdentityMatrix[LieART`BranchingRules`Private`n - 1], 
                ConstantArray[0, LieART`BranchingRules`Private`n - 1]}]; 
            LieART`BranchingRules`Private`p = 
             Join[LieART`BranchingRules`Private`p, 
               Reverse[
                IdentityMatrix[LieART`BranchingRules`Private`n - 1]], 2]; 
            AppendTo[LieART`BranchingRules`Private`p, 
              Join[
               ConstantArray[0, LieART`BranchingRules`Private`n - 1], {1}, 
               ConstantArray[0, LieART`BranchingRules`Private`n - 1]]]; 
            LieART`BranchingRules`Private`p = 
             MapThread[Append, {LieART`BranchingRules`Private`p, 
                ConstantArray[0, LieART`BranchingRules`Private`n]}]; 
            LieART`BranchingRules`Private`t = MapThread[Append, {
                IdentityMatrix[LieART`BranchingRules`Private`n - 1], 
                ConstantArray[0, LieART`BranchingRules`Private`n - 1]}]; 
            AppendTo[LieART`BranchingRules`Private`t, 
              Join[
               ConstantArray[0, LieART`BranchingRules`Private`n - 1], {1}]]; 
            LieART`BranchingRules`Private`bottom = 
             LieART`BranchingRules`Private`p; 
            For[LieART`BranchingRules`Private`row = 2, 
              LieART`BranchingRules`Private`row <= (
                LieART`BranchingRules`Private`m - 1)/2, 
              Increment[LieART`BranchingRules`Private`row], 
              LieART`BranchingRules`Private`bottom = 
               Join[LieART`BranchingRules`Private`bottom, 
                 LieART`BranchingRules`Private`p, 2]; Null]; 
            LieART`BranchingRules`Private`bottom = 
             Join[LieART`BranchingRules`Private`bottom, 
               LieART`BranchingRules`Private`t, 2]; 
            LieART`BranchingRules`Private`mat = 
             LieART`BranchingRules`Private`d; 
            AppendTo[LieART`BranchingRules`Private`mat, 
              Join[
               ConstantArray[
               0, LieART`BranchingRules`Private`m 
                 LieART`BranchingRules`Private`n - 3 
                LieART`BranchingRules`Private`n], 
               Range[2, 4 LieART`BranchingRules`Private`n, 2], 
               ConstantArray[
               4 LieART`BranchingRules`Private`n, 
                LieART`BranchingRules`Private`n]]]; 
            LieART`BranchingRules`Private`mat = 
             Join[LieART`BranchingRules`Private`mat, 
               LieART`BranchingRules`Private`bottom]; 
            Return[LieART`BranchingRules`Private`mat]; Null], 
           And[
           LieART`BranchingRules`Private`s >= LieART`BranchingRules`Private`n,
             LieART`BranchingRules`Private`n > 1, 
            LieART`BranchingRules`Private`k == 
            LieART`BranchingRules`Private`n (
              2 LieART`BranchingRules`Private`s + 1)]], 
         LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[C][
             Pattern[LieART`BranchingRules`Private`n, 
              Blank[]]]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1], 
            LieART`Algebra[C][
             Pattern[LieART`BranchingRules`Private`m, 
              Blank[]]]]] := Condition[
           
           Module[{LieART`BranchingRules`Private`top, 
             LieART`BranchingRules`Private`bottom, 
             LieART`BranchingRules`Private`mat}, 
            LieART`BranchingRules`Private`top = {
               Join[
                Range[2, 4 LieART`BranchingRules`Private`m, 2], 
                ConstantArray[
                4 LieART`BranchingRules`Private`m, 
                 LieART`BranchingRules`Private`m]]}; 
            LieART`BranchingRules`Private`bottom = Join[
               IdentityMatrix[LieART`BranchingRules`Private`m], 
               Join[
                Reverse[
                 IdentityMatrix[LieART`BranchingRules`Private`m - 1]], {
                 ConstantArray[0, LieART`BranchingRules`Private`m - 1]}], 2]; 
            LieART`BranchingRules`Private`bottom = 
             MapThread[Append, {LieART`BranchingRules`Private`bottom, 
                ConstantArray[0, LieART`BranchingRules`Private`m]}]; 
            LieART`BranchingRules`Private`bottom = 
             Join[LieART`BranchingRules`Private`bottom, 
               IdentityMatrix[LieART`BranchingRules`Private`m], 2]; 
            LieART`BranchingRules`Private`mat = 
             Join[LieART`BranchingRules`Private`top, 
               LieART`BranchingRules`Private`bottom]; 
            LieART`BranchingRules`Private`mat], 
           And[
           LieART`BranchingRules`Private`n == 
            3 LieART`BranchingRules`Private`m, 
            LieART`BranchingRules`Private`m >= 3]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[C][28]], 
           LieART`ProductAlgebra[LieART`E7]] := 
         LieART`SpecialSubalgebra[LieART`BranchingRules`Private`origin, {
            LieART`ProductIrrep[
             LieART`Irrep[LieART`E7][0, 0, 0, 0, 0, 1, 0]]}], 
         LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[D][4]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][2]]] := 
         LieART`SpecialSubalgebra[LieART`BranchingRules`Private`origin, {
            LieART`ProductIrrep[
             LieART`Irrep[LieART`A][1, 1]]}], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[D][4]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`B][3]]] := 
         LieART`SpecialSubalgebra[LieART`BranchingRules`Private`origin, {
            LieART`ProductIrrep[
             LieART`Irrep[LieART`B][0, 0, 0]], 
            LieART`ProductIrrep[
             LieART`Irrep[LieART`B][1, 0, 0]]}], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[D][5]], 
           LieART`ProductAlgebra[
            LieART`Algebra[C][2]]] := {{2, 2, 4, 1, 1}, {0, 1, 0, 1, 1}}, 
         LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[D][5]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1], 
            LieART`Algebra[LieART`B][3]]] := 
         LieART`SpecialSubalgebra[LieART`BranchingRules`Private`origin, {
            LieART`ProductIrrep[
             LieART`Irrep[LieART`A][1], 
             LieART`Irrep[LieART`B][0, 0, 1]]}], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[D][5]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`B][4]]] := 
         LieART`SpecialSubalgebra[LieART`BranchingRules`Private`origin, {
            LieART`ProductIrrep[
             LieART`Irrep[LieART`B][0, 0, 0, 1]]}], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[D][6]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1], 
            LieART`Algebra[LieART`A][1], 
            LieART`Algebra[LieART`A][1]]] := {{2, 4, 6, 8, 4, 4}, {1, 2, 1, 0,
           0, 1}, {1, 0, 1, 0, 1, 0}}, LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[D][7]], 
           LieART`ProductAlgebra[
            LieART`Algebra[C][2]]] := {{0, 2, 6, 6, 8, 3, 3}, {2, 2, 0, 1, 0, 
          1, 1}}, LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[D][7]], 
           LieART`ProductAlgebra[
            LieART`Algebra[C][3]]] := {{0, 1, 0, 1, 0, 1, 1}, {1, 0, 0, 1, 3, 
          1, 1}, {0, 1, 2, 1, 0, 0, 0}}, LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[D][7]], 
           LieART`ProductAlgebra[LieART`G2]] := 
         Permute[{{1, 0, 0, 1, 0, 1, 1}, {0, 3, 4, 3, 5, 1, 1}}, 
           Cycles[{{1, 2}}]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[D][8]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`B][4]]] := {{0, 0, 0, 1, 1, 0, 1, 0}, {0, 0,
           1, 0, 1, 1, 0, 0}, {0, 1, 0, 0, 0, 0, 0, 1}, {1, 0, 1, 2, 1, 2, 1, 
          0}}, LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[D][9]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1], 
            LieART`Algebra[LieART`A][3]]] := {{2, 4, 6, 8, 10, 12, 12, 6, 
          6}, {0, 1, 0, 1, 0, 0, 0, 1, 0}, {1, 0, 0, 0, 1, 0, 1, 0, 0}, {0, 1,
           2, 1, 0, 0, 0, 0, 1}}, LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[D][10]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1], 
            LieART`Algebra[LieART`A][1], 
            LieART`Algebra[C][2]]] := {{1, 2, 3, 4, 5, 4, 3, 2, 1, 0}, {1, 2, 
          3, 4, 5, 6, 7, 8, 4, 5}, {0, 2, 2, 0, 0, 0, 2, 2, 0, 0}, {1, 0, 0, 
          1, 0, 1, 0, 0, 1, 0}}, LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[D][10]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][3]]] := {{0, 1, 0, 2, 3, 3, 2, 4, 1, 
          1}, {2, 2, 3, 1, 2, 1, 3, 2, 1, 1}, {0, 1, 2, 4, 3, 5, 4, 4, 3, 3}},
          LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[D][12]], 
           LieART`ProductAlgebra[
            LieART`Algebra[C][3], 
            LieART`Algebra[C][2]]] := {{1, 2, 3, 4, 3, 2, 1, 0, 0, 0, 0, 0}, {
          0, 0, 0, 0, 1, 2, 3, 4, 3, 2, 1, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 
          1, 2}, {1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0}, {0, 1, 0, 0, 0, 1, 0, 
          0, 0, 1, 0, 0}}, LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[D][12]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1], 
            LieART`Algebra[D][4]]] := {{2, 4, 6, 8, 10, 12, 14, 16, 16, 16, 8,
           8}, {1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0}, {0, 1, 0, 0, 0, 1, 0, 0, 
          0, 1, 0, 0}, {0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0}, {0, 0, 1, 2, 1, 
          0, 0, 0, 0, 0, 0, 1}}, LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[D][12]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][4]]] := {{1, 2, 1, 0, 0, 1, 3, 2, 2, 2, 
          1, 1}, {0, 0, 1, 2, 1, 2, 1, 3, 2, 2, 1, 1}, {0, 1, 1, 2, 3, 2, 2, 
          1, 3, 2, 1, 1}, {1, 0, 1, 0, 1, 1, 1, 1, 0, 2, 1, 1}}, 
         LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[D][13]], 
           LieART`ProductAlgebra[LieART`F4]] := {{0, 0, 0, 1, 0, 1, 0, 1, 1, 
          0, 0, 0, 0}, {0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0}, {0, 1, 0, 1, 
          2, 1, 0, 0, 1, 1, 0, 1, 1}, {1, 0, 0, 0, 0, 1, 2, 1, 2, 1, 3, 1, 
          1}}, LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[D][14]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1], 
            LieART`Algebra[LieART`A][1], 
            LieART`Algebra[LieART`B][3]]] := {{1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 
          3, 2, 1, 0}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 6, 7}, {1, 0, 
          0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0}, {0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 
          0, 1, 0, 0}, {0, 0, 2, 2, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0}}, 
         LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[D][15]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1], 
            LieART`Algebra[D][5]]] := {{2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 
          20, 20, 20, 10, 10}, {1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 
          0}, {0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0}, {0, 0, 1, 0, 0, 
          0, 1, 0, 0, 0, 0, 0, 1, 0, 0}, {0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 
          0, 1, 0}, {0, 0, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1}}, 
         LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[D][15]], 
           LieART`ProductAlgebra[
            LieART`Algebra[C][2], 
            LieART`Algebra[LieART`A][3]]] := {{0, 0, 0, 0, 0, 0, 2, 4, 6, 8, 
          10, 12, 12, 6, 6}, {1, 2, 3, 4, 5, 6, 5, 4, 3, 2, 1, 0, 0, 0, 0}, {
          0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0}, {1, 0, 0, 0, 1, 0, 1, 
          0, 0, 0, 1, 0, 1, 0, 0}, {0, 1, 2, 1, 0, 0, 0, 1, 2, 1, 0, 0, 0, 0, 
          1}}, LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[D][16]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1], 
            LieART`Algebra[LieART`A][1], 
            LieART`Algebra[D][4]]] := {{1, 2, 3, 4, 5, 6, 7, 8, 7, 6, 5, 4, 3,
           2, 1, 0}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 7, 8}, {
          1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0}, {0, 1, 0, 0, 0, 1, 
          0, 0, 0, 1, 0, 0, 0, 1, 0, 0}, {0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 
          1, 0, 0, 0}, {0, 0, 1, 2, 1, 0, 0, 0, 0, 0, 1, 2, 1, 0, 0, 0}}, 
         LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[D][
             Pattern[LieART`BranchingRules`Private`n, 
              Blank[]]]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`B][
             Pattern[LieART`BranchingRules`Private`m, 
              Blank[]]]]] := Condition[
           
           Module[{LieART`BranchingRules`Private`mat, 
             LieART`BranchingRules`Private`rightSide}, 
            If[LieART`BranchingRules`Private`n == 2, 
              LieART`BranchingRules`Private`mat = {}, 
              LieART`BranchingRules`Private`mat = 
              IdentityMatrix[LieART`BranchingRules`Private`n - 2]]; 
            AppendTo[LieART`BranchingRules`Private`mat, 
              ConstantArray[0, LieART`BranchingRules`Private`n - 2]]; 
            AppendTo[LieART`BranchingRules`Private`mat, 
              ConstantArray[0, LieART`BranchingRules`Private`n - 2]]; 
            LieART`BranchingRules`Private`rightSide = 
             ConstantArray[0, LieART`BranchingRules`Private`n - 2]; 
            LieART`BranchingRules`Private`rightSide = 
             Join[LieART`BranchingRules`Private`rightSide, {1, 1}]; 
            LieART`BranchingRules`Private`mat = 
             MapThread[
              Append, {
               LieART`BranchingRules`Private`mat, 
                LieART`BranchingRules`Private`rightSide}]; Return[
              Transpose[LieART`BranchingRules`Private`mat]]], 
           And[
           LieART`BranchingRules`Private`n >= 3, 
            LieART`BranchingRules`Private`m == 
            LieART`BranchingRules`Private`n - 1]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[D][
             Pattern[LieART`BranchingRules`Private`n, 
              Blank[]]]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`B][
             Pattern[LieART`BranchingRules`Private`r, 
              Blank[]]], 
            LieART`Algebra[LieART`B][
             Pattern[LieART`BranchingRules`Private`s, 
              Blank[]]]]] := Condition[
           
           Module[{LieART`BranchingRules`Private`mat, 
             LieART`BranchingRules`Private`mid, 
             LieART`BranchingRules`Private`right}, 
            If[LieART`BranchingRules`Private`r == 1, 
              LieART`BranchingRules`Private`mat = {}, 
              LieART`BranchingRules`Private`mat = 
              IdentityMatrix[LieART`BranchingRules`Private`r - 1]]; 
            LieART`BranchingRules`Private`mat = 
             Join[LieART`BranchingRules`Private`mat, 
               ConstantArray[
               0, {LieART`BranchingRules`Private`n - 
                 LieART`BranchingRules`Private`r + 1, 
                 LieART`BranchingRules`Private`r - 1}]]; 
            LieART`BranchingRules`Private`mid = Join[
               ConstantArray[0, LieART`BranchingRules`Private`r - 1], 
               ConstantArray[
               2, LieART`BranchingRules`Private`n - 
                LieART`BranchingRules`Private`r - 1], {1, 1}]; 
            LieART`BranchingRules`Private`mat = 
             MapThread[
              Append, {
               LieART`BranchingRules`Private`mat, 
                LieART`BranchingRules`Private`mid}]; 
            If[LieART`BranchingRules`Private`n - 
               LieART`BranchingRules`Private`r - 1 != 0, 
              LieART`BranchingRules`Private`right = 
               ConstantArray[
                0, {LieART`BranchingRules`Private`r, 
                  LieART`BranchingRules`Private`n - 
                  LieART`BranchingRules`Private`r - 1}]; 
              LieART`BranchingRules`Private`right = 
               Join[LieART`BranchingRules`Private`right, 
                 IdentityMatrix[
                 LieART`BranchingRules`Private`n - 
                  LieART`BranchingRules`Private`r - 1]]; 
              AppendTo[LieART`BranchingRules`Private`right, 
                Join[
                 ConstantArray[
                 0, LieART`BranchingRules`Private`n - 
                  LieART`BranchingRules`Private`r - 2], {1}]]; 
              LieART`BranchingRules`Private`mat = 
               Join[LieART`BranchingRules`Private`mat, 
                 LieART`BranchingRules`Private`right, 2]; Null]; Return[
              Transpose[LieART`BranchingRules`Private`mat]]; Null], 
           And[
           LieART`BranchingRules`Private`n >= 7, 
            LieART`BranchingRules`Private`r > 2, 
            LieART`BranchingRules`Private`s > 2, 
            LieART`BranchingRules`Private`r <= 
            LieART`BranchingRules`Private`n - 2, 
            LieART`BranchingRules`Private`s == 
            LieART`BranchingRules`Private`n - LieART`BranchingRules`Private`r - 
             1]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[D][
             Pattern[LieART`BranchingRules`Private`m, 
              Blank[]]]], 
           LieART`ProductAlgebra[
            LieART`Algebra[C][
             Pattern[LieART`BranchingRules`Private`n, 
              Blank[]]], 
            LieART`Algebra[LieART`A][1]]] := Condition[
           
           Module[{LieART`BranchingRules`Private`mat, 
             LieART`BranchingRules`Private`right}, 
            LieART`BranchingRules`Private`mat = 
             IdentityMatrix[LieART`BranchingRules`Private`n]; 
            If[LieART`BranchingRules`Private`n > 1, 
              LieART`BranchingRules`Private`mat = 
               Join[LieART`BranchingRules`Private`mat, 
                 MapThread[Append, {
                   Reverse[
                    IdentityMatrix[LieART`BranchingRules`Private`n - 1]], 
                   ConstantArray[0, LieART`BranchingRules`Private`n - 1]}]]; 
              Null]; AppendTo[LieART`BranchingRules`Private`mat, 
              ConstantArray[0, LieART`BranchingRules`Private`n]]; 
            LieART`BranchingRules`Private`right = Join[
               Range[LieART`BranchingRules`Private`n], 
               Range[
               LieART`BranchingRules`Private`n + 1, 
                2 LieART`BranchingRules`Private`n - 2]]; 
            If[LieART`BranchingRules`Private`n > 1, 
              LieART`BranchingRules`Private`right = 
              Join[LieART`BranchingRules`Private`right, {
                LieART`BranchingRules`Private`n - 1}]]; 
            LieART`BranchingRules`Private`right = 
             Join[LieART`BranchingRules`Private`right, {
               LieART`BranchingRules`Private`n}]; 
            LieART`BranchingRules`Private`mat = 
             MapThread[
              Append, {
               LieART`BranchingRules`Private`mat, 
                LieART`BranchingRules`Private`right}]; Return[
              Transpose[LieART`BranchingRules`Private`mat]]], 
           And[
           LieART`BranchingRules`Private`n >= 2, 
            LieART`BranchingRules`Private`m == 
            2 LieART`BranchingRules`Private`n]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[D][
             Pattern[LieART`BranchingRules`Private`n, 
              Blank[]]]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1], 
            LieART`Algebra[LieART`B][
             Pattern[LieART`BranchingRules`Private`m, 
              Blank[]]]]] := Condition[
           
           Module[{LieART`BranchingRules`Private`mat, 
             LieART`BranchingRules`Private`mid}, 
            LieART`BranchingRules`Private`mat = Join[
               ConstantArray[2, LieART`BranchingRules`Private`n - 2], {1, 1}]; 
            LieART`BranchingRules`Private`mid = Transpose[
               Join[{
                 ConstantArray[0, LieART`BranchingRules`Private`n - 3]}, 
                IdentityMatrix[LieART`BranchingRules`Private`n - 3], {
                 ConstantArray[0, LieART`BranchingRules`Private`n - 3]}]]; 
            LieART`BranchingRules`Private`mid = 
             MapThread[Append, {LieART`BranchingRules`Private`mid, 
                ConstantArray[0, LieART`BranchingRules`Private`n - 3]}]; 
            LieART`BranchingRules`Private`mat = 
             Join[{LieART`BranchingRules`Private`mat}, 
               LieART`BranchingRules`Private`mid]; 
            AppendTo[LieART`BranchingRules`Private`mat, 
              Join[
               ConstantArray[0, LieART`BranchingRules`Private`n - 2], {1, 
               1}]]; Return[LieART`BranchingRules`Private`mat]; Null], 
           And[
           LieART`BranchingRules`Private`n >= 5, 
            LieART`BranchingRules`Private`m == 
            LieART`BranchingRules`Private`n - 2]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[D][
             Pattern[LieART`BranchingRules`Private`n, 
              Blank[]]]], 
           LieART`ProductAlgebra[
            LieART`Algebra[C][2], 
            LieART`Algebra[LieART`B][
             Pattern[LieART`BranchingRules`Private`m, 
              Blank[]]]]] := Condition[
           
           Module[{LieART`BranchingRules`Private`mat, 
             LieART`BranchingRules`Private`mid}, 
            LieART`BranchingRules`Private`mid = Join[
               ConstantArray[0, {LieART`BranchingRules`Private`n - 4, 3}], 
               IdentityMatrix[LieART`BranchingRules`Private`n - 4], 2]; 
            LieART`BranchingRules`Private`mid = 
             MapThread[Append, {LieART`BranchingRules`Private`mid, 
                ConstantArray[0, LieART`BranchingRules`Private`n - 4]}]; 
            LieART`BranchingRules`Private`mat = Join[{
                Join[{0}, 
                 ConstantArray[2, LieART`BranchingRules`Private`n - 3], {1, 
                 1}]}, {
                Join[{1}, 
                 ConstantArray[0, LieART`BranchingRules`Private`n - 1]]}, 
               LieART`BranchingRules`Private`mid, {
                Join[
                 ConstantArray[0, LieART`BranchingRules`Private`n - 2], {-1, 
                 1}]}]; Return[LieART`BranchingRules`Private`mat]], 
           And[
           LieART`BranchingRules`Private`n >= 6, 
            LieART`BranchingRules`Private`m == 
            LieART`BranchingRules`Private`n - 3]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[D][5]], 
           LieART`ProductAlgebra[
            LieART`Algebra[C][2], 
            LieART`Algebra[C][2]]] := {{0, 2, 2, 1, 1}, {1, 0, 0, 0, 0}, {0, 
          0, 0, -1, 1}, {0, 0, 0, 1, 0}}, LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[D][4]], 
           LieART`ProductAlgebra[
            LieART`Algebra[C][2], 
            LieART`Algebra[LieART`A][1]]] := LieART`SpecialSubalgebra[
           LieART`Algebra[D][4], {
            LieART`ProductIrrep[
             LieART`Irrep[C][0, 0], 
             LieART`Irrep[LieART`A][2]], 
            LieART`ProductIrrep[
             LieART`Irrep[C][0, 1], 
             LieART`Irrep[LieART`A][0]]}], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[D][
             Pattern[LieART`BranchingRules`Private`s, 
              Blank[]]]], 
           LieART`ProductAlgebra[
            LieART`Algebra[C][
             Pattern[LieART`BranchingRules`Private`m, 
              Blank[]]], 
            LieART`Algebra[C][
             Pattern[LieART`BranchingRules`Private`n, 
              Blank[]]]]] := Condition[
           
           Module[{LieART`BranchingRules`Private`row, 
             LieART`BranchingRules`Private`r, LieART`BranchingRules`Private`d,
              LieART`BranchingRules`Private`j, 
             LieART`BranchingRules`Private`k, 
             LieART`BranchingRules`Private`mid, 
             LieART`BranchingRules`Private`bottom, 
             LieART`BranchingRules`Private`mat}, 
            LieART`BranchingRules`Private`d = {}; 
            For[LieART`BranchingRules`Private`row = 1, 
              LieART`BranchingRules`Private`row <= 
              LieART`BranchingRules`Private`m - 2, 
              Increment[LieART`BranchingRules`Private`row], 
              LieART`BranchingRules`Private`r = Join[
                 ConstantArray[
                 0, (2 LieART`BranchingRules`Private`n) (
                   LieART`BranchingRules`Private`row - 1)], 
                 Range[2 LieART`BranchingRules`Private`n], 
                 Reverse[
                  Range[2 LieART`BranchingRules`Private`n - 1]], 
                 ConstantArray[
                 0, (2 LieART`BranchingRules`Private`m) 
                   LieART`BranchingRules`Private`n - (2 
                   LieART`BranchingRules`Private`n) (
                   LieART`BranchingRules`Private`row - 1) - (
                  4 LieART`BranchingRules`Private`n - 1)]]; 
              AppendTo[
               LieART`BranchingRules`Private`d, 
                LieART`BranchingRules`Private`r]; Null]; 
            LieART`BranchingRules`Private`j = {
               Join[
                Range[0, 2 LieART`BranchingRules`Private`n], 
                Reverse[
                 Range[2 LieART`BranchingRules`Private`n - 1]], {0}], 
               Join[
                ConstantArray[0, 2 LieART`BranchingRules`Private`n + 1], 
                Range[2 LieART`BranchingRules`Private`n - 2], {
                LieART`BranchingRules`Private`n - 1, 
                 LieART`BranchingRules`Private`n}]}; 
            LieART`BranchingRules`Private`k = MapThread[Append, {
                IdentityMatrix[LieART`BranchingRules`Private`n - 1], 
                ConstantArray[0, LieART`BranchingRules`Private`n - 1]}]; 
            LieART`BranchingRules`Private`k = 
             Join[LieART`BranchingRules`Private`k, 
               Reverse[
                IdentityMatrix[LieART`BranchingRules`Private`n - 1]], 2]; 
            AppendTo[LieART`BranchingRules`Private`k, 
              Join[
               ConstantArray[0, LieART`BranchingRules`Private`n - 1], {1}, 
               ConstantArray[0, LieART`BranchingRules`Private`n - 1]]]; 
            LieART`BranchingRules`Private`k = 
             MapThread[Append, {LieART`BranchingRules`Private`k, 
                ConstantArray[0, LieART`BranchingRules`Private`n]}]; 
            LieART`BranchingRules`Private`mid = Join[
               ConstantArray[
               0, {2, (2 LieART`BranchingRules`Private`m) 
                  LieART`BranchingRules`Private`n - 4 
                 LieART`BranchingRules`Private`n - 1}], 
               LieART`BranchingRules`Private`j, 2]; 
            LieART`BranchingRules`Private`bottom = 
             LieART`BranchingRules`Private`k; 
            For[LieART`BranchingRules`Private`row = 2, 
              LieART`BranchingRules`Private`row <= 
              LieART`BranchingRules`Private`m, 
              Increment[LieART`BranchingRules`Private`row], 
              LieART`BranchingRules`Private`bottom = 
               Join[LieART`BranchingRules`Private`bottom, 
                 LieART`BranchingRules`Private`k, 2]; Null]; 
            LieART`BranchingRules`Private`mat = 
             Join[LieART`BranchingRules`Private`d, 
               LieART`BranchingRules`Private`mid, 
               LieART`BranchingRules`Private`bottom]; 
            Return[LieART`BranchingRules`Private`mat]], 
           And[
           LieART`BranchingRules`Private`m >= LieART`BranchingRules`Private`n,
             LieART`BranchingRules`Private`m >= 3, 
            EvenQ[LieART`BranchingRules`Private`m], 
            EvenQ[LieART`BranchingRules`Private`n], 
            LieART`BranchingRules`Private`n >= 2, 
            LieART`BranchingRules`Private`s == (2 
              LieART`BranchingRules`Private`m) 
             LieART`BranchingRules`Private`n]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[D][8]], 
           LieART`ProductAlgebra[
            LieART`Algebra[C][2], 
            LieART`Algebra[C][2]]] := {{1, 2, 3, 4, 3, 2, 1, 0}, {0, 0, 0, 0, 
          1, 2, 1, 2}, {1, 0, 1, 0, 1, 0, 1, 0}, {0, 1, 0, 0, 0, 1, 0, 0}}, 
         LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[D][
             Pattern[LieART`BranchingRules`Private`k, 
              Blank[]]]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`B][
             Pattern[LieART`BranchingRules`Private`s, 
              Blank[]]], 
            LieART`Algebra[D][
             Pattern[LieART`BranchingRules`Private`t, 
              Blank[]]]]] := Condition[
           
           Module[{LieART`BranchingRules`Private`r, 
             LieART`BranchingRules`Private`row, 
             LieART`BranchingRules`Private`g, 
             LieART`BranchingRules`Private`bottom, 
             LieART`BranchingRules`Private`mat, 
             LieART`BranchingRules`Private`n, 
             LieART`BranchingRules`Private`m}, 
            LieART`BranchingRules`Private`n = 
             2 LieART`BranchingRules`Private`t; 
            LieART`BranchingRules`Private`m = 
             2 LieART`BranchingRules`Private`s + 1; 
            LieART`BranchingRules`Private`mat = {}; 
            For[LieART`BranchingRules`Private`row = 1, 
              LieART`BranchingRules`Private`row <= (
                 LieART`BranchingRules`Private`m - 1)/2 - 1, 
              Increment[LieART`BranchingRules`Private`row], 
              LieART`BranchingRules`Private`r = Join[
                 ConstantArray[
                 0, LieART`BranchingRules`Private`n (
                   LieART`BranchingRules`Private`row - 1)], 
                 Range[LieART`BranchingRules`Private`n], 
                 Reverse[
                  Range[LieART`BranchingRules`Private`n - 1]], 
                 ConstantArray[
                 0, (LieART`BranchingRules`Private`m 
                    LieART`BranchingRules`Private`n)/2 - 
                  LieART`BranchingRules`Private`n (
                   LieART`BranchingRules`Private`row - 1) - (
                  2 LieART`BranchingRules`Private`n - 1)]]; 
              AppendTo[
               LieART`BranchingRules`Private`mat, 
                LieART`BranchingRules`Private`r]; Null]; 
            AppendTo[LieART`BranchingRules`Private`mat, 
              Join[
               ConstantArray[
               0, (LieART`BranchingRules`Private`m 
                  LieART`BranchingRules`Private`n)/2 - 
                LieART`BranchingRules`Private`n - 
                LieART`BranchingRules`Private`n/2], 
               Range[2, 2 (LieART`BranchingRules`Private`n - 1), 2], 
               ConstantArray[
               2 LieART`BranchingRules`Private`n, 
                LieART`BranchingRules`Private`n/2 - 1], {
               LieART`BranchingRules`Private`n, 
                LieART`BranchingRules`Private`n}]]; 
            LieART`BranchingRules`Private`g = Join[
               IdentityMatrix[(LieART`BranchingRules`Private`n - 4)/2], 
               ConstantArray[0, {(LieART`BranchingRules`Private`n - 4)/2, 3}], 
               Reverse[
                IdentityMatrix[(LieART`BranchingRules`Private`n - 4)/2]], 2]; 
            AppendTo[LieART`BranchingRules`Private`g, 
              Join[
               ConstantArray[0, (LieART`BranchingRules`Private`n - 4)/2], {1, 
               0, 1}, 
               ConstantArray[0, (LieART`BranchingRules`Private`n - 4)/2]]]; 
            AppendTo[LieART`BranchingRules`Private`g, 
              Join[
               ConstantArray[0, (LieART`BranchingRules`Private`n - 4)/2], {1, 
               2, 1}, 
               ConstantArray[0, (LieART`BranchingRules`Private`n - 4)/2]]]; 
            LieART`BranchingRules`Private`g = 
             MapThread[Append, {LieART`BranchingRules`Private`g, 
                ConstantArray[0, LieART`BranchingRules`Private`n/2]}]; 
            LieART`BranchingRules`Private`bottom = 
             LieART`BranchingRules`Private`g; 
            For[LieART`BranchingRules`Private`row = 2, 
              LieART`BranchingRules`Private`row <= (
                LieART`BranchingRules`Private`m - 1)/2, 
              Increment[LieART`BranchingRules`Private`row], 
              LieART`BranchingRules`Private`bottom = 
               Join[LieART`BranchingRules`Private`bottom, 
                 LieART`BranchingRules`Private`g, 2]; Null]; 
            LieART`BranchingRules`Private`bottom = 
             Join[LieART`BranchingRules`Private`bottom, 
               IdentityMatrix[LieART`BranchingRules`Private`n/2], 2]; 
            LieART`BranchingRules`Private`mat = 
             Join[LieART`BranchingRules`Private`mat, 
               LieART`BranchingRules`Private`bottom]; 
            Return[LieART`BranchingRules`Private`mat]], 
           And[
           LieART`BranchingRules`Private`s >= LieART`BranchingRules`Private`t,
             LieART`BranchingRules`Private`t > 3, 
            LieART`BranchingRules`Private`k == 
            LieART`BranchingRules`Private`t (
              2 LieART`BranchingRules`Private`s + 1)]], 
         LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[D][
             Pattern[LieART`BranchingRules`Private`k, 
              Blank[]]]], 
           LieART`ProductAlgebra[
            LieART`Algebra[D][
             Pattern[LieART`BranchingRules`Private`s, 
              Blank[]]], 
            LieART`Algebra[LieART`B][
             Pattern[LieART`BranchingRules`Private`t, 
              Blank[]]]]] := Condition[
           
           Module[{LieART`BranchingRules`Private`r, 
             LieART`BranchingRules`Private`row, 
             LieART`BranchingRules`Private`d, LieART`BranchingRules`Private`q,
              LieART`BranchingRules`Private`mid, 
             LieART`BranchingRules`Private`bottom, 
             LieART`BranchingRules`Private`mat, 
             LieART`BranchingRules`Private`n, 
             LieART`BranchingRules`Private`m}, 
            LieART`BranchingRules`Private`m = 
             2 LieART`BranchingRules`Private`s; 
            LieART`BranchingRules`Private`n = 
             2 LieART`BranchingRules`Private`t + 1; 
            LieART`BranchingRules`Private`d = {}; 
            For[LieART`BranchingRules`Private`row = 1, 
              LieART`BranchingRules`Private`row <= 
              LieART`BranchingRules`Private`m/2 - 2, 
              Increment[LieART`BranchingRules`Private`row], 
              LieART`BranchingRules`Private`r = Join[
                 ConstantArray[
                 0, LieART`BranchingRules`Private`n (
                   LieART`BranchingRules`Private`row - 1)], 
                 Range[LieART`BranchingRules`Private`n], 
                 Reverse[
                  Range[LieART`BranchingRules`Private`n - 1]], 
                 ConstantArray[
                 0, (LieART`BranchingRules`Private`m 
                    LieART`BranchingRules`Private`n)/2 - 
                  LieART`BranchingRules`Private`n (
                   LieART`BranchingRules`Private`row - 1) - (
                  2 LieART`BranchingRules`Private`n - 1)]]; 
              AppendTo[
               LieART`BranchingRules`Private`d, 
                LieART`BranchingRules`Private`r]; Null]; 
            LieART`BranchingRules`Private`q = Join[
               IdentityMatrix[(LieART`BranchingRules`Private`n - 3)/2], 
               ConstantArray[0, {(LieART`BranchingRules`Private`n - 3)/2, 2}], 
               Reverse[
                IdentityMatrix[(LieART`BranchingRules`Private`n - 3)/2]], 2]; 
            AppendTo[LieART`BranchingRules`Private`q, 
              Join[
               ConstantArray[0, (LieART`BranchingRules`Private`n - 3)/2], {2, 
               2}, 
               ConstantArray[0, (LieART`BranchingRules`Private`n - 3)/2]]]; 
            LieART`BranchingRules`Private`q = 
             MapThread[Append, {LieART`BranchingRules`Private`q, 
                ConstantArray[0, (LieART`BranchingRules`Private`n - 1)/2]}]; 
            LieART`BranchingRules`Private`mid = {
               Join[
                Range[LieART`BranchingRules`Private`n], 
                Reverse[
                 Range[0, LieART`BranchingRules`Private`n - 1]]], 
               Join[
                Range[2 LieART`BranchingRules`Private`n - 2], {
                LieART`BranchingRules`Private`n - 1, 
                 LieART`BranchingRules`Private`n}]}; 
            LieART`BranchingRules`Private`mid = Join[
               ConstantArray[
               0, {2, (LieART`BranchingRules`Private`m 
                   LieART`BranchingRules`Private`n)/2 - 2 
                 LieART`BranchingRules`Private`n}], 
               LieART`BranchingRules`Private`mid, 2]; 
            LieART`BranchingRules`Private`bottom = 
             LieART`BranchingRules`Private`q; 
            For[LieART`BranchingRules`Private`row = 2, 
              LieART`BranchingRules`Private`row <= 
              LieART`BranchingRules`Private`m/2, 
              Increment[LieART`BranchingRules`Private`row], 
              LieART`BranchingRules`Private`bottom = 
               Join[LieART`BranchingRules`Private`bottom, 
                 LieART`BranchingRules`Private`q, 2]; Null]; 
            LieART`BranchingRules`Private`mat = 
             Join[LieART`BranchingRules`Private`d, 
               LieART`BranchingRules`Private`mid, 
               LieART`BranchingRules`Private`bottom]; 
            Return[LieART`BranchingRules`Private`mat]], 
           And[
           LieART`BranchingRules`Private`t >= 2, 
            LieART`BranchingRules`Private`s >= 
            LieART`BranchingRules`Private`t, LieART`BranchingRules`Private`s > 
            3, LieART`BranchingRules`Private`k == 
            LieART`BranchingRules`Private`s (
              2 LieART`BranchingRules`Private`t + 1)]], 
         LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[D][
             Pattern[LieART`BranchingRules`Private`k, 
              Blank[]]]], 
           LieART`ProductAlgebra[
            LieART`Algebra[D][
             Pattern[LieART`BranchingRules`Private`s, 
              Blank[]]], 
            LieART`Algebra[D][
             Pattern[LieART`BranchingRules`Private`t, 
              Blank[]]]]] := Condition[
           
           Module[{LieART`BranchingRules`Private`row, 
             LieART`BranchingRules`Private`r, LieART`BranchingRules`Private`d,
              LieART`BranchingRules`Private`g, 
             LieART`BranchingRules`Private`h, LieART`BranchingRules`Private`m,
              LieART`BranchingRules`Private`n, 
             LieART`BranchingRules`Private`mid, 
             LieART`BranchingRules`Private`bottom, 
             LieART`BranchingRules`Private`mat}, 
            LieART`BranchingRules`Private`d = {}; 
            For[LieART`BranchingRules`Private`row = 1, 
              LieART`BranchingRules`Private`row <= 
              LieART`BranchingRules`Private`m/2 - 2, 
              Increment[LieART`BranchingRules`Private`row], 
              LieART`BranchingRules`Private`r = Join[
                 ConstantArray[
                 0, LieART`BranchingRules`Private`n (
                   LieART`BranchingRules`Private`row - 1)], 
                 Range[LieART`BranchingRules`Private`n], 
                 Reverse[
                  Range[LieART`BranchingRules`Private`n - 1]], 
                 ConstantArray[
                 0, (LieART`BranchingRules`Private`m 
                    LieART`BranchingRules`Private`n)/2 - 
                  LieART`BranchingRules`Private`n - 
                  LieART`BranchingRules`Private`n 
                  LieART`BranchingRules`Private`row + 1]]; 
              AppendTo[
               LieART`BranchingRules`Private`d, 
                LieART`BranchingRules`Private`r]; Null]; 
            LieART`BranchingRules`Private`g = Join[
               IdentityMatrix[(LieART`BranchingRules`Private`n - 4)/2], 
               ConstantArray[0, {(LieART`BranchingRules`Private`n - 4)/2, 3}], 
               Reverse[
                IdentityMatrix[(LieART`BranchingRules`Private`n - 4)/2]], 2]; 
            AppendTo[LieART`BranchingRules`Private`g, 
              Join[
               ConstantArray[0, (LieART`BranchingRules`Private`n - 4)/2], {1, 
               0, 1}, 
               ConstantArray[0, (LieART`BranchingRules`Private`n - 4)/2]]]; 
            AppendTo[LieART`BranchingRules`Private`g, 
              Join[
               ConstantArray[0, (LieART`BranchingRules`Private`n - 4)/2], {1, 
               2, 1}, 
               ConstantArray[0, (LieART`BranchingRules`Private`n - 4)/2]]]; 
            LieART`BranchingRules`Private`g = 
             MapThread[Append, {LieART`BranchingRules`Private`g, 
                ConstantArray[0, LieART`BranchingRules`Private`n/2]}]; 
            LieART`BranchingRules`Private`h = {
               Join[
                Range[0, LieART`BranchingRules`Private`n], 
                Reverse[
                 Range[0, LieART`BranchingRules`Private`n - 1]]], 
               Join[
                Range[0, LieART`BranchingRules`Private`n], 
                Range[
                LieART`BranchingRules`Private`n + 1, 
                 2 LieART`BranchingRules`Private`n - 2], {
                LieART`BranchingRules`Private`n - 1, 
                 LieART`BranchingRules`Private`n}]}; 
            LieART`BranchingRules`Private`mid = Join[
               ConstantArray[
               0, {2, (LieART`BranchingRules`Private`m 
                   LieART`BranchingRules`Private`n)/2 - 2 
                 LieART`BranchingRules`Private`n - 1}], 
               LieART`BranchingRules`Private`h, 2]; 
            LieART`BranchingRules`Private`bottom = 
             LieART`BranchingRules`Private`g; 
            For[LieART`BranchingRules`Private`i = 2, 
              LieART`BranchingRules`Private`i <= 
              LieART`BranchingRules`Private`m/2, 
              Increment[LieART`BranchingRules`Private`i], 
              LieART`BranchingRules`Private`bottom = 
               Join[LieART`BranchingRules`Private`bottom, 
                 LieART`BranchingRules`Private`g, 2]; Null]; 
            LieART`BranchingRules`Private`mat = 
             Join[LieART`BranchingRules`Private`d, 
               LieART`BranchingRules`Private`mid, 
               LieART`BranchingRules`Private`bottom]; 
            Return[LieART`BranchingRules`Private`mat]], 
           And[
           LieART`BranchingRules`Private`s >= LieART`BranchingRules`Private`t,
             LieART`BranchingRules`Private`t >= 4, 
            LieART`BranchingRules`Private`k == (2 
              LieART`BranchingRules`Private`s) 
             LieART`BranchingRules`Private`t]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, LieART`E6], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][2]]] := {{2, 2, 5, 2, 2, 1}, {2, 5, 5, 5,
           2, 4}}, LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, LieART`E6], 
           LieART`ProductAlgebra[LieART`G2]] := 
         Permute[{{0, 1, 0, 1, 0, 1}, {2, 2, 5, 2, 2, 1}}, 
           Cycles[{{1, 2}}]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, LieART`E6], 
           LieART`ProductAlgebra[
            LieART`Algebra[C][4]]] := {{0, 1, 0, 1, 0, 0}, {1, 0, 0, 0, 1, 
          0}, {0, 1, 2, 1, 0, 0}, {0, 0, 0, 0, 0, 1}}, LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, LieART`E6], 
           LieART`ProductAlgebra[LieART`F4]] := {{0, 0, 0, 0, 0, 1}, {0, 0, 1,
           0, 0, 0}, {0, 1, 0, 1, 0, 0}, {1, 0, 0, 0, 1, 0}}, 
         LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, LieART`E6], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][2], LieART`G2]] := 
         Permute[{{1, 2, 1, 0, 0, 1}, {0, 0, 1, 2, 1, 1}, {0, 1, 1, 1, 0, 
           0}, {1, 0, 1, 0, 1, 1}}, 
           Cycles[{{3, 4}}]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, LieART`E7], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1]]] := {{34, 66, 96, 75, 52, 27, 49}}, 
         LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, LieART`E7], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1]], 1] := {{34, 66, 96, 75, 52, 27, 
          49}}, LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, LieART`E7], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1]], 2] := {{26, 50, 72, 57, 40, 21, 
          37}}, LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, LieART`E7], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][2]]] := {{4, 6, 11, 7, 6, 0, 4}, {4, 9, 
          11, 10, 6, 6, 7}}, LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, LieART`E7], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1], 
            LieART`Algebra[LieART`A][1]]] := {{8, 16, 24, 18, 12, 6, 12}, {2, 
          2, 0, 3, 4, 3, 1}}, LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, LieART`E7], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1], LieART`G2]] := 
         Permute[{{2, 4, 4, 5, 4, 1, 3}, {0, 1, 1, 0, 1, 1, 1}, {2, 2, 4, 4, 
           1, 0, 1}}, 
           Cycles[{{2, 3}}]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, LieART`E7], 
           LieART`ProductAlgebra[LieART`F4, 
            LieART`Algebra[LieART`A][1]]] := {{0, 0, 0, 0, 0, 0, 1}, {0, 0, 1,
           0, 0, 0, 0}, {0, 1, 0, 1, 0, 0, 0}, {1, 0, 0, 0, 1, 0, 0}, {2, 4, 
          6, 5, 4, 3, 3}}, LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, LieART`E7], 
           LieART`ProductAlgebra[LieART`G2, 
            LieART`Algebra[C][3]]] := 
         Permute[{{0, 0, 1, 1, 0, 0, 1}, {1, 2, 1, 1, 2, 1, 0}, {0, 1, 1, 1, 
           0, 1, 0}, {1, 0, 1, 1, 1, 0, 0}, {0, 1, 1, 0, 0, 0, 1}}, 
           Cycles[{{1, 2}}]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, LieART`E8], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1]]] := {{72, 142, 210, 172, 132, 90, 46,
           106}}, LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, LieART`E8], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1]], 1] := {{72, 142, 210, 172, 132, 90, 
          46, 106}}, LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, LieART`E8], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1]], 2] := {{60, 118, 174, 142, 108, 74, 
          38, 88}}, LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, LieART`E8], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1]], 3] := {{92, 182, 270, 220, 168, 114,
           58, 136}}, LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, LieART`E8], 
           LieART`ProductAlgebra[LieART`G2, LieART`F4]] := 
         Permute[{{0, 0, 1, 1, 0, 0, 0, 1}, {1, 2, 1, 1, 2, 1, 1, 0}, {0, 0, 
           0, 1, 1, 1, 0, 0}, {0, 1, 1, 0, 0, 0, 0, 1}, {1, 0, 1, 1, 1, 0, 0, 
           0}, {0, 1, 1, 1, 0, 1, 1, 0}}, 
           Cycles[{{1, 2}}]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, LieART`E8], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1], 
            LieART`Algebra[LieART`A][2]]] := {{8, 16, 22, 16, 14, 10, 6, 
          12}, {2, 4, 8, 6, 4, 4, 1, 3}, {2, 4, 5, 6, 4, 1, 1, 3}}, 
         LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, LieART`E8], 
           LieART`ProductAlgebra[
            LieART`Algebra[C][2]]] := {{4, 8, 16, 12, 8, 8, 2, 6}, {4, 8, 9, 
          8, 7, 3, 3, 6}}, LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, LieART`G2], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1]]] := 
         LieART`SpecialSubalgebra[LieART`BranchingRules`Private`origin, {
            LieART`ProductIrrep[
             LieART`Irrep[LieART`A][6]]}], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, LieART`F4], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1]]] := {{22, 42, 30, 16}}, 
         LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, LieART`F4], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`A][1], LieART`G2]] := 
         Permute[{{4, 8, 6, 4}, {0, 1, 0, 0}, {1, 0, 1, 0}}, 
           Cycles[{{2, 3}}]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[LieART`B][
             Pattern[LieART`BranchingRules`Private`p, 
              Blank[]]]], 
           LieART`ProductAlgebra[
            LieART`Algebra[LieART`B][
             Pattern[LieART`BranchingRules`Private`s, 
              Blank[]]], 
            LieART`Algebra[LieART`B][
             Pattern[LieART`BranchingRules`Private`t, 
              Blank[]]]]] := Condition[
           
           Module[{LieART`BranchingRules`Private`mat, 
             LieART`BranchingRules`Private`bottom, 
             LieART`BranchingRules`Private`q, LieART`BranchingRules`Private`b,
              LieART`BranchingRules`Private`r, 
             LieART`BranchingRules`Private`row, 
             LieART`BranchingRules`Private`m, 
             LieART`BranchingRules`Private`n}, 
            LieART`BranchingRules`Private`m = 
             2 LieART`BranchingRules`Private`s + 1; 
            LieART`BranchingRules`Private`n = 
             2 LieART`BranchingRules`Private`t + 1; 
            LieART`BranchingRules`Private`q = Join[
               IdentityMatrix[(LieART`BranchingRules`Private`n - 3)/2], 
               ConstantArray[0, {(LieART`BranchingRules`Private`n - 3)/2, 2}], 
               Reverse[
                IdentityMatrix[(LieART`BranchingRules`Private`n - 3)/2]], 2]; 
            AppendTo[LieART`BranchingRules`Private`q, 
              Join[
               ConstantArray[0, (LieART`BranchingRules`Private`n - 3)/2], {2, 
               2}, 
               ConstantArray[0, (LieART`BranchingRules`Private`n - 3)/2]]]; 
            LieART`BranchingRules`Private`q = 
             MapThread[Append, {LieART`BranchingRules`Private`q, 
                ConstantArray[0, (LieART`BranchingRules`Private`n - 1)/2]}]; 
            LieART`BranchingRules`Private`b = MapThread[Append, {
                IdentityMatrix[(LieART`BranchingRules`Private`n - 3)/2], 
                ConstantArray[0, (LieART`BranchingRules`Private`n - 3)/2]}]; 
            AppendTo[LieART`BranchingRules`Private`b, 
              Join[
               ConstantArray[0, (LieART`BranchingRules`Private`n - 3)/2], {
               1}]]; 
            LieART`BranchingRules`Private`bottom = 
             LieART`BranchingRules`Private`q; 
            For[LieART`BranchingRules`Private`row = 2, 
              LieART`BranchingRules`Private`row <= (
                LieART`BranchingRules`Private`m - 1)/2, 
              Increment[LieART`BranchingRules`Private`row], 
              LieART`BranchingRules`Private`bottom = 
               Join[LieART`BranchingRules`Private`bottom, 
                 LieART`BranchingRules`Private`q, 2]; Null]; 
            LieART`BranchingRules`Private`bottom = 
             Join[LieART`BranchingRules`Private`bottom, 
               LieART`BranchingRules`Private`b, 2]; 
            LieART`BranchingRules`Private`mat = {}; 
            For[LieART`BranchingRules`Private`row = 1, 
              LieART`BranchingRules`Private`row <= (
                 LieART`BranchingRules`Private`m - 1)/2 - 1, 
              Increment[LieART`BranchingRules`Private`row], 
              LieART`BranchingRules`Private`r = Join[
                 ConstantArray[
                 0, LieART`BranchingRules`Private`n (
                   LieART`BranchingRules`Private`row - 1)], 
                 Range[LieART`BranchingRules`Private`n], 
                 Reverse[
                  Range[LieART`BranchingRules`Private`n - 1]], 
                 ConstantArray[
                 0, (LieART`BranchingRules`Private`m 
                    LieART`BranchingRules`Private`n - 1)/2 - 
                  LieART`BranchingRules`Private`n (
                   LieART`BranchingRules`Private`row - 1) - (
                  2 LieART`BranchingRules`Private`n - 1)]]; 
              AppendTo[
               LieART`BranchingRules`Private`mat, 
                LieART`BranchingRules`Private`r]; Null]; 
            AppendTo[LieART`BranchingRules`Private`mat, 
              Join[
               ConstantArray[
               0, (LieART`BranchingRules`Private`m 
                   LieART`BranchingRules`Private`n - 1)/2 - 
                LieART`BranchingRules`Private`n - (
                 LieART`BranchingRules`Private`n - 1)/2], 
               Range[2, 2 LieART`BranchingRules`Private`n - 2, 2], 
               ConstantArray[
               2 LieART`BranchingRules`Private`n, (
                 LieART`BranchingRules`Private`n - 1)/2], {
               LieART`BranchingRules`Private`n}]]; 
            LieART`BranchingRules`Private`mat = 
             Join[LieART`BranchingRules`Private`mat, 
               LieART`BranchingRules`Private`bottom]; 
            Return[LieART`BranchingRules`Private`mat]], 
           And[
           LieART`BranchingRules`Private`s >= LieART`BranchingRules`Private`t,
             LieART`BranchingRules`Private`t >= 2, 
            LieART`BranchingRules`Private`s >= 3, 
            LieART`BranchingRules`Private`p == (2 
               LieART`BranchingRules`Private`s) 
              LieART`BranchingRules`Private`t + 
             LieART`BranchingRules`Private`s + 
             LieART`BranchingRules`Private`t]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[C][
             Pattern[LieART`BranchingRules`Private`t, 
              Blank[]]]], 
           LieART`ProductAlgebra[
            LieART`Algebra[C][
             Pattern[LieART`BranchingRules`Private`m, 
              Blank[]]], 
            LieART`Algebra[D][
             Pattern[LieART`BranchingRules`Private`s, 
              Blank[]]]]] := Condition[
           
           Module[{LieART`BranchingRules`Private`mid, 
             LieART`BranchingRules`Private`bottom, 
             LieART`BranchingRules`Private`f, LieART`BranchingRules`Private`d,
              LieART`BranchingRules`Private`e, 
             LieART`BranchingRules`Private`row, 
             LieART`BranchingRules`Private`r, 
             LieART`BranchingRules`Private`mat, 
             LieART`BranchingRules`Private`n, 
             LieART`BranchingRules`Private`i}, 
            LieART`BranchingRules`Private`n = 
             2 LieART`BranchingRules`Private`s; 
            LieART`BranchingRules`Private`f = 
             IdentityMatrix[(LieART`BranchingRules`Private`n - 2)/2]; 
            LieART`BranchingRules`Private`f = 
             MapThread[Append, {LieART`BranchingRules`Private`f, 
                ConstantArray[0, (LieART`BranchingRules`Private`n - 2)/2]}]; 
            LieART`BranchingRules`Private`f = 
             Join[LieART`BranchingRules`Private`f, 
               Reverse[
                IdentityMatrix[(LieART`BranchingRules`Private`n - 2)/2]], 2]; 
            AppendTo[LieART`BranchingRules`Private`f, 
              Join[
               ConstantArray[0, (LieART`BranchingRules`Private`n - 2)/2], {
               121}, 
               ConstantArray[0, (LieART`BranchingRules`Private`n - 2)/2]]]; 
            LieART`BranchingRules`Private`d = {}; 
            For[LieART`BranchingRules`Private`row = 1, 
              LieART`BranchingRules`Private`row <= 
              LieART`BranchingRules`Private`m - 2, 
              Increment[LieART`BranchingRules`Private`row], 
              LieART`BranchingRules`Private`r = Join[
                 ConstantArray[
                 0, LieART`BranchingRules`Private`n (
                   LieART`BranchingRules`Private`row - 1)], 
                 Range[LieART`BranchingRules`Private`n], 
                 Reverse[
                  Range[LieART`BranchingRules`Private`n - 1]], 
                 ConstantArray[
                 0, LieART`BranchingRules`Private`m 
                   LieART`BranchingRules`Private`n - 
                  LieART`BranchingRules`Private`n (
                   LieART`BranchingRules`Private`row - 1) - (
                  2 LieART`BranchingRules`Private`n - 1)]]; 
              AppendTo[
               LieART`BranchingRules`Private`d, 
                LieART`BranchingRules`Private`r]; Null]; 
            LieART`BranchingRules`Private`e = {
               Join[
                Range[LieART`BranchingRules`Private`n - 1], 
                Reverse[
                 Range[0, LieART`BranchingRules`Private`n]]], 
               Join[
                ConstantArray[0, LieART`BranchingRules`Private`n], 
                Range[LieART`BranchingRules`Private`n]]}; 
            LieART`BranchingRules`Private`mid = Join[
               ConstantArray[
               0, {2, LieART`BranchingRules`Private`m 
                  LieART`BranchingRules`Private`n - 2 
                 LieART`BranchingRules`Private`n}], 
               LieART`BranchingRules`Private`e, 2]; 
            LieART`BranchingRules`Private`bottom = 
             MapThread[Append, {LieART`BranchingRules`Private`f, 
                ConstantArray[0, LieART`BranchingRules`Private`n/2]}]; 
            For[LieART`BranchingRules`Private`i = 2, 
              LieART`BranchingRules`Private`i <= 
              LieART`BranchingRules`Private`m, 
              Increment[LieART`BranchingRules`Private`i], 
              LieART`BranchingRules`Private`bottom = 
              Join[LieART`BranchingRules`Private`bottom, 
                MapThread[Append, {LieART`BranchingRules`Private`f, 
                  ConstantArray[0, LieART`BranchingRules`Private`n/2]}], 2]]; 
            LieART`BranchingRules`Private`mat = 
             Join[LieART`BranchingRules`Private`d, 
               LieART`BranchingRules`Private`mid, 
               LieART`BranchingRules`Private`bottom]; 
            Return[LieART`BranchingRules`Private`mat]], 
           And[
           LieART`BranchingRules`Private`m >= LieART`BranchingRules`Private`s,
             LieART`BranchingRules`Private`s >= 2, 
            LieART`BranchingRules`Private`m >= 3, 
            LieART`BranchingRules`Private`t == (2 
              LieART`BranchingRules`Private`s) 
             LieART`BranchingRules`Private`m]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[C][
             Pattern[LieART`BranchingRules`Private`t, 
              Blank[]]]], 
           LieART`ProductAlgebra[
            LieART`Algebra[D][
             Pattern[LieART`BranchingRules`Private`s, 
              Blank[]]], 
            LieART`Algebra[C][
             Pattern[LieART`BranchingRules`Private`n, 
              Blank[]]]]] := Condition[
           
           Module[{LieART`BranchingRules`Private`row, 
             LieART`BranchingRules`Private`r, LieART`BranchingRules`Private`d,
              LieART`BranchingRules`Private`l, 
             LieART`BranchingRules`Private`p, 
             LieART`BranchingRules`Private`mid, 
             LieART`BranchingRules`Private`bottom, 
             LieART`BranchingRules`Private`mat, 
             LieART`BranchingRules`Private`m}, 
            LieART`BranchingRules`Private`m = 
             2 LieART`BranchingRules`Private`s; 
            LieART`BranchingRules`Private`d = {}; 
            For[LieART`BranchingRules`Private`row = 1, 
              LieART`BranchingRules`Private`row <= 
              LieART`BranchingRules`Private`m/2 - 2, 
              Increment[LieART`BranchingRules`Private`row], 
              LieART`BranchingRules`Private`r = Join[
                 ConstantArray[
                 0, (2 LieART`BranchingRules`Private`n) (
                   LieART`BranchingRules`Private`row - 1)], 
                 Range[2 LieART`BranchingRules`Private`n], 
                 Reverse[
                  Range[2 LieART`BranchingRules`Private`n - 1]], 
                 ConstantArray[
                 0, LieART`BranchingRules`Private`m 
                   LieART`BranchingRules`Private`n - (2 
                   LieART`BranchingRules`Private`n) (
                   LieART`BranchingRules`Private`row - 1) - (
                  4 LieART`BranchingRules`Private`n - 1)]]; 
              AppendTo[
               LieART`BranchingRules`Private`d, 
                LieART`BranchingRules`Private`r]; Null]; 
            LieART`BranchingRules`Private`l = {
               Join[
                Range[0, 2 LieART`BranchingRules`Private`n], 
                Reverse[
                 Range[0, 2 LieART`BranchingRules`Private`n - 1]]], 
               Range[0, 4 LieART`BranchingRules`Private`n]}; 
            LieART`BranchingRules`Private`p = MapThread[Append, {
                IdentityMatrix[LieART`BranchingRules`Private`n - 1], 
                ConstantArray[0, LieART`BranchingRules`Private`n - 1]}]; 
            LieART`BranchingRules`Private`p = 
             Join[LieART`BranchingRules`Private`p, 
               Reverse[
                IdentityMatrix[LieART`BranchingRules`Private`n - 1]], 2]; 
            AppendTo[LieART`BranchingRules`Private`p, 
              Join[
               ConstantArray[0, LieART`BranchingRules`Private`n - 1], {1}, 
               ConstantArray[0, LieART`BranchingRules`Private`n - 1]]]; 
            LieART`BranchingRules`Private`p = 
             MapThread[Append, {LieART`BranchingRules`Private`p, 
                ConstantArray[0, LieART`BranchingRules`Private`n]}]; 
            LieART`BranchingRules`Private`mid = Join[
               ConstantArray[
               0, {2, LieART`BranchingRules`Private`m 
                  LieART`BranchingRules`Private`n - 4 
                 LieART`BranchingRules`Private`n - 1}], 
               LieART`BranchingRules`Private`l, 2]; 
            LieART`BranchingRules`Private`bottom = 
             LieART`BranchingRules`Private`p; 
            For[LieART`BranchingRules`Private`row = 2, 
              LieART`BranchingRules`Private`row <= 
              LieART`BranchingRules`Private`m/2, 
              Increment[LieART`BranchingRules`Private`row], 
              LieART`BranchingRules`Private`bottom = 
              Join[LieART`BranchingRules`Private`bottom, 
                LieART`BranchingRules`Private`p, 2]]; 
            LieART`BranchingRules`Private`mat = 
             Join[LieART`BranchingRules`Private`d, 
               LieART`BranchingRules`Private`mid, 
               LieART`BranchingRules`Private`bottom]; 
            Return[LieART`BranchingRules`Private`mat]], 
           And[
           LieART`BranchingRules`Private`n >= 2, 
            LieART`BranchingRules`Private`s >= 
            LieART`BranchingRules`Private`n, LieART`BranchingRules`Private`s >= 
            3, LieART`BranchingRules`Private`t == (2 
              LieART`BranchingRules`Private`s) 
             LieART`BranchingRules`Private`n]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[D][
             Pattern[LieART`BranchingRules`Private`s, 
              Blank[]]]], 
           LieART`ProductAlgebra[
            LieART`Algebra[C][
             Pattern[LieART`BranchingRules`Private`m, 
              Blank[]]], 
            LieART`Algebra[C][
             Pattern[LieART`BranchingRules`Private`n, 
              Blank[]]]]] := Condition[
           
           Module[{LieART`BranchingRules`Private`row, 
             LieART`BranchingRules`Private`r, LieART`BranchingRules`Private`d,
              LieART`BranchingRules`Private`j, 
             LieART`BranchingRules`Private`k, 
             LieART`BranchingRules`Private`mid, 
             LieART`BranchingRules`Private`bottom, 
             LieART`BranchingRules`Private`mat}, 
            LieART`BranchingRules`Private`d = {}; 
            For[LieART`BranchingRules`Private`row = 1, 
              LieART`BranchingRules`Private`row <= 
              LieART`BranchingRules`Private`m - 2, 
              Increment[LieART`BranchingRules`Private`row], 
              LieART`BranchingRules`Private`r = Join[
                 ConstantArray[
                 0, (2 LieART`BranchingRules`Private`n) (
                   LieART`BranchingRules`Private`row - 1)], 
                 Range[2 LieART`BranchingRules`Private`n], 
                 Reverse[
                  Range[2 LieART`BranchingRules`Private`n - 1]], 
                 ConstantArray[
                 0, (2 LieART`BranchingRules`Private`m) 
                   LieART`BranchingRules`Private`n - (2 
                   LieART`BranchingRules`Private`n) (
                   LieART`BranchingRules`Private`row - 1) - (
                  4 LieART`BranchingRules`Private`n - 1)]]; 
              AppendTo[
               LieART`BranchingRules`Private`d, 
                LieART`BranchingRules`Private`r]; Null]; 
            LieART`BranchingRules`Private`j = {
               Join[
                Range[0, 2 LieART`BranchingRules`Private`n], 
                Reverse[
                 Range[2 LieART`BranchingRules`Private`n - 1]], {0}], 
               Join[
                ConstantArray[0, 2 LieART`BranchingRules`Private`n + 1], 
                Range[2 LieART`BranchingRules`Private`n - 2], {
                LieART`BranchingRules`Private`n - 1, 
                 LieART`BranchingRules`Private`n}]}; 
            LieART`BranchingRules`Private`k = MapThread[Append, {
                IdentityMatrix[LieART`BranchingRules`Private`n - 1], 
                ConstantArray[0, LieART`BranchingRules`Private`n - 1]}]; 
            LieART`BranchingRules`Private`k = 
             Join[LieART`BranchingRules`Private`k, 
               Reverse[
                IdentityMatrix[LieART`BranchingRules`Private`n - 1]], 2]; 
            AppendTo[LieART`BranchingRules`Private`k, 
              Join[
               ConstantArray[0, LieART`BranchingRules`Private`n - 1], {1}, 
               ConstantArray[0, LieART`BranchingRules`Private`n - 1]]]; 
            LieART`BranchingRules`Private`k = 
             MapThread[Append, {LieART`BranchingRules`Private`k, 
                ConstantArray[0, LieART`BranchingRules`Private`n]}]; 
            LieART`BranchingRules`Private`mid = Join[
               ConstantArray[
               0, {2, (2 LieART`BranchingRules`Private`m) 
                  LieART`BranchingRules`Private`n - 4 
                 LieART`BranchingRules`Private`n - 1}], 
               LieART`BranchingRules`Private`j, 2]; 
            LieART`BranchingRules`Private`bottom = 
             LieART`BranchingRules`Private`k; 
            For[LieART`BranchingRules`Private`row = 2, 
              LieART`BranchingRules`Private`row <= 
              LieART`BranchingRules`Private`m, 
              Increment[LieART`BranchingRules`Private`row], 
              LieART`BranchingRules`Private`bottom = 
               Join[LieART`BranchingRules`Private`bottom, 
                 LieART`BranchingRules`Private`k, 2]; Null]; 
            LieART`BranchingRules`Private`mat = 
             Join[LieART`BranchingRules`Private`d, 
               LieART`BranchingRules`Private`mid, 
               LieART`BranchingRules`Private`bottom]; 
            Return[LieART`BranchingRules`Private`mat]], 
           And[
           LieART`BranchingRules`Private`m >= LieART`BranchingRules`Private`n,
             LieART`BranchingRules`Private`m >= 3, 
            EvenQ[LieART`BranchingRules`Private`m], 
            EvenQ[LieART`BranchingRules`Private`n], 
            LieART`BranchingRules`Private`n >= 2, 
            LieART`BranchingRules`Private`s == (2 
              LieART`BranchingRules`Private`m) 
             LieART`BranchingRules`Private`n]], LieART`ProjectionMatrix[
           Pattern[LieART`BranchingRules`Private`origin, 
            LieART`Algebra[D][
             Pattern[LieART`BranchingRules`Private`k, 
              Blank[]]]], 
           LieART`ProductAlgebra[
            LieART`Algebra[D][
             Pattern[LieART`BranchingRules`Private`s, 
              Blank[]]], 
            LieART`Algebra[D][
             Pattern[LieART`BranchingRules`Private`t, 
              Blank[]]]]] := Condition[
           
           Module[{LieART`BranchingRules`Private`row, 
             LieART`BranchingRules`Private`r, LieART`BranchingRules`Private`d,
              LieART`BranchingRules`Private`g, 
             LieART`BranchingRules`Private`h, LieART`BranchingRules`Private`m,
              LieART`BranchingRules`Private`n, 
             LieART`BranchingRules`Private`mid, 
             LieART`BranchingRules`Private`bottom, 
             LieART`BranchingRules`Private`mat}, 
            LieART`BranchingRules`Private`d = {}; 
            For[LieART`BranchingRules`Private`row = 1, 
              LieART`BranchingRules`Private`row <= 
              LieART`BranchingRules`Private`m/2 - 2, 
              Increment[LieART`BranchingRules`Private`row], 
              LieART`BranchingRules`Private`r = Join[
                 ConstantArray[
                 0, LieART`BranchingRules`Private`n (
                   LieART`BranchingRules`Private`row - 1)], 
                 Range[LieART`BranchingRules`Private`n], 
                 Reverse[
                  Range[LieART`BranchingRules`Private`n - 1]], 
                 ConstantArray[
                 0, (LieART`BranchingRules`Private`m 
                    LieART`BranchingRules`Private`n)/2 - 
                  LieART`BranchingRules`Private`n - 
                  LieART`BranchingRules`Private`n 
                  LieART`BranchingRules`Private`row + 1]]; 
              AppendTo[
               LieART`BranchingRules`Private`d, 
                LieART`BranchingRules`Private`r]; Null]; 
            LieART`BranchingRules`Private`g = Join[
               IdentityMatrix[(LieART`BranchingRules`Private`n - 4)/2], 
               ConstantArray[0, {(LieART`BranchingRules`Private`n - 4)/2, 3}], 
               Reverse[
                IdentityMatrix[(LieART`BranchingRules`Private`n - 4)/2]], 2]; 
            AppendTo[LieART`BranchingRules`Private`g, 
              Join[
               ConstantArray[0, (LieART`BranchingRules`Private`n - 4)/2], {1, 
               0, 1}, 
               ConstantArray[0, (LieART`BranchingRules`Private`n - 4)/2]]]; 
            AppendTo[LieART`BranchingRules`Private`g, 
              Join[
               ConstantArray[0, (LieART`BranchingRules`Private`n - 4)/2], {1, 
               2, 1}, 
               ConstantArray[0, (LieART`BranchingRules`Private`n - 4)/2]]]; 
            LieART`BranchingRules`Private`g = 
             MapThread[Append, {LieART`BranchingRules`Private`g, 
                ConstantArray[0, LieART`BranchingRules`Private`n/2]}]; 
            LieART`BranchingRules`Private`h = {
               Join[
                Range[0, LieART`BranchingRules`Private`n], 
                Reverse[
                 Range[0, LieART`BranchingRules`Private`n - 1]]], 
               Join[
                Range[0, LieART`BranchingRules`Private`n], 
                Range[
                LieART`BranchingRules`Private`n + 1, 
                 2 LieART`BranchingRules`Private`n - 2], {
                LieART`BranchingRules`Private`n - 1, 
                 LieART`BranchingRules`Private`n}]}; 
            LieART`BranchingRules`Private`mid = Join[
               ConstantArray[
               0, {2, (LieART`BranchingRules`Private`m 
                   LieART`BranchingRules`Private`n)/2 - 2 
                 LieART`BranchingRules`Private`n - 1}], 
               LieART`BranchingRules`Private`h, 2]; 
            LieART`BranchingRules`Private`bottom = 
             LieART`BranchingRules`Private`g; 
            For[LieART`BranchingRules`Private`i = 2, 
              LieART`BranchingRules`Private`i <= 
              LieART`BranchingRules`Private`m/2, 
              Increment[LieART`BranchingRules`Private`i], 
              LieART`BranchingRules`Private`bottom = 
               Join[LieART`BranchingRules`Private`bottom, 
                 LieART`BranchingRules`Private`g, 2]; Null]; 
            LieART`BranchingRules`Private`mat = 
             Join[LieART`BranchingRules`Private`d, 
               LieART`BranchingRules`Private`mid, 
               LieART`BranchingRules`Private`bottom]; 
            Return[LieART`BranchingRules`Private`mat]], 
           And[
           LieART`BranchingRules`Private`s >= LieART`BranchingRules`Private`t,
             LieART`BranchingRules`Private`t >= 4, 
            LieART`BranchingRules`Private`k == (2 
              LieART`BranchingRules`Private`s) 
             LieART`BranchingRules`Private`t]], 
         TagSet[LieART`ProjectionMatrix, 
          MessageName[LieART`ProjectionMatrix, "usage"], 
          "ProjectionMatrix  "], LieART`SemiSimpleSubalgebra[
           PatternTest[
            Pattern[LieART`Private`algebra, 
             Blank[]], LieART`SimpleLieAlgebraQ], 
           Pattern[LieART`Private`simpleRootToDrop, 
            Blank[]]] := (
          LieART`SemiSimpleSubalgebra[
           LieART`Private`algebra, LieART`Private`simpleRootToDrop] = 
          Module[{LieART`Private`decomposedLowestOrbit, 
             LieART`Private`sourceLowestOrbit}, 
            LieART`Private`sourceLowestOrbit = Apply[List, 
               LieART`LowestOrbit[LieART`Private`algebra], {1}]; 
            LieART`Private`decomposedLowestOrbit = 
             LieART`Private`ExtendedWeightScheme[
              LieART`Private`algebra, LieART`Private`simpleRootToDrop]; Dot[
              Transpose[LieART`Private`decomposedLowestOrbit], 
              PseudoInverse[
               Transpose[LieART`Private`sourceLowestOrbit]]]]), 
         TagSet[LieART`SemiSimpleSubalgebra, 
          MessageName[LieART`SemiSimpleSubalgebra, "usage"], 
          "SemiSimpleSubalgebra  "], LieART`LowestOrbit[
           Pattern[LieART`Private`algebra, 
            Blank[]]] := LieART`Orbit[
           LieART`HighestWeight[
            LieART`GeneratingIrrep[LieART`Private`algebra]]], 
         TagSet[LieART`LowestOrbit, 
          MessageName[LieART`LowestOrbit, "usage"], "LowestOrbit  "], 
         LieART`GeneratingIrrep[
           LieART`Algebra[
            Pattern[LieART`Private`algebraClass, 
             Alternatives[LieART`A, C]]][
            PatternTest[
             Pattern[LieART`Private`n, 
              Blank[]], LieART`Private`NaturalNumberQ]]] := Apply[
           LieART`Irrep[LieART`Private`algebraClass], 
           PadRight[{1}, LieART`Private`n]], LieART`GeneratingIrrep[
           LieART`Algebra[
            Pattern[LieART`Private`algebraClass, 
             Alternatives[LieART`B, D]]][
            PatternTest[
             Pattern[LieART`Private`n, 
              Blank[]], LieART`Private`NaturalNumberQ]]] := Apply[
           LieART`Irrep[LieART`Private`algebraClass], 
           PadLeft[{1}, LieART`Private`n]], LieART`GeneratingIrrep[
           Pattern[LieART`Private`algebra, 
            Alternatives[LieART`E6, LieART`G2]]] := Apply[
           LieART`Irrep[LieART`Private`algebra], 
           PadRight[{1}, 
            LieART`Rank[LieART`Private`algebra]]], LieART`GeneratingIrrep[
           Pattern[LieART`Private`algebra, LieART`F4]] := Apply[
           LieART`Irrep[LieART`Private`algebra], 
           PadLeft[{1}, 
            LieART`Rank[LieART`Private`algebra]]], LieART`GeneratingIrrep[
           Pattern[LieART`Private`algebra, 
            Alternatives[LieART`E7, LieART`E8]]] := Apply[
           LieART`Irrep[LieART`Private`algebra], 
           PadLeft[{1, 0}, 
            LieART`Rank[LieART`Private`algebra]]], 
         TagSet[LieART`GeneratingIrrep, 
          MessageName[LieART`GeneratingIrrep, "usage"], "SimpleIrrep  "], 
         LieART`Private`ExtendedWeightScheme[
           PatternTest[
            Pattern[LieART`Private`algebra, 
             Blank[]], LieART`SimpleLieAlgebraQ], 
           Pattern[LieART`Private`simpleRootToDrop, 
            Blank[]]] := 
         Module[{LieART`Private`lablesWithRespectToMinusGamma, 
            LieART`Private`lowestOrbit = 
            LieART`LowestOrbit[LieART`Private`algebra], 
            LieART`Private`rootNumberShift = 0}, 
           LieART`Private`lablesWithRespectToMinusGamma = 
            Map[LieART`ScalarProduct[-
               LieART`HighestRoot[LieART`Private`algebra], #]& , 
              LieART`Private`lowestOrbit]; 
           If[LieART`Private`simpleRootToDrop < 
             LieART`Private`PositionMinusGamma[LieART`Private`algebra], 
             LieART`Private`rootNumberShift = 1]; Transpose[
             Insert[
              Transpose[
               Apply[List, 
                LieART`Private`DropSimpleRoot[
                LieART`Private`lowestOrbit, 
                 LieART`Private`simpleRootToDrop], {1}]], 
              LieART`Private`lablesWithRespectToMinusGamma, 
              LieART`Private`PositionMinusGamma[LieART`Private`algebra] - 
              LieART`Private`rootNumberShift]]], LieART`HighestRoot[
           PatternTest[
            Pattern[LieART`Private`algebra, 
             Blank[]], LieART`SimpleLieAlgebraQ]] := First[
           LieART`PositiveRoots[LieART`Private`algebra]], 
         TagSet[LieART`HighestRoot, 
          MessageName[LieART`HighestRoot, "usage"], 
          "HighestRoot[algebra] gives the highest root of the roots system of \
algebra"], LieART`Private`PositionMinusGamma[
           Pattern[LieART`Private`algebra, 
            Alternatives[
             LieART`Algebra[LieART`A][
              Blank[]], LieART`E6, LieART`F4, LieART`G2]]] := 
         LieART`Rank[LieART`Private`algebra] + 1, 
         LieART`Private`PositionMinusGamma[
           Pattern[LieART`Private`algebra, 
            Alternatives[
             LieART`Algebra[C][
              Blank[]], LieART`E7]]] := 1, LieART`Private`PositionMinusGamma[
           Pattern[LieART`Private`algebra, LieART`E8]] := 8, 
         LieART`Private`PositionMinusGamma[
           Pattern[LieART`Private`algebra, 
            Alternatives[
             LieART`Algebra[LieART`B][
              Blank[]], 
             LieART`Algebra[D][
              Blank[]]]]] := 2, LieART`Private`DropSimpleRoot[
           Pattern[LieART`Private`weights, 
            Blank[]], 
           Pattern[LieART`Private`k, 
            Blank[]]] := Drop[LieART`Private`weights, None, 
           Flatten[{LieART`Private`k}]], LieART`ReverseOrderSimpleRoots[
           Pattern[LieART`Private`projectionMatrix, 
            Blank[]], 
           Pattern[LieART`Private`range, 
            Blank[]]] := (Join[
           Reverse[
            Take[#, LieART`Private`range]], 
           Drop[#, LieART`Private`range]]& )[LieART`Private`projectionMatrix],
          LieART`NonSemiSimpleSubalgebra[
           PatternTest[
            Pattern[LieART`Private`algebra, 
             Blank[]], LieART`SimpleLieAlgebraQ], 
           Pattern[LieART`Private`simpleRootToDrop, 
            Blank[]]] := (
          LieART`NonSemiSimpleSubalgebra[
           LieART`Private`algebra, LieART`Private`simpleRootToDrop] = 
          Module[{LieART`Private`decomposedLowestOrbit, 
             LieART`Private`sourceLowestOrbit, LieART`Private`u1Charges, 
             LieART`Private`appendedU1Charges}, 
            LieART`Private`sourceLowestOrbit = Apply[List, 
               LieART`LowestOrbit[LieART`Private`algebra], {1}]; 
            LieART`Private`u1Charges = LieART`Private`U1Charges[
               LieART`LowestOrbit[LieART`Private`algebra], 
               LieART`Private`simpleRootToDrop]; 
            LieART`Private`decomposedLowestOrbit = 
             LieART`Private`DropSimpleRoot[
              LieART`Private`sourceLowestOrbit, 
               LieART`Private`simpleRootToDrop]; 
            LieART`Private`appendedU1Charges = 
             MapThread[
              Append, {
               LieART`Private`decomposedLowestOrbit, 
                LieART`Private`u1Charges}]; Dot[
              LieART`Private`NormalizeU1Charges[
               Transpose[LieART`Private`appendedU1Charges]], 
              PseudoInverse[
               Transpose[LieART`Private`sourceLowestOrbit]]]]), 
         LieART`Private`U1Charges[
           Pattern[LieART`Private`weights, 
            Blank[]], 
           Pattern[LieART`Private`simpleRootToDrop, 
            Blank[]]] := Flatten[
           Take[
            Apply[List, 
             LieART`AlphaBasis[LieART`Private`weights], {1}], All, {
            LieART`Private`simpleRootToDrop}]], 
         LieART`Private`NormalizeU1Charges[
           Pattern[LieART`Private`matrix, 
            Blank[]]] := MapAt[#/GCD[
            Apply[Sequence, #]]& , LieART`Private`matrix, -1], 
         LieART`SpecialSubalgebra[
           PatternTest[
            Pattern[LieART`Private`origin, 
             Blank[]], LieART`SimpleLieAlgebraQ], 
           Pattern[LieART`Private`targetirreps, {
             Repeated[
              LieART`ProductIrrep[
               PatternTest[
                BlankSequence[], LieART`IrrepQ]]]}]] := (
          LieART`SpecialSubalgebra[
           LieART`Private`origin, LieART`Private`targetirreps] = 
          Module[{LieART`Private`sourceIrrep, LieART`Private`targetIrreps}, 
            LieART`Private`sourceIrrep = Sort[
               Apply[List, 
                LieART`WeightSystem[
                 LieART`GeneratingIrrep[LieART`Private`origin]], {1}], 
               OrderedQ[{#2, #}]& ]; LieART`Private`targetIrreps = Sort[
               Flatten[
                Map[Map[Flatten, 
                  ReplaceAll[
                   Apply[List, 
                    LieART`WeightSystem[#], {1}], LieART`Weight[
                    Blank[]] -> List]]& , LieART`Private`targetirreps], 1], 
               OrderedQ[{#2, #}]& ]; Dot[
              Transpose[LieART`Private`targetIrreps], 
              PseudoInverse[
               Transpose[LieART`Private`sourceIrrep]]]]), LieART`WeightSystem[
           PatternTest[
            Pattern[LieART`Private`irrep, 
             Blank[]], LieART`IrrepQ], 
           Pattern[LieART`Private`opts, 
            OptionsPattern[]]] := If[
           OptionValue[LieART`SpindleShape], 
           Column[
            Map[Row[#, " "]& , 
             GatherBy[
              LieART`WeightSystem[LieART`Private`irrep], 
              LieART`WeightLevel[#, LieART`Private`irrep]& ]], ItemSize -> 
            Full, Alignment -> {Center}], 
           SortBy[
            Flatten[
             Apply[ConstantArray[
               LieART`Orbit[#], #2]& , 
              LieART`DominantWeightSystem[LieART`Private`irrep], {1}]], 
            LieART`WeightLevel[#, LieART`Private`irrep]& ]], 
         LieART`WeightSystem[
           Pattern[LieART`Private`productIrreps, 
            LieART`ProductIrrep[
             PatternTest[
              BlankSequence[], LieART`IrrepQ]]]] := Tuples[
           Apply[LieART`ProductWeight, 
            Map[LieART`WeightSystem, LieART`Private`productIrreps]]], 
         Options[LieART`WeightSystem] = {LieART`SpindleShape -> False}, 
         LieART`DominantWeightSystem[
           Pattern[LieART`Private`irrep, 
            Blank[]]] := (LieART`DominantWeightSystem[LieART`Private`irrep] = 
          Map[{#, 
             LieART`WeightMultiplicity[#, LieART`Private`irrep]}& , 
            LieART`SingleDominantWeightSystem[LieART`Private`irrep]]), 
         TagSet[LieART`DominantWeightSystem, 
          MessageName[LieART`DominantWeightSystem, "usage"], 
          "DominantWeightSystem  "], LieART`WeightMultiplicity[
           PatternTest[
            Pattern[LieART`Private`weight, 
             Blank[]], LieART`Private`WeightQ], 
           PatternTest[
            Pattern[LieART`Private`irrep, 
             Blank[]], LieART`IrrepQ]] := (
          LieART`WeightMultiplicity[
           LieART`Private`weight, LieART`Private`irrep] = 
          Module[{LieART`Private`algebra = 
             LieART`Algebra[LieART`Private`irrep], 
             LieART`Private`highestWeight = 
             LieART`HighestWeight[LieART`Private`irrep], 
             LieART`Private`domWeight = 
             LieART`Private`ReflectToDominantWeight[LieART`Private`weight], 
             LieART`Private`delta, LieART`Private`higherWeigths}, 
            LieART`Private`delta = LieART`Delta[LieART`Private`algebra]; 
            If[LieART`Private`domWeight === LieART`Private`highestWeight, 1, 
              LieART`Private`higherWeigths = Select[
                 Flatten[
                  Outer[{LieART`Private`domWeight + # Part[#2, 1], #2}& , 
                   Range[
                    LieART`WeightLevel[
                    LieART`Private`weight, LieART`Private`irrep]], 
                   LieART`XisAndMul[LieART`Private`algebra, 
                    LieART`T[LieART`Private`domWeight]], 1], 1], MemberQ[
                  LieART`SingleDominantWeightSystem[LieART`Private`irrep], 
                  LieART`Private`ReflectToDominantWeight[
                   Part[#, 1]]]& ]; Apply[Plus, 
                 Map[(Part[#, 2, 2] LieART`WeightMultiplicity[
                    LieART`Private`ReflectToDominantWeight[
                    Part[#, 1]], LieART`Private`irrep]) LieART`ScalarProduct[
                    Part[#, 1], 
                    Part[#, 2, 1]]& , LieART`Private`higherWeigths]]/(
               LieART`ScalarProduct[
                LieART`Private`highestWeight + LieART`Private`delta, 
                 LieART`Private`highestWeight + LieART`Private`delta] - 
               LieART`ScalarProduct[
               LieART`Private`domWeight + LieART`Private`delta, 
                LieART`Private`domWeight + LieART`Private`delta])]]), 
         TagSet[LieART`WeightMultiplicity, 
          MessageName[LieART`WeightMultiplicity, "usage"], 
          "WeightMultiplicity  "], LieART`Private`WeightQ[
           Pattern[LieART`Private`expr, 
            Blank[]]] := MatchQ[LieART`Private`expr, 
           LieART`Private`HeadAlgebraPattern[LieART`Weight]], 
         LieART`Private`HeadAlgebraPattern[
           Pattern[LieART`Private`head, 
            Blank[]]] := (
          LieART`Private`HeadAlgebraPattern[LieART`Private`head] = 
          Alternatives[
            
            With[{LieART`Private`head = LieART`Private`head, 
              LieART`Private`algebraClasses = LieART`ClassicalAlgebraTypes}, 
             HoldPattern[
              Alternatives[
               LieART`Private`head[LieART`U][
                PatternTest[
                 Blank[], NumberQ]], 
               LieART`Private`head[LieART`Private`algebraClasses][
                PatternTest[
                 BlankSequence[], LieART`Private`LabelQ]]]]], 
            Map[Apply[Sequence, 
              LieART`Private`ExceptionalAlgebraPattern[
              LieART`Private`head, #]]& , 
             LieART`Private`ExceptionalAlgebras]]), 
         LieART`ClassicalAlgebraTypes = 
         Alternatives[LieART`A, LieART`B, C, D], 
         TagSet[LieART`ClassicalAlgebraTypes, 
          MessageName[LieART`ClassicalAlgebraTypes, "usage"], 
          "ClassicalAlgebraTypes  "], LieART`Private`LabelQ[
           Pattern[LieART`Private`expr, 
            BlankSequence[]]] := Apply[And, 
           Map[IntegerQ, {LieART`Private`expr}]], 
         LieART`Private`ExceptionalAlgebraPattern[
           Pattern[LieART`Private`head, 
            Blank[]], 
           Pattern[LieART`Private`algebra, 
            Alternatives[
            LieART`E6, LieART`E7, LieART`E8, LieART`F4, LieART`G2]]] := 
         With[{LieART`Private`head = LieART`Private`head, LieART`Private`n = 
            LieART`Rank[LieART`Private`algebra]}, 
           HoldPattern[
            LieART`Private`head[LieART`Private`algebra][
             PatternTest[
              Repeated[
               Blank[], {LieART`Private`n}], LieART`Private`LabelQ]]]], 
         LieART`Private`ExceptionalAlgebraPattern[
           Pattern[LieART`Private`algebra, 
            Alternatives[
            LieART`E6, LieART`E7, LieART`E8, LieART`F4, LieART`G2]]] := 
         With[{LieART`Private`n = LieART`Rank[LieART`Private`algebra]}, 
           HoldPattern[
            LieART`Irrep[LieART`Private`algebra][
             PatternTest[
              Repeated[
               Blank[], {LieART`Private`n}], LieART`Private`DynkinLabelQ]]]], 
         LieART`Private`ReflectToDominantWeight[
           PatternTest[
            Pattern[LieART`Private`weight, 
             Blank[]], LieART`DominantQ]] := LieART`Private`weight, 
         LieART`Private`ReflectToDominantWeight[
           Pattern[LieART`Private`weight, 
            Blank[]]] := Module[{LieART`Private`dom}, 
           If[
            FreeQ[
             DownValues[LieART`Orbit], LieART`Private`weight], 
            LieART`Private`dom = LieART`OmegaBasis[
              LieART`Private`Seek[
               NestWhile[LieART`Reflect, {
                 LieART`OrthogonalBasis[LieART`Private`weight]}, FreeQ[#, 
                 PatternTest[
                  Blank[], LieART`DominantQ]]& ], LieART`DominantQ]], 
            Part[
             Select[
              DownValues[LieART`Orbit], Not[
               FreeQ[#, LieART`Private`weight]]& ], 1, 1, 1, 1]]], 
         LieART`XisAndMul[
           Pattern[LieART`Private`algebra, 
            Blank[]], 
           Pattern[LieART`Private`t, 
            Blank[]]] := (
          LieART`XisAndMul[LieART`Private`algebra, LieART`Private`t] = Map[
            Function[
            LieART`Private`xi, {
             LieART`Private`xi, 
              LieART`Private`OrbitSizeFactor[
               LieART`Private`t, LieART`Private`xi] 
              LieART`DimOrbit[LieART`Private`xi, 
                LieART`Alphas[LieART`Private`algebra, LieART`Private`t]]}], 
            LieART`Xis[LieART`Private`algebra, LieART`Private`t]]), 
         TagSet[LieART`XisAndMul, 
          MessageName[LieART`XisAndMul, "usage"], "XisAndMul  "], 
         LieART`Private`OrbitSizeFactor[
           Pattern[LieART`Private`t, 
            Blank[]], 
           Pattern[LieART`Private`xi, 
            Blank[]]] := If[
           LieART`Private`EmptyQ[
            Complement[
             Position[
              LieART`AlphaBasis[LieART`Private`xi], 
              PatternTest[
               Blank[], Positive]], LieART`Private`t]], 1, 2], 
         LieART`Private`EmptyQ[
           Pattern[LieART`Private`list, 
            Blank[]]] := MatchQ[LieART`Private`list, {
            RepeatedNull[{}]}], LieART`DimOrbit[
           Pattern[LieART`Private`args, 
            BlankSequence[]]] := (LieART`DimOrbit[LieART`Private`args] = 
          Length[
            LieART`Orbit[LieART`Private`args]]), 
         TagSet[LieART`DimOrbit, 
          MessageName[LieART`DimOrbit, "usage"], "DimOrbit  "], LieART`Alphas[
           Pattern[LieART`Private`algebra, 
            Blank[]], 
           Pattern[LieART`Private`t, 
            Blank[]]] := Extract[
           LieART`Private`OmegaSimpleRoots[LieART`Private`algebra], 
           LieART`Private`t], 
         TagSet[LieART`Alphas, 
          MessageName[LieART`Alphas, "usage"], "Alphas  "], 
         LieART`Private`OmegaSimpleRoots[
           Pattern[LieART`Private`algebra, 
            Blank[]]] := (
          LieART`Private`OmegaSimpleRoots[LieART`Private`algebra] = 
          LieART`OmegaBasis[
            LieART`OrthogonalSimpleRoots[LieART`Private`algebra]]), LieART`Xis[
           Pattern[LieART`Private`algebra, 
            Blank[]], 
           Pattern[LieART`Private`t, 
            Blank[]]] := Select[
           LieART`PositiveRoots[LieART`Private`algebra], 
           LieART`Private`PositiveQ[
            Extract[#, LieART`Private`t]]& ], 
         TagSet[LieART`Xis, 
          MessageName[LieART`Xis, "usage"], "Xis  "], LieART`T[
           Pattern[LieART`Private`weight, 
            Blank[]]] := Position[
           Apply[List, LieART`Private`weight], 0], 
         TagSet[LieART`T, 
          MessageName[LieART`T, "usage"], "T  "], 
         LieART`SingleDominantWeightSystem[
           Pattern[LieART`Private`irrep, 
            PatternTest[
             LieART`Irrep[
              Pattern[LieART`Private`algebraClass, 
               Blank[]]][
              Pattern[LieART`Private`highestWeight, 
               BlankSequence[]]], LieART`IrrepQ]]] := (
          LieART`SingleDominantWeightSystem[LieART`Private`irrep] = Module[{}, 
            SortBy[
             Apply[
              LieART`Weight[LieART`Private`algebraClass], 
              Union[
               Flatten[
                NestWhileList[
                 Function[LieART`Private`weights, 
                  DeleteDuplicates[
                   Flatten[
                    Map[
                    Function[LieART`Private`weight, 
                    Select[
                    Map[LieART`Private`weight - #& , 
                    LieART`Private`ToMatrix[
                    LieART`PositiveRoots[
                    LieART`Algebra[LieART`Private`irrep]]]], 
                    LieART`Private`PositiveQ]], 
                    DeleteCases[LieART`Private`weights, {}]], 1]]], {{
                  LieART`Private`highestWeight}}, # != {}& ], 1]], {1}], 
             LieART`WeightLevel[#, LieART`Private`irrep]& ]]), 
         TagSet[LieART`SingleDominantWeightSystem, 
          MessageName[LieART`SingleDominantWeightSystem, "usage"], 
          "SingleDominantWeightSystem  "], 
         TagSet[LieART`ProductWeight, 
          MessageName[LieART`ProductWeight, "usage"], "ProductWeight  "], 
         LieART`Private`GetAllProductIrrep[
           Pattern[LieART`Private`alldecomposition, 
            Blank[]], 
           Pattern[LieART`Private`nColumn, 
            Blank[]]] := Module[{LieART`Private`npalgebras = Length[
              First[LieART`Private`alldecomposition]], 
            LieART`Private`nRestColumns}, LieART`Private`nRestColumns = Delete[
              Range[LieART`Private`npalgebras], LieART`Private`nColumn]; 
           Flatten[
             Map[LieART`Private`GetProductIrrep[#, LieART`Private`nColumn]& , 
              GatherBy[
              LieART`Private`alldecomposition, 
               Part[#, LieART`Private`nRestColumns]& ]], 1]], 
         LieART`Private`GetProductIrrep[
           Pattern[LieART`Private`decomposition, 
            Blank[]], 
           Pattern[LieART`Private`nColumn, 
            Blank[]]] := 
         Module[{LieART`Private`restColumns, LieART`Private`mainColumn, 
            LieART`Private`npalgebras = Length[
              First[LieART`Private`decomposition]], 
            LieART`Private`nRestColumns}, LieART`Private`nRestColumns = Delete[
              Range[LieART`Private`npalgebras], LieART`Private`nColumn]; 
           LieART`Private`restColumns = 
            Part[LieART`Private`decomposition, 1, 
              LieART`Private`nRestColumns]; 
           LieART`Private`mainColumn = 
            Part[LieART`Private`decomposition, All, LieART`Private`nColumn]; 
           Map[Insert[
             LieART`Private`restColumns, #, LieART`Private`nColumn]& , 
             LieART`Private`GetIrreps[
              LieART`DominantWeightsAndMul[LieART`Private`mainColumn]]]], 
         LieART`Private`GetIrreps[
           Pattern[LieART`Private`sortedOrbits, 
            Blank[]]] := Module[{}, 
           Part[
            DeleteCases[
             Reap[
              NestWhile[
              LieART`SortOutIrrep, 
               LieART`Private`sortedOrbits, # != {}& ]], {}], 1, 1]], 
         LieART`SortOutIrrep[
           Pattern[LieART`Private`sOrbits, 
            Blank[]]] := 
         Module[{LieART`Private`i, LieART`Private`highestIrrep, 
            LieART`Private`sortedOrbits = LieART`Private`sOrbits, 
            LieART`Private`dominantWeights, LieART`Private`pos}, 
           LieART`Private`highestIrrep = 
            Part[LieART`Private`sortedOrbits, 1, 1]; 
           LieART`Private`dominantWeights = LieART`DominantWeightSystem[
              ReplaceAll[
              LieART`Private`highestIrrep, LieART`Weight -> LieART`Irrep]]; 
           For[LieART`Private`i = 1, LieART`Private`i <= 
             Length[LieART`Private`dominantWeights], 
             Increment[LieART`Private`i], LieART`Private`pos = Part[
                Position[
                 Part[LieART`Private`sortedOrbits, All, 1], 
                 Part[LieART`Private`dominantWeights, LieART`Private`i, 1]], 
                1, 1]; If[
              Part[LieART`Private`sortedOrbits, LieART`Private`pos, 2] == 
               Part[LieART`Private`dominantWeights, LieART`Private`i, 2], 
               LieART`Private`sortedOrbits = 
               Delete[LieART`Private`sortedOrbits, LieART`Private`pos], 
               Part[LieART`Private`sortedOrbits, LieART`Private`pos, 2] = 
                Part[LieART`Private`sortedOrbits, LieART`Private`pos, 2] - 
                 Part[LieART`Private`dominantWeights, LieART`Private`i, 2]; 
               Null]; Null]; Sow[
             ReplaceAll[
             LieART`Private`highestIrrep, LieART`Weight -> LieART`Irrep]]; 
           LieART`Private`sortedOrbits], 
         TagSet[LieART`SortOutIrrep, 
          MessageName[LieART`SortOutIrrep, "usage"], "SortOutIrrep  "], 
         LieART`DominantWeightsAndMul[
           Pattern[LieART`Private`weights, 
            Blank[]]] := SortBy[
           Tally[
            Select[LieART`Private`weights, LieART`DominantQ]], -LieART`Height[
             First[#]]& ], 
         TagSet[LieART`DominantWeightsAndMul, 
          MessageName[LieART`DominantWeightsAndMul, "usage"], 
          "DominantWeightsAndMul  "], LieART`Height[
           Pattern[LieART`Private`irrepOrWeight, 
            PatternTest[
             Alternatives[LieART`Irrep, LieART`Weight][
              Pattern[LieART`Private`algebraClass, 
               Blank[]]][
              Pattern[LieART`Private`irrepOrWeightLabel, 
               BlankSequence[]]], LieART`DominantQ]]] := 2 Apply[Plus, 
            LieART`AlphaBasis[
             LieART`HighestWeight[LieART`Private`irrepOrWeight]]], 
         LieART`GroupProjectedWeights[
           Pattern[LieART`Private`projectedWeights, 
            Blank[]], 
           Pattern[LieART`Private`target, 
            Blank[]]] := 
         Module[{LieART`Private`irrepheads}, 
           LieART`Private`irrepheads = Map[LieART`Weight, 
              LieART`AlgebraClass[LieART`Private`target]]; 
           Map[MapThread[Apply, {LieART`Private`irrepheads, #}]& , 
             Map[LieART`UnequalPartition[#, 
               LieART`Rank[
                Apply[List, LieART`Private`target]]]& , 
              LieART`Private`projectedWeights]]], 
         TagSet[LieART`GroupProjectedWeights, 
          MessageName[LieART`GroupProjectedWeights, "usage"], 
          "GroupProjectedWeights  "], LieART`UnequalPartition[
           Pattern[LieART`Private`list, 
            Blank[]], {
            Pattern[LieART`Private`n, 
             Blank[Integer]]}] := {
           Take[LieART`Private`list, LieART`Private`n]}, 
         LieART`UnequalPartition[
           Pattern[LieART`Private`list, 
            Blank[]], 
           Pattern[LieART`Private`n, 
            Blank[List]]] := Join[{
            Take[LieART`Private`list, 
             First[LieART`Private`n]]}, 
           LieART`UnequalPartition[
            Drop[LieART`Private`list, 
             First[LieART`Private`n]], 
            Rest[LieART`Private`n]]], 
         TagSet[LieART`UnequalPartition, 
          MessageName[LieART`UnequalPartition, "usage"], 
          "UnequalPartition  "], LieART`IrrepList[
           LieART`IrrepPlus[
            Pattern[LieART`Private`irrepterms, 
             BlankSequence[]]]] := Flatten[
           Map[LieART`IrrepList, {LieART`Private`irrepterms}]], 
         LieART`IrrepList[
           Alternatives[
            PatternTest[
             Pattern[LieART`Private`irrep, 
              Blank[]], LieART`IrrepQ], 
            PatternTest[
             Pattern[LieART`Private`irrep, 
              Blank[]], LieART`Private`ProductIrrepQ]]] := 
         LieART`Private`irrep, LieART`IrrepList[
           LieART`IrrepTimes[
            PatternTest[
             Pattern[LieART`Private`factor, 
              Blank[]], LieART`Private`NaturalNumberQ], 
            PatternTest[
             Pattern[LieART`Private`irrep, 
              Blank[]], LieART`Private`SingleOrProductIrrepQ]]] := 
         ConstantArray[LieART`Private`irrep, LieART`Private`factor], 
         TagSet[LieART`IrrepList, 
          MessageName[LieART`IrrepList, "usage"], "IrrepList  "], 
         LieART`Private`SingleOrProductIrrepQ[
           Pattern[LieART`Private`expr, 
            Blank[]]] := MatchQ[LieART`Private`expr, 
           Alternatives[
           LieART`Private`IrrepPattern, LieART`Private`ProductIrrepPattern]], 
         LieART`IrrepOrderedQ[
           Pattern[LieART`Private`irreps, 
            Blank[LieART`ProductIrrep]], 
           Pattern[LieART`Private`irreps, 
            Blank[LieART`ProductIrrep]]] := True, LieART`IrrepOrderedQ[
           Pattern[LieART`Private`irreps1, 
            Blank[LieART`ProductIrrep]], 
           Pattern[LieART`Private`irreps2, 
            Blank[LieART`ProductIrrep]]] := Condition[Total[
             LieART`Dim[LieART`Private`irreps1]] <= Total[
             LieART`Dim[LieART`Private`irreps2]], Total[
             LieART`Dim[LieART`Private`irreps1]] != Total[
             LieART`Dim[LieART`Private`irreps2]]], LieART`IrrepOrderedQ[
           Pattern[LieART`Private`irreps1, 
            Blank[LieART`ProductIrrep]], 
           Pattern[LieART`Private`irreps2, 
            Blank[LieART`ProductIrrep]]] := Condition[Total[
             LieART`Index[LieART`Private`irreps1]] <= Total[
             LieART`Index[LieART`Private`irreps2]], 
           And[Total[
              LieART`Dim[LieART`Private`irreps1]] == Total[
              LieART`Dim[LieART`Private`irreps2]], Total[
              LieART`Index[LieART`Private`irreps1]] != Total[
              LieART`Index[LieART`Private`irreps2]]]], LieART`IrrepOrderedQ[
           Pattern[LieART`Private`irreps1, 
            Blank[LieART`ProductIrrep]], 
           Pattern[LieART`Private`irreps2, 
            Blank[LieART`ProductIrrep]]] := Condition[Total[
             LieART`CongruencyClass[LieART`Private`irreps1]] <= Total[
             LieART`CongruencyClass[LieART`Private`irreps2]], 
           And[Total[
              LieART`Dim[LieART`Private`irreps1]] == Total[
              LieART`Dim[LieART`Private`irreps2]], Total[
              LieART`Index[LieART`Private`irreps1]] == Total[
              LieART`Index[LieART`Private`irreps2]], Total[
              LieART`CongruencyClass[LieART`Private`irreps1]] != Total[
              LieART`CongruencyClass[LieART`Private`irreps2]]]], 
         LieART`IrrepOrderedQ[
           Pattern[LieART`Private`irreps1, 
            Blank[LieART`ProductIrrep]], 
           Pattern[LieART`Private`irreps2, 
            Blank[LieART`ProductIrrep]]] := Condition[
           OrderedQ[{LieART`Private`irreps2, LieART`Private`irreps1}], 
           And[Total[
              LieART`Dim[LieART`Private`irreps1]] == Total[
              LieART`Dim[LieART`Private`irreps2]], Total[
              LieART`Index[LieART`Private`irreps1]] == Total[
              LieART`Index[LieART`Private`irreps2]], Total[
              LieART`CongruencyClass[LieART`Private`irreps1]] == Total[
              LieART`CongruencyClass[LieART`Private`irreps2]]]], 
         LieART`IrrepOrderedQ[
           Pattern[LieART`Private`irrep, 
            Blank[]], 
           Pattern[LieART`Private`irrep, 
            Blank[]]] := True, LieART`IrrepOrderedQ[
           Pattern[LieART`Private`irrep1, 
            Blank[]], 
           Pattern[LieART`Private`irrep2, 
            Blank[]]] := 
         Condition[
          LieART`Dim[LieART`Private`irrep1] <= 
           LieART`Dim[LieART`Private`irrep2], 
           LieART`Dim[LieART`Private`irrep1] != 
           LieART`Dim[LieART`Private`irrep2]], LieART`IrrepOrderedQ[
           Pattern[LieART`Private`irrep1, 
            Blank[]], 
           Pattern[LieART`Private`irrep2, 
            Blank[]]] := 
         Condition[
          LieART`Index[LieART`Private`irrep1] <= 
           LieART`Index[LieART`Private`irrep2], 
           And[
           LieART`Dim[LieART`Private`irrep1] == 
            LieART`Dim[LieART`Private`irrep2], 
            LieART`Index[LieART`Private`irrep1] != 
            LieART`Index[LieART`Private`irrep2]]], LieART`IrrepOrderedQ[
           Pattern[LieART`Private`irrep1, 
            Blank[]], 
           Pattern[LieART`Private`irrep2, 
            Blank[]]] := Condition[Norm[
             LieART`CongruencyClass[LieART`Private`irrep1]] <= Norm[
             LieART`CongruencyClass[LieART`Private`irrep2]], 
           And[
           LieART`Dim[LieART`Private`irrep1] == 
            LieART`Dim[LieART`Private`irrep2], 
            LieART`Index[LieART`Private`irrep1] == 
            LieART`Index[LieART`Private`irrep2], Norm[
              LieART`CongruencyClass[LieART`Private`irrep1]] != Norm[
              LieART`CongruencyClass[LieART`Private`irrep2]]]], 
         LieART`IrrepOrderedQ[
           Pattern[LieART`Private`irrep1, 
            Blank[]], 
           Pattern[LieART`Private`irrep2, 
            Blank[]]] := Condition[
           OrderedQ[{LieART`Private`irrep2, LieART`Private`irrep1}], 
           And[
           LieART`Dim[LieART`Private`irrep1] == 
            LieART`Dim[LieART`Private`irrep2], 
            LieART`Index[LieART`Private`irrep1] == 
            LieART`Index[LieART`Private`irrep2], Norm[
              LieART`CongruencyClass[LieART`Private`irrep1]] == Norm[
              LieART`CongruencyClass[LieART`Private`irrep2]]]], 
         TagSet[LieART`IrrepOrderedQ, 
          MessageName[LieART`IrrepOrderedQ, "usage"], "IrrepOrdering  "], 
         Attributes[LieART`CongruencyClass] = {Listable}, 
         LieART`CongruencyClass[
           LieART`ProductIrrep[
            Pattern[LieART`Private`irreps, 
             BlankSequence[]]]] := Map[LieART`CongruencyClass, 
           ReplaceAll[{LieART`Private`irreps}, LieART`Irrep[LieART`U][
              Blank[]] -> Sequence[]]], LieART`CongruencyClass[
           Pattern[LieART`Private`irrep, 
            PatternTest[
             LieART`Irrep[LieART`A][
              BlankSequence[]], LieART`Private`NonNumericIrrepQ]]] := Mod[
           Dot[
            Range[
             LieART`Rank[LieART`Private`irrep]], 
            Apply[List, LieART`Private`irrep]], 
           LieART`Rank[LieART`Private`irrep] + 1], LieART`CongruencyClass[
           Pattern[LieART`Private`irrep, 
            PatternTest[
             LieART`Irrep[LieART`B][
              BlankSequence[]], LieART`Private`NonNumericIrrepQ]]] := Mod[
           Last[
            Apply[List, LieART`Private`irrep]], 2], LieART`CongruencyClass[
           Pattern[LieART`Private`irrep, 
            PatternTest[
             LieART`Irrep[C][
              BlankSequence[]], LieART`Private`NonNumericIrrepQ]]] := Mod[
           Apply[Plus, 
            Part[
             Apply[List, LieART`Private`irrep], 
             Span[1, All, 2]]], 2], LieART`CongruencyClass[
           Pattern[LieART`Private`irrep, 
            PatternTest[
             LieART`Irrep[D][
              BlankSequence[]], LieART`Private`NonNumericIrrepQ]]] := 
         Module[{
           LieART`Private`label = Apply[List, LieART`Private`irrep], 
            LieART`Private`n = LieART`Rank[LieART`Private`irrep]}, 
           LieART`CongruencyVector[
            Mod[
             Total[
              Take[LieART`Private`label, -2]], 2], 
            Mod[2 Apply[Plus, 
                Part[
                 Drop[LieART`Private`label, -2], 
                 Span[1, All, 2]]] + (LieART`Private`n - 2) 
              Part[LieART`Private`label, -2] + 
             LieART`Private`n Last[LieART`Private`label], 4]]], 
         LieART`CongruencyClass[
           Pattern[LieART`Private`irrep, 
            PatternTest[
             LieART`Irrep[LieART`E6][
              BlankSequence[]], LieART`Private`NonNumericIrrepQ]]] := 
         Module[{LieART`Private`a}, Evaluate[
              Array[LieART`Private`a, {6}]] = 
            Apply[List, LieART`Private`irrep]; 
           Mod[LieART`Private`a[1] - LieART`Private`a[2] + 
             LieART`Private`a[4] - LieART`Private`a[5], 3]], 
         LieART`CongruencyClass[
           Pattern[LieART`Private`irrep, 
            PatternTest[
             LieART`Irrep[LieART`E7][
              BlankSequence[]], LieART`Private`NonNumericIrrepQ]]] := 
         Module[{LieART`Private`a}, Evaluate[
              Array[LieART`Private`a, {7}]] = 
            Apply[List, LieART`Private`irrep]; 
           Mod[LieART`Private`a[4] + LieART`Private`a[6] + 
             LieART`Private`a[7], 2]], LieART`CongruencyClass[
           Pattern[LieART`Private`irrep, 
            PatternTest[
             LieART`Irrep[
              Alternatives[LieART`E8, LieART`F4, LieART`G2]][
              BlankSequence[]], LieART`Private`NonNumericIrrepQ]]] := 0, 
         TagSet[LieART`CongruencyClass, 
          MessageName[LieART`CongruencyClass, "usage"], "CongruencyClass  "], 
         UpSetDelayed[
          Norm[
           LieART`CongruencyVector[
            Pattern[LieART`Private`expr, 
             BlankSequence[]]]], 
          Norm[{LieART`Private`expr}]], 
         UpSetDelayed[
          MakeBoxes[
           LieART`CongruencyVector[
            Pattern[LieART`Private`label, 
             BlankSequence[]]], 
           Pattern[FormatType, 
            Blank[]]], 
          Format[
           LieART`Private`DisplayLabel[LieART`Private`label], FormatType]], 
         Format[
           LieART`CongruencyVector[
            Pattern[LieART`Private`label, 
             BlankSequence[]]]] := 
         LieART`Private`DisplayLabel[LieART`Private`label], 
         TagSet[LieART`CongruencyVector, 
          MessageName[LieART`CongruencyVector, "usage"], 
          "CongruencyVector  "], LieART`Private`DisplayLabel[
           Pattern[LieART`Private`label, 
            BlankSequence[]]] := ToString[
           Row[{"(", LieART`Private`label, ")"}]], LieART`Private`AddToTableau[
           Pattern[LieART`Private`irrep, 
            Blank[]], 
           Pattern[LieART`Private`rowcombinations, 
            Blank[]]] := Module[{LieART`Private`n = Length[
              Part[LieART`Private`irrep, 1]], LieART`Private`added}, 
           LieART`Private`added = 
            Map[Part[LieART`Private`irrep, 1] + Apply[Plus, 
                Map[PadRight[
                  PadLeft[{-1, 1}, #], LieART`Private`n]& , #]]& , 
              LieART`Private`rowcombinations]; 
           MapThread[
            List, {LieART`Private`added, LieART`Private`rowcombinations}]], 
         LieART`Private`AllowedRows[
           Pattern[LieART`Private`irrep, 
            Blank[]], 
           Pattern[LieART`Private`nboxes, 
            Blank[]]] := 
         Module[{LieART`Private`result}, LieART`Private`result = Select[
              Union[
               Subsets[
                Join[
                 ConstantArray[1, 
                  If[
                  Part[LieART`Private`irrep, 2] == {}, LieART`Private`nboxes, 
                   0]], 
                 Flatten[
                  DeleteCases[
                   Map[ConstantArray[# + 1, 
                    If[Part[LieART`Private`irrep, 2] == {}, 
                    Min[
                    Part[LieART`Private`irrep, 1, #], LieART`Private`nboxes], 
                    Min[
                    Count[
                    Part[LieART`Private`irrep, 2], 
                    Condition[
                    Pattern[LieART`Private`x, 
                    Blank[]], LieART`Private`x <= #]], 
                    Part[LieART`Private`irrep, 1, #], 
                    LieART`Private`nboxes]]]& , 
                    Range[
                    Length[
                    Part[LieART`Private`irrep, 1]]]], {}], 1]], {
                LieART`Private`nboxes}]], LieART`Private`AllowedCombination[
               Part[LieART`Private`irrep, 2], #]& ]; LieART`Private`result], 
         LieART`Private`AllowedCombination[
           Pattern[LieART`Private`comb1, 
            Blank[]], 
           Pattern[LieART`Private`comb2, 
            Blank[]]] := 
         Module[{LieART`Private`maxn = 
            Max[LieART`Private`comb1, LieART`Private`comb2]}, 
           If[LieART`Private`comb1 == {}, True, 
            Apply[And, 
             Thread[PadRight[
                LieART`Private`PathCounts[
                LieART`Private`comb2, LieART`Private`maxn], 
                LieART`Private`maxn + 1] <= PadLeft[
                LieART`Private`PathCounts[
                LieART`Private`comb1, LieART`Private`maxn], 
                LieART`Private`maxn + 1]]]]], LieART`Private`PathCounts[
           Pattern[LieART`Private`comb, 
            Blank[]], 
           Pattern[LieART`Private`maxn, 
            Blank[]]] := Map[Count[LieART`Private`comb, 
            Condition[
             Pattern[LieART`Private`x, 
              Blank[]], LieART`Private`x <= #]]& , 
           Range[LieART`Private`maxn]], LieART`Private`BoxesToBump[
           Pattern[LieART`Private`irrep, 
            Blank[]], 
           Pattern[LieART`Private`row, 
            Blank[]]] := Total[
           Drop[LieART`Private`irrep, LieART`Private`row - 1]], 
         LieART`Private`U1ChargeQ[
           Pattern[LieART`Private`expr, 
            Blank[]]] := 
         MatchQ[LieART`Private`expr, LieART`Private`U1ChargePattern], 
         LieART`Private`DimOrderedQ[
           Pattern[LieART`Private`irrep, 
            Blank[]], 
           Pattern[LieART`Private`irrep, 
            Blank[]]] := True, LieART`Private`DimOrderedQ[
           Pattern[LieART`Private`irrep1, 
            Blank[]], 
           Pattern[LieART`Private`irrep2, 
            Blank[]]] := 
         Condition[
          LieART`Dim[LieART`Private`irrep1] <= 
           LieART`Dim[LieART`Private`irrep2], 
           LieART`Dim[LieART`Private`irrep1] != 
           LieART`Dim[LieART`Private`irrep2]], LieART`Add[
           Pattern[LieART`Private`talliedWeights, 
            Blank[]], 
           Pattern[LieART`Private`weight, 
            Blank[]]] := 
         Map[MapAt[# + LieART`Private`weight& , #, 1]& , 
           LieART`Private`talliedWeights], 
         TagSet[LieART`Add, 
          MessageName[LieART`Add, "usage"], "Add  "], 
         LieART`WeightSystemWithMul[
           PatternTest[
            Pattern[LieART`Private`irrep, 
             Blank[]], LieART`IrrepQ]] := (
          LieART`WeightSystemWithMul[LieART`Private`irrep] = Flatten[
            Apply[Map[
              Function[LieART`Private`weight, {LieART`Private`weight, #2}], 
              LieART`Orbit[#]]& , 
             LieART`DominantWeightSystem[LieART`Private`irrep], {1}], 1]), 
         TagSet[LieART`WeightSystemWithMul, 
          MessageName[LieART`WeightSystemWithMul, "usage"], 
          "WeightSystemWithMul  "], LieART`ToIrrep[
           Pattern[LieART`Private`highestWeight, 
            Blank[]]] := 
         ReplaceAll[
          LieART`Private`highestWeight, LieART`Weight -> LieART`Irrep], 
         TagSet[LieART`ToIrrep, 
          MessageName[LieART`ToIrrep, "usage"], "ToIrrep  "], 
         LieART`TrivialStabilizerWeights[
           Pattern[LieART`Private`weights, 
            Blank[]]] := Select[LieART`Private`weights, FreeQ[
            First[#], 0]& ], 
         TagSet[LieART`TrivialStabilizerWeights, 
          MessageName[LieART`TrivialStabilizerWeights, "usage"], 
          "TrivialStabilizerWeights  "], 
         LieART`ReflectToDominantWeightWithMul[{
            PatternTest[
             Pattern[LieART`Private`weight, 
              Blank[]], LieART`DominantQ], 
            Pattern[LieART`Private`mul, 
             Blank[]]}] := {LieART`Private`weight, LieART`Private`mul}, 
         LieART`ReflectToDominantWeightWithMul[{
            Pattern[LieART`Private`weight, 
             Blank[]], 
            Pattern[LieART`Private`mul, 
             Blank[]]}] := 
         Module[{LieART`Private`dom, LieART`Private`numrefl = 0}, 
           LieART`Private`dom = {
             LieART`OmegaBasis[
              LieART`Private`Seek[
               
               NestWhile[(Increment[LieART`Private`numrefl]; 
                LieART`Reflect[#])& , {
                 LieART`OrthogonalBasis[LieART`Private`weight]}, FreeQ[#, 
                 PatternTest[
                  Blank[], LieART`DominantQ]]& ], LieART`DominantQ]], 
             LieART`Private`mul (-1)^LieART`Private`numrefl}], 
         TagSet[LieART`ReflectToDominantWeightWithMul, 
          MessageName[LieART`ReflectToDominantWeightWithMul, "usage"], 
          "ReflectToDominantWeightWithMul  "], 
         Attributes[LieART`ConjugateIrrep] = {Listable}, LieART`ConjugateIrrep[
           Pattern[LieART`Private`irrep, 
            LieART`Irrep[LieART`U][
             Pattern[LieART`Private`u1charge, 
              Blank[]]]]] := LieART`Irrep[LieART`U][-LieART`Private`u1charge],
          LieART`ConjugateIrrep[
           PatternTest[
            Pattern[LieART`Private`irrep, 
             Blank[]], LieART`IrrepQ]] := 
         Module[{LieART`Private`algebraClass = 
            LieART`AlgebraClass[LieART`Private`irrep], 
            LieART`Private`conjugatedIrrep}, 
           LieART`Private`conjugatedIrrep = LieART`Private`Seek[
              Apply[
               LieART`Irrep[LieART`Private`algebraClass], 
               Tuples[
                Range[0, 
                 Max[
                  Apply[List, LieART`Private`irrep]]], 
                LieART`Rank[LieART`Private`irrep]], {1}], 
              And[# =!= LieART`Private`irrep, LieART`Dim[#] == 
               LieART`Dim[LieART`Private`irrep], LieART`Index[#] == 
               LieART`Index[LieART`Private`irrep]]& ]; 
           If[LieART`Private`conjugatedIrrep === Null, LieART`Private`irrep, 
             LieART`Private`conjugatedIrrep]], LieART`ConjugateIrrep[
           PatternTest[
            Pattern[LieART`Private`productIrreps, 
             Blank[]], LieART`Private`ProductIrrepQ]] := 
         Map[LieART`ConjugateIrrep, LieART`Private`productIrreps], 
         TagSet[LieART`ConjugateIrrep, 
          MessageName[LieART`ConjugateIrrep, "usage"], "ConjugateIrrep  "], 
         LieART`IrrepPrime[
           Pattern[LieART`Private`dim, 
            Blank[]]] := LieART`IrrepPrime[LieART`Private`dim, 1], 
         LieART`IrrepPrime[
           Pattern[LieART`Private`dim, 
            Blank[]], 0] := LieART`Private`dim, 
         TagSet[LieART`IrrepPrime, 
          MessageName[LieART`IrrepPrime, "usage"], "IrrepPrime[dim] "], 
         LieART`Private`ToIrrepName[
           Pattern[LieART`Private`algebra, 
            Blank[]], 
           Pattern[LieART`Private`name, 
            Blank[]]] := LieART`IrrepName[LieART`Private`algebra][
           ReplaceAll[
            ReplaceAll[LieART`Private`name, LieART`Bar[
               Pattern[LieART`Private`dim, 
                Blank[]]] :> LieART`Private`dim], LieART`IrrepPrime[
              Pattern[LieART`Private`dim, 
               Blank[]], 
              Blank[]] :> LieART`Private`dim], 
           Not[
            FreeQ[LieART`Private`name, LieART`Bar]], 
           If[
            FreeQ[LieART`Private`name, LieART`IrrepPrime], 0, 
            ReplaceAll[LieART`Private`name, LieART`IrrepPrime[
               Blank[], 
               Pattern[LieART`Private`n, 
                Blank[]]] :> LieART`Private`n]]], 
         TagSetDelayed[LieART`IrrepName, 
          MakeBoxes[
           Pattern[LieART`Private`irrep, 
            LieART`IrrepName[
             Pattern[LieART`Private`algebra, 
              Blank[]]][
             Pattern[LieART`Private`dim, 
              Blank[]], 
             Optional[
              Pattern[LieART`Private`conjugated, 
               Blank[]], False], 
             Optional[
              Pattern[LieART`Private`primes, 
               Blank[]], 0], 
             Optional[
              Pattern[LieART`Private`sub, 
               Blank[]], ""]]], LieART`LaTeXForm], 
          Format[
           StringJoin["\\irrep", 
            If[LieART`Private`conjugated, "bar", ""], 
            If[LieART`Private`sub =!= "", "sub", ""], 
            If[LieART`Private`primes > 0, 
             StringJoin["[", 
              ToString[LieART`Private`primes], "]"], ""], 
            StringJoin["{", 
             ToString[LieART`Private`dim], "}"], 
            If[LieART`Private`sub =!= "", 
             StringJoin["{", 
              ToString[LieART`Private`sub], "}"], ""]], LieART`LaTeXForm]], 
         TagSetDelayed[LieART`IrrepName, 
          MakeBoxes[
           Pattern[LieART`Private`irrep, 
            LieART`IrrepName[
             Pattern[LieART`Private`algebra, 
              Blank[]]][
             Pattern[LieART`Private`dim, 
              Blank[]], 
             Optional[
              Pattern[LieART`Private`conjugated, 
               Blank[]], False], 
             Optional[
              Pattern[LieART`Private`primes, 
               Blank[]], 0], 
             Optional[
              Pattern[LieART`Private`sub, 
               Blank[]], ""]]], TraditionalForm], 
          LieART`DimLabel[
           If[LieART`Private`conjugated, 
            StyleBox[
             OverscriptBox[
              ToString[LieART`Private`dim], "_"], Bold], 
            StyleBox[
             ToString[LieART`Private`dim], Bold]], LieART`Private`primes, 
           LieART`Private`sub]], 
         TagSet[LieART`IrrepName, 
          MessageName[LieART`IrrepName, "usage"], "IrrepName  "], 
         LieART`DimLabel[
           Pattern[LieART`Private`dim, 
            Blank[]], 0, ""] := LieART`Private`dim, LieART`DimLabel[
           Pattern[LieART`Private`dim, 
            Blank[]], 0, 
           Pattern[LieART`Private`sub, 
            Blank[]]] := SubscriptBox[LieART`Private`dim, LieART`Private`sub],
          LieART`DimLabel[
           Pattern[LieART`Private`dim, 
            Blank[]], 
           Pattern[LieART`Private`primes, 
            Blank[]], ""] := SuperscriptBox[LieART`Private`dim, 
           Apply[StringJoin, 
            ConstantArray["\[Prime]", LieART`Private`primes]]], 
         LieART`DimLabel[
           Pattern[LieART`Private`dim, 
            Blank[]], 
           Pattern[LieART`Private`primes, 
            Blank[]], 
           Pattern[LieART`Private`sub, 
            Blank[]]] := 
         SubsuperscriptBox[LieART`Private`dim, LieART`Private`sub, 
           Apply[StringJoin, 
            ConstantArray["\[Prime]", LieART`Private`primes]]], 
         TagSet[LieART`DimLabel, 
          MessageName[LieART`DimLabel, "usage"], "DimLabel  "], 
         LieART`Private`NonEmptyQ[
           Pattern[LieART`Private`list, 
            Blank[]]] := Not[
           MatchQ[LieART`Private`list, {
             RepeatedNull[{}]}]], LieART`Private`GetIrrepByDimName[
           Pattern[LieART`Private`algebra, 
            Blank[]], 
           Pattern[LieART`Private`irrepName, 
            Blank[]]] := 
         Module[{LieART`Private`dim = First[LieART`Private`irrepName], 
            LieART`Private`irrepWithDimName = {}, 
            LieART`Private`maxDynkinDigit = 0}, While[
             And[
             LieART`Private`irrepWithDimName === {}, 
              LieART`Private`maxDynkinDigit < LieART`$MaxDynkinDigit], 
             Increment[LieART`Private`maxDynkinDigit]; 
             LieART`Private`irrepWithDimName = Select[
                LieART`GetIrrepByDim[
                LieART`Private`algebra, LieART`Private`dim, 
                 LieART`Private`maxDynkinDigit], LieART`DimName[#] === 
                LieART`Private`irrepName& ]]; 
           If[LieART`Private`irrepWithDimName === {}, 
             Message[
              MessageName[LieART`Irrep, "noirrep"], LieART`Private`irrepName, 
              LieART`Private`algebra, LieART`$MaxDynkinDigit]]; 
           LieART`Private`irrepWithDimName], LieART`$MaxDynkinDigit = 3, 
         TagSet[LieART`$MaxDynkinDigit, 
          MessageName[LieART`$MaxDynkinDigit, "usage"], "$MaxDynkinDigit  "], 
         LieART`GetIrrepByDim[
           Pattern[LieART`Private`algebra, 
            Blank[]], 
           Pattern[LieART`Private`dim, 
            Blank[]], 
           Pattern[LieART`Private`maxDynkinDigit, 
            Blank[]]] := (
          LieART`GetIrrepByDim[
           LieART`Private`algebra, LieART`Private`dim, 
            LieART`Private`maxDynkinDigit] = 
          Module[{LieART`Private`algebraClass = 
             LieART`AlgebraClass[LieART`Private`algebra]}, 
            Sort[
             Select[
              Apply[
               LieART`Irrep[LieART`Private`algebraClass], 
               Tuples[
                Range[0, LieART`Private`maxDynkinDigit], 
                LieART`Rank[LieART`Private`algebra]], {1}], LieART`Dim[#] == 
              LieART`Private`dim& ], LieART`Index[#] < LieART`Index[#2]& ]]), 
         TagSet[LieART`GetIrrepByDim, 
          MessageName[LieART`GetIrrepByDim, "usage"], "GetIrrepByDim  "], 
         Attributes[LieART`DimName] = {Listable}, LieART`DimName[
           LieART`Irrep[LieART`A][0, 2]] = LieART`IrrepName[
           LieART`Algebra[LieART`A][2]][6, True, 0], LieART`DimName[
           LieART`Irrep[LieART`A][2, 0]] = LieART`IrrepName[
           LieART`Algebra[LieART`A][2]][6, False, 0], LieART`DimName[
           Pattern[LieART`Private`irrep, 
            LieART`Irrep[LieART`U][
             Pattern[LieART`Private`u1charge, 
              Blank[]]]]] := (LieART`DimName[LieART`Private`irrep] = 
          LieART`Private`u1charge), LieART`DimName[
           Pattern[LieART`Private`irrep, 
            PatternTest[
             LieART`Irrep[
              Pattern[LieART`Private`algebraClass, 
               Blank[]]][
              Pattern[LieART`Private`label, 
               BlankSequence[]]], LieART`IrrepQ]]] := (
          LieART`DimName[LieART`Private`irrep] = 
          Module[{LieART`Private`dim = LieART`Dim[LieART`Private`irrep], 
             LieART`Private`numPrimes = 0, LieART`Private`conjugate = 0, 
             LieART`Private`so8label = "", LieART`Private`sameDimIrreps, 
             LieART`Private`maxDynkinDigit = 
             LieART`MaxDynkinDigit[
              LieART`Private`algebraClass, {LieART`Private`label}]}, 
            LieART`Private`sameDimIrreps = LieART`GetIrrepByDim[
               LieART`Algebra[LieART`Private`irrep], LieART`Private`dim, 
               LieART`Private`maxDynkinDigit]; 
            If[Length[LieART`Private`sameDimIrreps] > 
              1, {LieART`Private`numPrimes, LieART`Private`conjugate} = First[
                  Position[
                   Map[LieART`Private`SortSameDimAndIndex, 
                    GatherBy[LieART`Private`sameDimIrreps, LieART`Index]], 
                   LieART`Private`irrep]] - 1; 
              If[LieART`Algebra[LieART`Private`irrep] === 
                LieART`Algebra[D][4], 
                LieART`Private`so8label = 
                 LieART`Private`SO8Label[LieART`Private`irrep]; 
                LieART`Private`conjugate = 0; Null]; Null]; 
            If[LieART`Private`so8label == "", 
              LieART`IrrepName[
               LieART`Algebra[LieART`Private`irrep]][
              LieART`Private`dim, LieART`Private`conjugate == 1, 
               LieART`Private`numPrimes], 
              LieART`IrrepName[
               LieART`Algebra[LieART`Private`irrep]][
              LieART`Private`dim, LieART`Private`conjugate == 1, 
               LieART`Private`numPrimes, LieART`Private`so8label]]]), 
         LieART`DimName[
           LieART`ProductIrrep[
            Pattern[LieART`Private`irreps, 
             BlankSequence[]]]] := Apply[LieART`ProductIrrep, 
           Map[LieART`DimName, {LieART`Private`irreps}]], 
         LieART`MaxDynkinDigit[
           Alternatives[LieART`E7, LieART`E8], {
            Pattern[LieART`Private`label, 
             BlankSequence[]]}] := Max[{LieART`Private`label}], 
         LieART`MaxDynkinDigit[
           Alternatives[LieART`A, LieART`B, C, D], {
            Pattern[LieART`Private`label, 
             BlankSequence[]]}] := Condition[
           Max[{LieART`Private`label}], Length[{LieART`Private`label}] >= 5], 
         LieART`MaxDynkinDigit[
           Alternatives[LieART`A, LieART`B, C, D], {
            Pattern[LieART`Private`label, 
             BlankSequence[]]}] := 
         Condition[
          Max[{LieART`Private`label}] + 1, Length[{LieART`Private`label}] < 
           5], LieART`MaxDynkinDigit[
           Alternatives[LieART`E6, LieART`F4], {
            Pattern[LieART`Private`label, 
             BlankSequence[]]}] := Max[{LieART`Private`label}] + 1, 
         LieART`MaxDynkinDigit[LieART`G2, {
            Pattern[LieART`Private`label, 
             BlankSequence[]]}] := Max[{LieART`Private`label}] + 3, 
         TagSet[LieART`MaxDynkinDigit, 
          MessageName[LieART`MaxDynkinDigit, "usage"], "MaxDynkinDigit  "], 
         LieART`Private`SortSameDimAndIndex[
           Pattern[LieART`Private`irreps, 
            Blank[]]] := 
         Sort[LieART`Private`irreps, LieART`Private`OrderingPart[
             LieART`CongruencyClass[#]] <= LieART`Private`OrderingPart[
             LieART`CongruencyClass[#2]]& ], LieART`Private`OrderingPart[
           Pattern[LieART`Private`congruencyClass, 
            Blank[Integer]]] := LieART`Private`congruencyClass, 
         LieART`Private`OrderingPart[
           Pattern[LieART`Private`congruencyClass, 
            Blank[LieART`CongruencyVector]]] := 
         Last[LieART`Private`congruencyClass], LieART`Private`SO8Label[
           Pattern[LieART`Private`irrep, 
            LieART`Irrep[D][
             Blank[], 
             Blank[], 
             Blank[], 
             Blank[]]]] := 
         Module[{LieART`Private`dim = LieART`Dim[LieART`Private`irrep], 
            LieART`Private`sameDimIndexCongruencyClass, 
            LieART`Private`sameDimIrreps, LieART`Private`maxDynkinDigit = 
            LieART`MaxDynkinDigit[D, 
              Apply[List, LieART`Private`irrep]]}, 
           LieART`Private`sameDimIrreps = LieART`GetIrrepByDim[
              LieART`Algebra[LieART`Private`irrep], LieART`Private`dim, 
              LieART`Private`maxDynkinDigit]; 
           LieART`Private`sameDimIndexCongruencyClass = 
            Select[LieART`Private`sameDimIrreps, And[
              LieART`Index[#] == LieART`Index[LieART`Private`irrep], 
               LieART`CongruencyClass[#] == 
               LieART`CongruencyClass[LieART`Private`irrep]]& ]; 
           If[Length[LieART`Private`sameDimIndexCongruencyClass] == 1, 
             LieART`Private`SimpleSO8Label[
              LieART`CongruencyClass[LieART`Private`irrep]], 
             If[
              And[
              LieART`CongruencyClass[LieART`Private`irrep] === 
               LieART`CongruencyVector[0, 0], 
               LieART`Private`NonZeroLabels[LieART`Private`irrep] =!= {1, 2}], 
              LieART`Private`ReducedDynkinLabel[LieART`Private`irrep], 
              LieART`Private`ConcatSO8Label[LieART`Private`irrep]]]], 
         LieART`Private`SimpleSO8Label[
           LieART`CongruencyVector[0, 
            Blank[]]] := "v", LieART`Private`SimpleSO8Label[
           LieART`CongruencyVector[
            Blank[], 0]] := "s", LieART`Private`SimpleSO8Label[
           LieART`CongruencyVector[
            Blank[], 
            Blank[]]] := "c", LieART`Private`NonZeroLabels[
           Pattern[LieART`Private`irrep, 
            Blank[]]] := Sort[
           DeleteDuplicates[
            Cases[
             Apply[List, LieART`Private`irrep], 
             Except[0]]]], LieART`Private`ReducedDynkinLabel[
           Pattern[LieART`Private`irrep, 
            Blank[]]] := 
         Module[{LieART`Private`nonZeroLabels, LieART`Private`label = 
            Apply[List, LieART`Private`irrep]}, 
           LieART`Private`nonZeroLabels = 
            LieART`Private`NonZeroLabels[LieART`Private`irrep]; 
           LieART`Private`SO8Label[
             Apply[
              Head[LieART`Private`irrep], 
              ReplaceAll[LieART`Private`label, 
               MapThread[Rule, {LieART`Private`nonZeroLabels, 
                 Range[
                  Length[LieART`Private`nonZeroLabels]]}]]]]], 
         LieART`Private`ConcatSO8Label[
           Pattern[LieART`Private`irrep, 
            Blank[]]] := 
         Module[{LieART`Private`dynkinLabel = 
            Apply[List, LieART`Private`irrep], 
            LieART`Private`so8labels = {"v", "", "c", "s"}, 
            LieART`Private`nonZeroDynkinLabelOrdering}, 
           LieART`Private`nonZeroDynkinLabelOrdering = Ordering[
              Select[LieART`Private`dynkinLabel, Positive], All, Greater]; 
           StringJoin[
             Part[
              Pick[LieART`Private`so8labels, LieART`Private`dynkinLabel, 
               PatternTest[
                Blank[], Positive]], 
              LieART`Private`nonZeroDynkinLabelOrdering]]], $CellContext`P[
          4] = $CellContext`P[1]^(-1), $CellContext`P[
          5] = $CellContext`P[2]^(-1), $CellContext`P[
          6] = $CellContext`P[3]^(-1), $CellContext`w[LieART`G2] = {0, 2, 
          6}, $CellContext`w[
           LieART`Algebra[LieART`A][1]] = {0, 2}, $CellContext`w[
           LieART`Algebra[LieART`A][2]] = {0, 2, 3}, $CellContext`w[
           LieART`Algebra[LieART`B][3]] = {0, 2, 4, 6}, $CellContext`d[
          LieART`G2] = {1, 1, 2}, $CellContext`d[
           LieART`Algebra[LieART`A][1]] = {1, 1}, $CellContext`d[
           LieART`Algebra[LieART`A][2]] = {1, 1, 1}, $CellContext`d[
           LieART`Algebra[LieART`B][3]] = {1, 1, 1, 1}, $CellContext`x[0] = 
         1, $CellContext`x[
          1] = $CellContext`P[1]^(-1) + $CellContext`P[
           1] + $CellContext`P[2]^(-1) + $CellContext`P[
           2] + $CellContext`P[3]^(-1) + $CellContext`P[3], $CellContext`x[2] = 
         3 + 1/($CellContext`P[1] $CellContext`P[2]) + $CellContext`P[
            1]/$CellContext`P[2] + $CellContext`P[2]/$CellContext`P[
           1] + $CellContext`P[1] $CellContext`P[2] + 
          1/($CellContext`P[1] $CellContext`P[3]) + $CellContext`P[
            1]/$CellContext`P[3] + 
          1/($CellContext`P[2] $CellContext`P[3]) + $CellContext`P[
            2]/$CellContext`P[3] + $CellContext`P[3]/$CellContext`P[
           1] + $CellContext`P[1] $CellContext`P[3] + $CellContext`P[
            3]/$CellContext`P[
           2] + $CellContext`P[2] $CellContext`P[3], $CellContext`x[3] = 
         2/$CellContext`P[1] + 2 $CellContext`P[1] + 2/$CellContext`P[2] + 
          2 $CellContext`P[2] + 2/$CellContext`P[3] + 
          1/(($CellContext`P[1] $CellContext`P[2]) $CellContext`P[
            3]) + $CellContext`P[1]/($CellContext`P[2] $CellContext`P[
            3]) + $CellContext`P[2]/($CellContext`P[1] $CellContext`P[
            3]) + ($CellContext`P[1] $CellContext`P[2])/$CellContext`P[3] + 
          2 $CellContext`P[3] + $CellContext`P[3]/($CellContext`P[
            1] $CellContext`P[
            2]) + ($CellContext`P[1] $CellContext`P[3])/$CellContext`P[
           2] + ($CellContext`P[2] $CellContext`P[3])/$CellContext`P[
           1] + ($CellContext`P[1] $CellContext`P[2]) $CellContext`P[3], 
         LieART`A2 = LieART`Algebra[LieART`A][2], 
         TagSet[LieART`A2, 
          MessageName[LieART`A2, "shdw"], 
          "Symbol `1` appears in multiple contexts `2`; definitions in \
context `3` may shadow or be shadowed by other definitions."], \
$CellContext`solutionB3[
           Pattern[$CellContext`wf, 
            Blank[]]] := Part[
           Solve[Part[
              CoefficientRules[
               ReplaceAll[
                Normal[
                 
                 ReplaceAll[($CellContext`P[1] $CellContext`P[2])^2 (
                   ReplaceAll[
                    $CellContext`\[Phi][$CellContext`wf, 
                    LieART`B3], $CellContext`P[3] -> 
                    1/($CellContext`P[1] $CellContext`P[
                    2])] - $CellContext`Ansatz[$CellContext`wf]), \
{$CellContext`\[Phi][
                    Pattern[$CellContext`a, 
                    Blank[]], 
                    Pattern[$CellContext`b, 
                    Blank[]], 
                    LieART`A2] :> $CellContext`\[Phi][$CellContext`a, 
                    LieART`A2], $CellContext`e4 -> $CellContext`Ei4, \
$CellContext`e6 -> $CellContext`Ei6}]], $CellContext`q -> 0], {
                $CellContext`P[1], 
                $CellContext`P[2]}], All, 2] == 0], 1], LieART`B3 = 
         LieART`Algebra[LieART`B][3], 
         TagSet[LieART`B3, 
          MessageName[LieART`B3, "shdw"], 
          "Symbol `1` appears in multiple contexts `2`; definitions in \
context `3` may shadow or be shadowed by other definitions."], \
$CellContext`Ei4 = 
         SeriesData[$CellContext`q, 0, {1, 240, 2160, 6720}, 0, 4, 
           1], $CellContext`Ei6 = 
         SeriesData[$CellContext`q, 0, {1, -504, -16632, -122976}, 0, 4, 1]}; 
       Typeset`initDone$$ = True),
      SynchronousInitialization->True,
      UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
      UnsavedVariables:>{Typeset`initDone$$},
      UntrackedVariables:>{Typeset`size$$}], "Manipulate",
     Deployed->True,
     StripOnInput->False],
    TraditionalForm],
   Manipulate`InterpretManipulate[1]], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.7977824580931053`*^9, 3.797782605246702*^9, 3.7977826908391633`*^9, 
   3.797782726859249*^9, 3.7977838935921373`*^9, 3.797784575292214*^9, 
   3.797785108627737*^9, 3.797786994182805*^9, 3.7977872764382334`*^9, 
   3.7978822861185865`*^9, 3.7979249340591555`*^9, 3.7979562191644583`*^9, 
   3.7982860849666758`*^9, {3.798319751013712*^9, 3.798319769632781*^9}, 
   3.7983692606562295`*^9, 3.7983990705668*^9, 3.7985700142962484`*^9, {
   3.798802964345661*^9, 3.798802987739563*^9}},
 CellLabel->
  "Out[159]=",ExpressionUUID->"d4bccd5b-91e5-4312-b887-7b68c54fc83d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Ansatz", "[", "wf", "]"}], "/.", 
    RowBox[{"solutionB3", "[", "wf", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"wf", ",", 
     RowBox[{"w", "[", "B3", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7979252073252635`*^9, 3.7979252215728607`*^9}},
 CellLabel->
  "In[160]:=",ExpressionUUID->"1c7aceb1-1655-4393-9c1d-b7e0a31e9e15"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       FractionBox["5", "6"], " ", "e4", " ", 
       SuperscriptBox[
        RowBox[{"\[Phi]", "(", 
         RowBox[{"2", ",", "1", ",", 
          FormBox["\<\"SU(3)\"\>",
           TraditionalForm]}], ")"}], "2"]}]}], "+", 
     RowBox[{
      FractionBox["1", "12"], " ", "e6", " ", 
      SuperscriptBox[
       RowBox[{"\[Phi]", "(", 
        RowBox[{"3", ",", "1", ",", 
         FormBox["\<\"SU(3)\"\>",
          TraditionalForm]}], ")"}], "2"]}], "-", 
     RowBox[{
      FractionBox["10", "3"], " ", 
      SuperscriptBox[
       RowBox[{"\[Phi]", "(", 
        RowBox[{"0", ",", "1", ",", 
         FormBox["\<\"SU(3)\"\>",
          TraditionalForm]}], ")"}], "2"]}]}], ",", 
    RowBox[{
     RowBox[{"e4", " ", 
      SuperscriptBox[
       RowBox[{"\[Phi]", "(", 
        RowBox[{"3", ",", "1", ",", 
         FormBox["\<\"SU(3)\"\>",
          TraditionalForm]}], ")"}], "2"]}], "+", 
     RowBox[{"40", " ", 
      RowBox[{"\[Phi]", "(", 
       RowBox[{"0", ",", "1", ",", 
        FormBox["\<\"SU(3)\"\>",
         TraditionalForm]}], ")"}], " ", 
      RowBox[{"\[Phi]", "(", 
       RowBox[{"2", ",", "1", ",", 
        FormBox["\<\"SU(3)\"\>",
         TraditionalForm]}], ")"}]}]}], ",", 
    RowBox[{"20", " ", 
     SuperscriptBox[
      RowBox[{"\[Phi]", "(", 
       RowBox[{"2", ",", "1", ",", 
        FormBox["\<\"SU(3)\"\>",
         TraditionalForm]}], ")"}], "2"]}], ",", 
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{"\[Phi]", "(", 
       RowBox[{"3", ",", "1", ",", 
        FormBox["\<\"SU(3)\"\>",
         TraditionalForm]}], ")"}], "2"]}]}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.797925223482538*^9, 3.7979559074615808`*^9, 3.7979562233095856`*^9, 
   3.798286088310296*^9, {3.798319755250493*^9, 3.7983197738633385`*^9}, 
   3.798369263939996*^9, 3.798399072901929*^9, 3.7985700169118056`*^9, {
   3.79880296743079*^9, 3.798802990132984*^9}},
 CellLabel->
  "Out[160]=",ExpressionUUID->"c90e1a3d-53f4-4075-b0cf-643ccc7dea0c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FormB3toA2", "[", "wf", "]"}], "=", 
    RowBox[{
     RowBox[{"Ansatz", "[", "wf", "]"}], "/.", 
     RowBox[{"solutionB3", "[", "wf", "]"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"wf", ",", 
     RowBox[{"w", "[", "B3", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.798319665776639*^9, 3.798319714683062*^9}},
 CellLabel->
  "In[161]:=",ExpressionUUID->"b30942d1-d58e-48ac-87f7-9ac5f36f169f"]
}, Closed]],

Cell[CellGroupData[{

Cell["Partition Function relation.", "Chapter",
 CellChangeTimes->{{3.7979560635048*^9, 3.7979560729278955`*^9}, {
  3.7983989685996304`*^9, 
  3.79839897690538*^9}},ExpressionUUID->"b4eb5f1b-6d4a-40f5-96b9-\
da63868b3484"],

Cell[BoxData[
 RowBox[{
  RowBox[{"numilist", "=", 
   RowBox[{"Monitor", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"c", "[", "i", "]"}], "/.", "Fullcsol"}], ")"}], 
        RowBox[{"Expand", "[", 
         RowBox[{
          RowBox[{"terms", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "/.", 
          RowBox[{
           RowBox[{"\[Phi]", "[", 
            RowBox[{"var_", ",", "no_"}], "]"}], "\[RuleDelayed]", 
           RowBox[{"(", 
            RowBox[{"FormB3toA2", "[", "var", "]"}], ")"}]}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "terms", "]"}]}], "}"}]}], "]"}], ",", "i"}], 
    "]"}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{
   "Remember", " ", "to", " ", "get", " ", "this", " ", "parts", " ", "from", 
    " ", "the", " ", "B3", " ", "program"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.797956076415095*^9, 3.7979561598719573`*^9}, {
   3.7979562454669476`*^9, 3.7979563291438165`*^9}, {3.797956413650948*^9, 
   3.79795642143943*^9}, 3.7979564727385426`*^9, {3.7983692733562837`*^9, 
   3.7983692802510715`*^9}, {3.798399280808792*^9, 3.798399294379845*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"5c55287e-3112-418a-98d8-8c0481ff710d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NumB3", "=", 
  RowBox[{
   RowBox[{"Total", "[", "numilist", "]"}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.7979569041982555`*^9, 3.7979569583897996`*^9}, {
  3.797956988919429*^9, 3.7979570061880555`*^9}, {3.797957037457469*^9, 
  3.79795704086382*^9}, {3.798398666970479*^9, 3.7983986688704386`*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"a7bba829-a141-4faa-85ec-21f578c654b5"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox["1", "23110532361879552"], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        SuperscriptBox[
         RowBox[{"\[Phi]", "(", 
          RowBox[{"0", ",", "1", ",", 
           FormBox["\<\"SU(3)\"\>",
            TraditionalForm]}], ")"}], "3"]}], "+", 
       RowBox[{"3", " ", "e4", " ", 
        SuperscriptBox[
         RowBox[{"\[Phi]", "(", 
          RowBox[{"2", ",", "1", ",", 
           FormBox["\<\"SU(3)\"\>",
            TraditionalForm]}], ")"}], "2"], " ", 
        RowBox[{"\[Phi]", "(", 
         RowBox[{"0", ",", "1", ",", 
          FormBox["\<\"SU(3)\"\>",
           TraditionalForm]}], ")"}]}], "+", 
       RowBox[{"e6", " ", 
        SuperscriptBox[
         RowBox[{"\[Phi]", "(", 
          RowBox[{"2", ",", "1", ",", 
           FormBox["\<\"SU(3)\"\>",
            TraditionalForm]}], ")"}], "3"]}]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"\[Phi]", "(", 
      RowBox[{"3", ",", "1", ",", 
       FormBox["\<\"SU(3)\"\>",
        TraditionalForm]}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"131072", " ", 
       RowBox[{"\[Phi]", "(", 
        RowBox[{"2", ",", "1", ",", 
         FormBox["\<\"SU(3)\"\>",
          TraditionalForm]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"\[Phi]", "(", 
         RowBox[{"0", ",", "1", ",", 
          FormBox["\<\"SU(3)\"\>",
           TraditionalForm]}], ")"}], "11"]}], "+", 
      RowBox[{"475136", " ", "e4", " ", 
       SuperscriptBox[
        RowBox[{"\[Phi]", "(", 
         RowBox[{"3", ",", "1", ",", 
          FormBox["\<\"SU(3)\"\>",
           TraditionalForm]}], ")"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"\[Phi]", "(", 
         RowBox[{"0", ",", "1", ",", 
          FormBox["\<\"SU(3)\"\>",
           TraditionalForm]}], ")"}], "10"]}], "-", 
      RowBox[{"16384", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"14", " ", "e4", " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"2", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "3"]}], "-", 
         RowBox[{"73", " ", "e6", " ", 
          RowBox[{"\[Phi]", "(", 
           RowBox[{"2", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"3", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "2"]}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"\[Phi]", "(", 
         RowBox[{"0", ",", "1", ",", 
          FormBox["\<\"SU(3)\"\>",
           TraditionalForm]}], ")"}], "9"]}], "+", 
      RowBox[{"12288", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"40", " ", "e6", " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"2", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "4"]}], "+", 
         RowBox[{"51", " ", 
          SuperscriptBox["e4", "2"], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"3", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"2", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "2"]}], "-", 
         RowBox[{"6", " ", "e4", " ", "e6", " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"3", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "4"]}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"\[Phi]", "(", 
         RowBox[{"0", ",", "1", ",", 
          FormBox["\<\"SU(3)\"\>",
           TraditionalForm]}], ")"}], "8"]}], "+", 
      RowBox[{"12288", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"108", " ", 
          SuperscriptBox["e4", "2"], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"2", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "5"]}], "-", 
         RowBox[{"92", " ", "e4", " ", "e6", " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"3", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"2", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "3"]}], "+", 
         RowBox[{"3", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"3", " ", 
             SuperscriptBox["e4", "3"]}], "-", 
            RowBox[{"11", " ", 
             SuperscriptBox["e6", "2"]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"3", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "4"], " ", 
          RowBox[{"\[Phi]", "(", 
           RowBox[{"2", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}]}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"\[Phi]", "(", 
         RowBox[{"0", ",", "1", ",", 
          FormBox["\<\"SU(3)\"\>",
           TraditionalForm]}], ")"}], "7"]}], "+", 
      RowBox[{"1536", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"448", " ", "e4", " ", "e6", " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"2", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "6"]}], "-", 
         RowBox[{"4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"225", " ", 
             SuperscriptBox["e4", "3"]}], "+", 
            RowBox[{"104", " ", 
             SuperscriptBox["e6", "2"]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"3", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"2", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "4"]}], "-", 
         RowBox[{"336", " ", 
          SuperscriptBox["e4", "2"], " ", "e6", " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"3", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "4"], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"2", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "2"]}], "+", 
         RowBox[{"31", " ", "e4", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["e4", "3"], "-", 
            SuperscriptBox["e6", "2"]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"3", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "6"]}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"\[Phi]", "(", 
         RowBox[{"0", ",", "1", ",", 
          FormBox["\<\"SU(3)\"\>",
           TraditionalForm]}], ")"}], "6"]}], "-", 
      RowBox[{"1536", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"8", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"81", " ", 
             SuperscriptBox["e4", "3"]}], "-", 
            RowBox[{"32", " ", 
             SuperscriptBox["e6", "2"]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"2", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "7"]}], "+", 
         RowBox[{"924", " ", 
          SuperscriptBox["e4", "2"], " ", "e6", " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"3", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"2", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "5"]}], "+", 
         RowBox[{"42", " ", "e4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"9", " ", 
             SuperscriptBox["e4", "3"]}], "-", 
            SuperscriptBox["e6", "2"]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"3", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "4"], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"2", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "3"]}], "+", 
         RowBox[{"21", " ", "e6", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["e6", "2"], "-", 
            SuperscriptBox["e4", "3"]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"3", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "6"], " ", 
          RowBox[{"\[Phi]", "(", 
           RowBox[{"2", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}]}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"\[Phi]", "(", 
         RowBox[{"0", ",", "1", ",", 
          FormBox["\<\"SU(3)\"\>",
           TraditionalForm]}], ")"}], "5"]}], "-", 
      RowBox[{"384", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2592", " ", 
          SuperscriptBox["e4", "2"], " ", "e6", " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"2", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "8"]}], "+", 
         RowBox[{"4", " ", "e4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"81", " ", 
             SuperscriptBox["e4", "3"]}], "+", 
            RowBox[{"248", " ", 
             SuperscriptBox["e6", "2"]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"3", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"2", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "6"]}], "-", 
         RowBox[{"24", " ", "e6", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["e6", "2"], "-", 
            RowBox[{"36", " ", 
             SuperscriptBox["e4", "3"]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"3", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "4"], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"2", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "4"]}], "+", 
         RowBox[{"111", " ", 
          SuperscriptBox["e4", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["e4", "3"], "-", 
            SuperscriptBox["e6", "2"]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"3", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "6"], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"2", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "2"]}], "+", 
         RowBox[{"9", " ", "e4", " ", "e6", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["e4", "3"], "-", 
            SuperscriptBox["e6", "2"]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"3", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "8"]}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"\[Phi]", "(", 
         RowBox[{"0", ",", "1", ",", 
          FormBox["\<\"SU(3)\"\>",
           TraditionalForm]}], ")"}], "4"]}], "-", 
      RowBox[{"96", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "112"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"9", " ", 
             SuperscriptBox["e4", "4"]}], "-", 
            RowBox[{"64", " ", "e4", " ", 
             SuperscriptBox["e6", "2"]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"2", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "9"]}], "+", 
         RowBox[{"32", " ", "e6", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"32", " ", 
             SuperscriptBox["e6", "2"]}], "-", 
            RowBox[{"9", " ", 
             SuperscriptBox["e4", "3"]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"3", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"2", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "7"]}], "-", 
         RowBox[{"24", " ", 
          SuperscriptBox["e4", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"69", " ", 
             SuperscriptBox["e4", "3"]}], "-", 
            RowBox[{"125", " ", 
             SuperscriptBox["e6", "2"]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"3", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "4"], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"2", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "5"]}], "+", 
         RowBox[{"488", " ", "e4", " ", "e6", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["e4", "3"], "-", 
            SuperscriptBox["e6", "2"]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"3", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "6"], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"2", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "3"]}], "+", 
         RowBox[{"3", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"11", " ", 
             SuperscriptBox["e4", "6"]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["e6", "2"], " ", 
             SuperscriptBox["e4", "3"]}], "-", 
            RowBox[{"13", " ", 
             SuperscriptBox["e6", "4"]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"3", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "8"], " ", 
          RowBox[{"\[Phi]", "(", 
           RowBox[{"2", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}]}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"\[Phi]", "(", 
         RowBox[{"0", ",", "1", ",", 
          FormBox["\<\"SU(3)\"\>",
           TraditionalForm]}], ")"}], "3"]}], "-", 
      RowBox[{"4", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"512", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"27", " ", "e6", " ", 
             SuperscriptBox["e4", "3"]}], "+", 
            RowBox[{"64", " ", 
             SuperscriptBox["e6", "3"]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"2", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "10"]}], "-", 
         RowBox[{"144", " ", 
          SuperscriptBox["e4", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"225", " ", 
             SuperscriptBox["e4", "3"]}], "-", 
            RowBox[{"208", " ", 
             SuperscriptBox["e6", "2"]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"3", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"2", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "8"]}], "-", 
         RowBox[{"1152", " ", "e4", " ", "e6", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"18", " ", 
             SuperscriptBox["e4", "3"]}], "-", 
            RowBox[{"25", " ", 
             SuperscriptBox["e6", "2"]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"3", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "4"], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"2", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "6"]}], "-", 
         RowBox[{"72", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"3", " ", 
             SuperscriptBox["e4", "6"]}], "-", 
            RowBox[{"43", " ", 
             SuperscriptBox["e6", "2"], " ", 
             SuperscriptBox["e4", "3"]}], "+", 
            RowBox[{"40", " ", 
             SuperscriptBox["e6", "4"]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"3", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "6"], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"2", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "4"]}], "+", 
         RowBox[{"1296", " ", 
          SuperscriptBox["e4", "2"], " ", "e6", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["e4", "3"], "-", 
            SuperscriptBox["e6", "2"]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"3", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "8"], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"2", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "2"]}], "+", 
         RowBox[{"27", " ", "e4", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["e4", "3"], "-", 
             SuperscriptBox["e6", "2"]}], ")"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"3", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "10"]}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"\[Phi]", "(", 
         RowBox[{"0", ",", "1", ",", 
          FormBox["\<\"SU(3)\"\>",
           TraditionalForm]}], ")"}], "2"]}], "-", 
      RowBox[{"4", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"7776", " ", 
          SuperscriptBox["e4", "5"], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"2", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "11"]}], "+", 
         RowBox[{"16", " ", "e4", " ", "e6", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"1088", " ", 
             SuperscriptBox["e6", "2"]}], "-", 
            RowBox[{"1161", " ", 
             SuperscriptBox["e4", "3"]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"3", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"2", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "9"]}], "+", 
         RowBox[{"144", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"9", " ", 
             SuperscriptBox["e4", "6"]}], "-", 
            RowBox[{"33", " ", 
             SuperscriptBox["e6", "2"], " ", 
             SuperscriptBox["e4", "3"]}], "+", 
            RowBox[{"32", " ", 
             SuperscriptBox["e6", "4"]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"3", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "4"], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"2", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "7"]}], "-", 
         RowBox[{"504", " ", 
          SuperscriptBox["e4", "2"], " ", "e6", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["e4", "3"], "-", 
            SuperscriptBox["e6", "2"]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"3", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "6"], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"2", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "5"]}], "+", 
         RowBox[{"54", " ", "e4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"5", " ", 
             SuperscriptBox["e4", "6"]}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox["e6", "2"], " ", 
             SuperscriptBox["e4", "3"]}], "-", 
            RowBox[{"3", " ", 
             SuperscriptBox["e6", "4"]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"3", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "8"], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"2", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "3"]}], "+", 
         RowBox[{"27", " ", "e6", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["e4", "3"], "-", 
             SuperscriptBox["e6", "2"]}], ")"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"3", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "10"], " ", 
          RowBox[{"\[Phi]", "(", 
           RowBox[{"2", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}]}]}], ")"}], " ", 
       RowBox[{"\[Phi]", "(", 
        RowBox[{"0", ",", "1", ",", 
         FormBox["\<\"SU(3)\"\>",
          TraditionalForm]}], ")"}]}], "-", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"\[Phi]", "(", 
         RowBox[{"2", ",", "1", ",", 
          FormBox["\<\"SU(3)\"\>",
           TraditionalForm]}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"128", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"81", " ", 
             SuperscriptBox["e4", "4"], " ", "e6"}], "-", 
            RowBox[{"64", " ", "e4", " ", 
             SuperscriptBox["e6", "3"]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"2", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "10"]}], "+", 
         RowBox[{"16", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"243", " ", 
             SuperscriptBox["e4", "6"]}], "-", 
            RowBox[{"1296", " ", 
             SuperscriptBox["e6", "2"], " ", 
             SuperscriptBox["e4", "3"]}], "+", 
            RowBox[{"1024", " ", 
             SuperscriptBox["e6", "4"]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"3", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"2", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "8"]}], "+", 
         RowBox[{"288", " ", 
          SuperscriptBox["e4", "2"], " ", "e6", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"3", " ", 
             SuperscriptBox["e4", "3"]}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox["e6", "2"]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"3", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "4"], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"2", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "6"]}], "+", 
         RowBox[{"24", " ", "e4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"9", " ", 
             SuperscriptBox["e4", "6"]}], "-", 
            RowBox[{"49", " ", 
             SuperscriptBox["e6", "2"], " ", 
             SuperscriptBox["e4", "3"]}], "+", 
            RowBox[{"40", " ", 
             SuperscriptBox["e6", "4"]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"3", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "6"], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"2", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "4"]}], "+", 
         RowBox[{"72", " ", "e6", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", 
             SuperscriptBox["e4", "6"]}], "-", 
            RowBox[{"5", " ", 
             SuperscriptBox["e6", "2"], " ", 
             SuperscriptBox["e4", "3"]}], "+", 
            SuperscriptBox["e6", "4"]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"3", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "8"], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"2", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "2"]}], "+", 
         RowBox[{"27", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["e4", "4"], "-", 
             RowBox[{"e4", " ", 
              SuperscriptBox["e6", "2"]}]}], ")"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]", "(", 
            RowBox[{"3", ",", "1", ",", 
             FormBox["\<\"SU(3)\"\>",
              TraditionalForm]}], ")"}], "10"]}]}], ")"}]}]}], ")"}]}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.797957007068762*^9, 3.7979570416507125`*^9, 
  3.798286088742056*^9, 3.7982864080014086`*^9, 3.798369329615882*^9, 
  3.7983986768343925`*^9, 3.7983990739414806`*^9, 3.7983993040911083`*^9, 
  3.7983993759881496`*^9},
 CellLabel->
  "Out[148]=",ExpressionUUID->"107bd46c-a334-4059-9153-91797aa4cc76"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"tot", "//", "Expand"}], "]"}]], "Input",
 CellChangeTimes->{{3.797957043629177*^9, 3.7979570662067156`*^9}},
 CellLabel->
  "In[149]:=",ExpressionUUID->"eb9c5594-79e7-4e8b-8796-b238625d8756"],

Cell[BoxData[
 FormBox["0", TraditionalForm]], "Output",
 CellChangeTimes->{{3.7979570468690434`*^9, 3.7979570666914177`*^9}, 
   3.79828608888352*^9, 3.7982864193092346`*^9, 3.798399074189815*^9, 
   3.7983993043721757`*^9, 3.798399376175352*^9},
 CellLabel->
  "Out[149]=",ExpressionUUID->"683b58cb-4418-4345-97d1-19a55e3dc38d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NumA2", "=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{"0", ",", "1", ",", "A2"}], "]"}], "^", "2"}], "*", 
        RowBox[{"\[Phi]", "[", 
         RowBox[{"2", ",", "1", ",", "A2"}], "]"}]}], ")"}]}], "/", "6"}], 
    "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"e4", "*", 
       RowBox[{
        RowBox[{"\[Phi]", "[", 
         RowBox[{"2", ",", "1", ",", "A2"}], "]"}], "^", "3"}]}], ")"}], "/", 
     "24"}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"e4", "*", 
       RowBox[{"\[Phi]", "[", 
        RowBox[{"0", ",", "1", ",", "A2"}], "]"}], "*", 
       RowBox[{
        RowBox[{"\[Phi]", "[", 
         RowBox[{"3", ",", "1", ",", "A2"}], "]"}], "^", "2"}]}], ")"}], "/", 
     "24"}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"e6", "*", 
       RowBox[{"\[Phi]", "[", 
        RowBox[{"2", ",", "1", ",", "A2"}], "]"}], "*", 
       RowBox[{
        RowBox[{"\[Phi]", "[", 
         RowBox[{"3", ",", "1", ",", "A2"}], "]"}], "^", "2"}]}], ")"}], "/", 
     "48"}]}], ")"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"This", " ", "is", " ", "the", " ", "A2"}], ",", " ", 
    RowBox[{"G2", " ", "numerator"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7979574445702477`*^9, 3.79795751222211*^9}, {
  3.7979578007427464`*^9, 3.7979578025242043`*^9}, {3.7979588758140554`*^9, 
  3.7979589046913185`*^9}, {3.798286945950637*^9, 3.7982869620647964`*^9}, {
  3.798398686940216*^9, 3.7983986883981075`*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"15b70a5b-0e02-46a1-bc4d-08f5a9e0955d"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    FractionBox["1", "24"], " ", "e4", " ", 
    SuperscriptBox[
     RowBox[{"\[Phi]", "(", 
      RowBox[{"2", ",", "1", ",", 
       FormBox["\<\"SU(3)\"\>",
        TraditionalForm]}], ")"}], "3"]}], "-", 
   RowBox[{
    FractionBox["1", "24"], " ", "e4", " ", 
    RowBox[{"\[Phi]", "(", 
     RowBox[{"0", ",", "1", ",", 
      FormBox["\<\"SU(3)\"\>",
       TraditionalForm]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"\[Phi]", "(", 
      RowBox[{"3", ",", "1", ",", 
       FormBox["\<\"SU(3)\"\>",
        TraditionalForm]}], ")"}], "2"]}], "-", 
   RowBox[{
    FractionBox["1", "48"], " ", "e6", " ", 
    SuperscriptBox[
     RowBox[{"\[Phi]", "(", 
      RowBox[{"3", ",", "1", ",", 
       FormBox["\<\"SU(3)\"\>",
        TraditionalForm]}], ")"}], "2"], " ", 
    RowBox[{"\[Phi]", "(", 
     RowBox[{"2", ",", "1", ",", 
      FormBox["\<\"SU(3)\"\>",
       TraditionalForm]}], ")"}]}], "-", 
   RowBox[{
    FractionBox["1", "6"], " ", 
    SuperscriptBox[
     RowBox[{"\[Phi]", "(", 
      RowBox[{"0", ",", "1", ",", 
       FormBox["\<\"SU(3)\"\>",
        TraditionalForm]}], ")"}], "2"], " ", 
    RowBox[{"\[Phi]", "(", 
     RowBox[{"2", ",", "1", ",", 
      FormBox["\<\"SU(3)\"\>",
       TraditionalForm]}], ")"}]}]}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.797957476020258*^9, 3.797957513006201*^9}, 
   3.797957805227519*^9, {3.7979588866715846`*^9, 3.7979589055639896`*^9}, 
   3.798286089027994*^9, 3.7982869424700603`*^9, 3.798287081450635*^9, 
   3.7983250357023773`*^9, 3.7983627618667603`*^9, 3.798369106816537*^9, 
   3.798398690091831*^9, 3.7983990743793077`*^9, 3.798399304626708*^9, 
   3.7983993764712963`*^9, 3.7985701204118853`*^9},
 CellLabel->
  "Out[111]=",ExpressionUUID->"e9a38344-587f-402d-8ce5-2cc13af1dc8a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ExpandInJacobiForm", "[", 
   RowBox[{
   "algebra_", ",", "toexpand_", ",", "index_", ",", "weight_", ",", "max_"}],
    "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "gen", ",", "Ansatz", ",", "nP", ",", "difference", ",", "variables", 
      ",", "solution", ",", "i", ",", "terms", ",", "numTerms"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"gen", "=", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"1", "-", 
         RowBox[{"e4", " ", 
          SuperscriptBox["z", "4"]}]}]], 
       FractionBox["1", 
        RowBox[{"1", "-", 
         RowBox[{"e6", " ", 
          SuperscriptBox["z", "6"]}]}]], 
       RowBox[{"Product", "[", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"\[Phi]", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"w", "[", "algebra", "]"}], "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{"d", "[", "algebra", "]"}], "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", "algebra"}], "]"}], 
             RowBox[{"x", "^", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"d", "[", "algebra", "]"}], "[", 
                RowBox[{"[", "i", "]"}], "]"}], ")"}]}], 
             SuperscriptBox["z", 
              RowBox[{"-", 
               RowBox[{
                RowBox[{"w", "[", "algebra", "]"}], "[", 
                RowBox[{"[", "i", "]"}], "]"}]}]]}]}], ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{
            RowBox[{"Rank", "[", "algebra", "]"}], "+", "1"}]}], "}"}]}], 
        "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"terms", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"{", 
        RowBox[{"Replace", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"SeriesCoefficient", "[", 
             RowBox[{"gen", ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "0", ",", "index"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"z", ",", "0", ",", "weight"}], "}"}]}], "]"}], "//", 
            "Expand"}], ")"}], ",", 
          RowBox[{
           RowBox[{"HoldPattern", "[", 
            RowBox[{"Plus", "[", "x__", "]"}], "]"}], "\[RuleDelayed]", 
           RowBox[{"List", "[", "x", "]"}]}]}], "]"}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Ansatz", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"c", "[", "i", "]"}], 
           RowBox[{"##", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "##", "]"}]}], "}"}]}], "]"}], "&"}], "@", 
       "terms"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"numTerms", "=", 
      RowBox[{"Length", "[", "terms", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"difference", "=", 
      RowBox[{
       RowBox[{"Normal", "[", 
        RowBox[{"(", 
         RowBox[{"toexpand", "-", 
          RowBox[{"(", 
           RowBox[{"Ansatz", "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"\[Phi]", "[", 
                RowBox[{"a_", ",", "b_", ",", "algebra"}], "]"}], 
               "\[RuleDelayed]", 
               RowBox[{"\[Phi]", "[", 
                RowBox[{"a", ",", "algebra"}], "]"}]}], ",", 
              RowBox[{"e4", "\[Rule]", " ", "Ei4"}], ",", 
              RowBox[{"e6", "\[Rule]", "Ei6"}]}], "}"}]}], ")"}]}], ")"}], 
        "]"}], "/.", 
       RowBox[{
        RowBox[{"P", "[", "i_", "]"}], "\[RuleDelayed]", 
        SuperscriptBox[
         RowBox[{"P", "[", "i", "]"}], "2"]}]}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{
      "The", " ", "last", " ", "replacement", " ", "is", " ", "to", " ", "be",
        " ", "able", " ", "to", " ", "do", " ", "it", " ", "for", " ", "Cl", 
       " ", "that", " ", "has", " ", "integer", " ", "entries"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"variables", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Array", "[", 
           RowBox[{"P", ",", "#"}], "]"}], ",", 
          RowBox[{"Array", "[", 
           RowBox[{"nP", ",", "#"}], "]"}]}], "]"}], "&"}], "@", 
       RowBox[{"OrthogonalDimension", "[", "algebra", "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"solution", "[", 
       RowBox[{"-", "1"}], "]"}], "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"solution", "[", "i_", "]"}], ":=", 
      RowBox[{
       RowBox[{"solution", "[", "i", "]"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"solution", "[", 
             RowBox[{"i", "-", "1"}], "]"}], "/.", "#"}], ",", "#"}], "]"}], 
         "&"}], "@", 
        RowBox[{
         RowBox[{"Solve", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"CoefficientRules", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Expand", "[", 
                RowBox[{"PowerExpand", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"D", "[", 
                    RowBox[{"difference", ",", 
                    RowBox[{"{", 
                    RowBox[{"q", ",", "i"}], "}"}]}], "]"}], "/.", 
                   RowBox[{"q", "\[Rule]", "0"}]}], "/.", 
                  RowBox[{"solution", "[", 
                   RowBox[{"i", "-", "1"}], "]"}]}], "]"}], "]"}], "/.", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"P", "[", "k_", "]"}], "^", "n_"}], "/;", 
                 RowBox[{"n", "<", "0"}]}], "\[RuleDelayed]", "  ", 
                SuperscriptBox[
                 RowBox[{"nP", "[", "k", "]"}], 
                 RowBox[{"-", "n"}]]}]}], ",", "variables"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], "\[Equal]", "0"}], 
          "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"i", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"StringJoin", "[", 
       RowBox[{"\"\<So far, I have solved for \>\"", ",", 
        RowBox[{"ToString", "[", 
         RowBox[{"Length", "[", 
          RowBox[{"solution", "[", 
           RowBox[{"i", "-", "1"}], "]"}], "]"}], "]"}], ",", "\"\< of \>\"", 
        ",", 
        RowBox[{"ToString", "[", "numTerms", "]"}], ",", "\"\< terms.\>\"", 
        " ", ",", "\"\< I am checking the solution at order q ^\>\"", " ", 
        ",", 
        RowBox[{"ToString", "[", "i", "]"}], ",", "\"\< just a sec ...\>\""}],
        "]"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"solution", "[", "i", "]"}], "]"}], "<", "numTerms"}], "&&",
         " ", 
        RowBox[{"i", "<", "max"}]}], ",", 
       RowBox[{
        RowBox[{"i", "++"}], ";", 
        RowBox[{"Print", "[", 
         RowBox[{"StringJoin", "[", 
          RowBox[{"\"\<So far, I have solved for \>\"", ",", 
           RowBox[{"ToString", "[", 
            RowBox[{"Length", "[", 
             RowBox[{"solution", "[", 
              RowBox[{"i", "-", "1"}], "]"}], "]"}], "]"}], ",", 
           "\"\< of \>\"", ",", 
           RowBox[{"ToString", "[", "numTerms", "]"}], ",", "\"\< terms.\>\"",
            " ", ",", "\"\< I am checking the solution at order q ^\>\"", " ",
            ",", 
           RowBox[{"ToString", "[", "i", "]"}], ",", 
           "\"\< just a sec ...\>\""}], "]"}], "]"}], ";"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Ansatz", "/.", 
      RowBox[{"solution", "[", "i", "]"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.799004140312949*^9, 3.799004183081384*^9}, {
  3.7990048918000927`*^9, 3.799004892814799*^9}, {3.799006265435155*^9, 
  3.799006275054144*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"6888911b-bfdb-4176-8b7c-3b18207040e5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"extraDen", "=", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"\[Phi]", "[", 
      RowBox[{"6", ",", "B3"}], "]"}]}], "/.", 
    RowBox[{
     RowBox[{"P", "[", "i_", "]"}], "\[Rule]", 
     SuperscriptBox[
      RowBox[{"P", "[", "i", "]"}], "2"]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7983987388848248`*^9, 3.7983987407467995`*^9}},
 CellLabel->
  "In[152]:=",ExpressionUUID->"6370c6e7-c688-49ea-b8f9-a4caccb84d9c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"expaextraDen", "=", 
    RowBox[{"ExpandInJacobiForm", "[", 
     RowBox[{"B3", ",", "extraDen", ",", "4", ",", 
      RowBox[{"-", "6"}], ",", "M"}], "]"}]}], ";"}], "//", 
  "Timing"}]], "Input",
 CellChangeTimes->{{3.7983987562801476`*^9, 3.798398760075836*^9}},
 CellLabel->
  "In[153]:=",ExpressionUUID->"f0003d0d-5c6e-40da-ab6c-e989abd4169a"],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox["\<\"So far, I have solved for 0 of 32 terms. I am checking the \
solution at order q ^0 just a sec ...\"\>", TraditionalForm]], "Print",
 CellChangeTimes->{3.7983987743032503`*^9, 3.79839908752684*^9, 
  3.798399326316546*^9, 3.7983993892618546`*^9},
 CellLabel->
  "During evaluation of \
In[153]:=",ExpressionUUID->"4b9a891f-28c7-4e5c-8ae0-c5feae90e80a"],

Cell[BoxData[
 FormBox["\<\"So far, I have solved for 27 of 32 terms. I am checking the \
solution at order q ^1 just a sec ...\"\>", TraditionalForm]], "Print",
 CellChangeTimes->{3.7983987743032503`*^9, 3.79839908752684*^9, 
  3.798399326316546*^9, 3.7983993914824514`*^9},
 CellLabel->
  "During evaluation of \
In[153]:=",ExpressionUUID->"66cffc5e-6602-4d85-9920-c52fc880416f"]
}, Open  ]],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"17.734375`", ",", "Null"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.7983987816395416`*^9, 3.7983990932103915`*^9, 
  3.7983993319611235`*^9, 3.7983993949272137`*^9},
 CellLabel->
  "Out[153]=",ExpressionUUID->"1a354b9d-05c7-451e-b5c1-560a8af5487d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.798400100241494*^9},
 NumberMarks->False,ExpressionUUID->"dc30d14b-7a4f-4ead-b9f2-356968532102"],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox["\<\"So far, I have solved for 0 of 32 terms. I am checking the \
solution at order q ^0 just a sec ...\"\>", TraditionalForm]], "Print",
 CellChangeTimes->{3.798400105401791*^9},
 CellLabel->
  "During evaluation of \
In[173]:=",ExpressionUUID->"eb8dd6f4-b52e-4b08-b4ff-354be6870edf"],

Cell[BoxData[
 FormBox["\<\"So far, I have solved for 27 of 32 terms. I am checking the \
solution at order q ^1 just a sec ...\"\>", TraditionalForm]], "Print",
 CellChangeTimes->{3.7984001079150295`*^9},
 CellLabel->
  "During evaluation of \
In[173]:=",ExpressionUUID->"7498bdec-9eb9-43f4-b4ce-8c2fb498c72c"]
}, Open  ]],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"14.5711932`", ",", "Null"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.7984001113609495`*^9},
 CellLabel->
  "Out[173]=",ExpressionUUID->"63f0c57a-ed51-455f-ac89-525341f34d2d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NumB3Clean", "=", 
  RowBox[{
   FractionBox["NumB3", 
    RowBox[{"expaextraDen", "/.", 
     RowBox[{
      RowBox[{"\[Phi]", "[", 
       RowBox[{"var_", ",", "a_", ",", "B3"}], "]"}], "\[RuleDelayed]", 
      RowBox[{"FormB3toA2", "[", "var", "]"}]}]}]], "//", "Simplify", " ", 
   RowBox[{"(*", 
    RowBox[{"Note", " ", "this", " ", "is", " ", "holomorphic"}], 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.79839881032047*^9, 3.7983988261327677`*^9}, {
  3.7983989143675604`*^9, 3.7983989392440176`*^9}},
 CellLabel->
  "In[157]:=",ExpressionUUID->"129f8071-4add-40b3-8725-3103dd54c250"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox["1", "1981355655168"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"131072", " ", 
      RowBox[{"\[Phi]", "(", 
       RowBox[{"2", ",", "1", ",", 
        FormBox["\<\"SU(3)\"\>",
         TraditionalForm]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"\[Phi]", "(", 
        RowBox[{"0", ",", "1", ",", 
         FormBox["\<\"SU(3)\"\>",
          TraditionalForm]}], ")"}], "11"]}], "+", 
     RowBox[{"475136", " ", "e4", " ", 
      SuperscriptBox[
       RowBox[{"\[Phi]", "(", 
        RowBox[{"3", ",", "1", ",", 
         FormBox["\<\"SU(3)\"\>",
          TraditionalForm]}], ")"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"\[Phi]", "(", 
        RowBox[{"0", ",", "1", ",", 
         FormBox["\<\"SU(3)\"\>",
          TraditionalForm]}], ")"}], "10"]}], "-", 
     RowBox[{"16384", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"14", " ", "e4", " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"2", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "3"]}], "-", 
        RowBox[{"73", " ", "e6", " ", 
         RowBox[{"\[Phi]", "(", 
          RowBox[{"2", ",", "1", ",", 
           FormBox["\<\"SU(3)\"\>",
            TraditionalForm]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"3", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "2"]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"\[Phi]", "(", 
        RowBox[{"0", ",", "1", ",", 
         FormBox["\<\"SU(3)\"\>",
          TraditionalForm]}], ")"}], "9"]}], "+", 
     RowBox[{"12288", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"40", " ", "e6", " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"2", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "4"]}], "+", 
        RowBox[{"51", " ", 
         SuperscriptBox["e4", "2"], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"3", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"2", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "2"]}], "-", 
        RowBox[{"6", " ", "e4", " ", "e6", " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"3", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "4"]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"\[Phi]", "(", 
        RowBox[{"0", ",", "1", ",", 
         FormBox["\<\"SU(3)\"\>",
          TraditionalForm]}], ")"}], "8"]}], "+", 
     RowBox[{"12288", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"108", " ", 
         SuperscriptBox["e4", "2"], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"2", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "5"]}], "-", 
        RowBox[{"92", " ", "e4", " ", "e6", " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"3", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"2", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "3"]}], "+", 
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"3", " ", 
            SuperscriptBox["e4", "3"]}], "-", 
           RowBox[{"11", " ", 
            SuperscriptBox["e6", "2"]}]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"3", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "4"], " ", 
         RowBox[{"\[Phi]", "(", 
          RowBox[{"2", ",", "1", ",", 
           FormBox["\<\"SU(3)\"\>",
            TraditionalForm]}], ")"}]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"\[Phi]", "(", 
        RowBox[{"0", ",", "1", ",", 
         FormBox["\<\"SU(3)\"\>",
          TraditionalForm]}], ")"}], "7"]}], "+", 
     RowBox[{"1536", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"448", " ", "e4", " ", "e6", " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"2", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "6"]}], "-", 
        RowBox[{"4", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"225", " ", 
            SuperscriptBox["e4", "3"]}], "+", 
           RowBox[{"104", " ", 
            SuperscriptBox["e6", "2"]}]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"3", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"2", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "4"]}], "-", 
        RowBox[{"336", " ", 
         SuperscriptBox["e4", "2"], " ", "e6", " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"3", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "4"], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"2", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "2"]}], "+", 
        RowBox[{"31", " ", "e4", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["e4", "3"], "-", 
           SuperscriptBox["e6", "2"]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"3", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "6"]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"\[Phi]", "(", 
        RowBox[{"0", ",", "1", ",", 
         FormBox["\<\"SU(3)\"\>",
          TraditionalForm]}], ")"}], "6"]}], "-", 
     RowBox[{"1536", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"81", " ", 
            SuperscriptBox["e4", "3"]}], "-", 
           RowBox[{"32", " ", 
            SuperscriptBox["e6", "2"]}]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"2", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "7"]}], "+", 
        RowBox[{"924", " ", 
         SuperscriptBox["e4", "2"], " ", "e6", " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"3", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"2", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "5"]}], "+", 
        RowBox[{"42", " ", "e4", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"9", " ", 
            SuperscriptBox["e4", "3"]}], "-", 
           SuperscriptBox["e6", "2"]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"3", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "4"], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"2", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "3"]}], "+", 
        RowBox[{"21", " ", "e6", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["e6", "2"], "-", 
           SuperscriptBox["e4", "3"]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"3", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "6"], " ", 
         RowBox[{"\[Phi]", "(", 
          RowBox[{"2", ",", "1", ",", 
           FormBox["\<\"SU(3)\"\>",
            TraditionalForm]}], ")"}]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"\[Phi]", "(", 
        RowBox[{"0", ",", "1", ",", 
         FormBox["\<\"SU(3)\"\>",
          TraditionalForm]}], ")"}], "5"]}], "-", 
     RowBox[{"384", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2592", " ", 
         SuperscriptBox["e4", "2"], " ", "e6", " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"2", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "8"]}], "+", 
        RowBox[{"4", " ", "e4", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"81", " ", 
            SuperscriptBox["e4", "3"]}], "+", 
           RowBox[{"248", " ", 
            SuperscriptBox["e6", "2"]}]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"3", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"2", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "6"]}], "-", 
        RowBox[{"24", " ", "e6", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["e6", "2"], "-", 
           RowBox[{"36", " ", 
            SuperscriptBox["e4", "3"]}]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"3", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "4"], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"2", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "4"]}], "+", 
        RowBox[{"111", " ", 
         SuperscriptBox["e4", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["e4", "3"], "-", 
           SuperscriptBox["e6", "2"]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"3", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "6"], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"2", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "2"]}], "+", 
        RowBox[{"9", " ", "e4", " ", "e6", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["e4", "3"], "-", 
           SuperscriptBox["e6", "2"]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"3", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "8"]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"\[Phi]", "(", 
        RowBox[{"0", ",", "1", ",", 
         FormBox["\<\"SU(3)\"\>",
          TraditionalForm]}], ")"}], "4"]}], "-", 
     RowBox[{"96", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "112"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"9", " ", 
            SuperscriptBox["e4", "4"]}], "-", 
           RowBox[{"64", " ", "e4", " ", 
            SuperscriptBox["e6", "2"]}]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"2", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "9"]}], "+", 
        RowBox[{"32", " ", "e6", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"32", " ", 
            SuperscriptBox["e6", "2"]}], "-", 
           RowBox[{"9", " ", 
            SuperscriptBox["e4", "3"]}]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"3", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"2", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "7"]}], "-", 
        RowBox[{"24", " ", 
         SuperscriptBox["e4", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"69", " ", 
            SuperscriptBox["e4", "3"]}], "-", 
           RowBox[{"125", " ", 
            SuperscriptBox["e6", "2"]}]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"3", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "4"], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"2", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "5"]}], "+", 
        RowBox[{"488", " ", "e4", " ", "e6", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["e4", "3"], "-", 
           SuperscriptBox["e6", "2"]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"3", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "6"], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"2", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "3"]}], "+", 
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"11", " ", 
            SuperscriptBox["e4", "6"]}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["e6", "2"], " ", 
            SuperscriptBox["e4", "3"]}], "-", 
           RowBox[{"13", " ", 
            SuperscriptBox["e6", "4"]}]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"3", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "8"], " ", 
         RowBox[{"\[Phi]", "(", 
          RowBox[{"2", ",", "1", ",", 
           FormBox["\<\"SU(3)\"\>",
            TraditionalForm]}], ")"}]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"\[Phi]", "(", 
        RowBox[{"0", ",", "1", ",", 
         FormBox["\<\"SU(3)\"\>",
          TraditionalForm]}], ")"}], "3"]}], "-", 
     RowBox[{"4", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"512", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"27", " ", "e6", " ", 
            SuperscriptBox["e4", "3"]}], "+", 
           RowBox[{"64", " ", 
            SuperscriptBox["e6", "3"]}]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"2", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "10"]}], "-", 
        RowBox[{"144", " ", 
         SuperscriptBox["e4", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"225", " ", 
            SuperscriptBox["e4", "3"]}], "-", 
           RowBox[{"208", " ", 
            SuperscriptBox["e6", "2"]}]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"3", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"2", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "8"]}], "-", 
        RowBox[{"1152", " ", "e4", " ", "e6", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"18", " ", 
            SuperscriptBox["e4", "3"]}], "-", 
           RowBox[{"25", " ", 
            SuperscriptBox["e6", "2"]}]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"3", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "4"], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"2", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "6"]}], "-", 
        RowBox[{"72", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"3", " ", 
            SuperscriptBox["e4", "6"]}], "-", 
           RowBox[{"43", " ", 
            SuperscriptBox["e6", "2"], " ", 
            SuperscriptBox["e4", "3"]}], "+", 
           RowBox[{"40", " ", 
            SuperscriptBox["e6", "4"]}]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"3", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "6"], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"2", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "4"]}], "+", 
        RowBox[{"1296", " ", 
         SuperscriptBox["e4", "2"], " ", "e6", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["e4", "3"], "-", 
           SuperscriptBox["e6", "2"]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"3", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "8"], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"2", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "2"]}], "+", 
        RowBox[{"27", " ", "e4", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["e4", "3"], "-", 
            SuperscriptBox["e6", "2"]}], ")"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"3", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "10"]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"\[Phi]", "(", 
        RowBox[{"0", ",", "1", ",", 
         FormBox["\<\"SU(3)\"\>",
          TraditionalForm]}], ")"}], "2"]}], "-", 
     RowBox[{"4", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"7776", " ", 
         SuperscriptBox["e4", "5"], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"2", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "11"]}], "+", 
        RowBox[{"16", " ", "e4", " ", "e6", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"1088", " ", 
            SuperscriptBox["e6", "2"]}], "-", 
           RowBox[{"1161", " ", 
            SuperscriptBox["e4", "3"]}]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"3", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"2", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "9"]}], "+", 
        RowBox[{"144", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"9", " ", 
            SuperscriptBox["e4", "6"]}], "-", 
           RowBox[{"33", " ", 
            SuperscriptBox["e6", "2"], " ", 
            SuperscriptBox["e4", "3"]}], "+", 
           RowBox[{"32", " ", 
            SuperscriptBox["e6", "4"]}]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"3", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "4"], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"2", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "7"]}], "-", 
        RowBox[{"504", " ", 
         SuperscriptBox["e4", "2"], " ", "e6", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["e4", "3"], "-", 
           SuperscriptBox["e6", "2"]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"3", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "6"], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"2", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "5"]}], "+", 
        RowBox[{"54", " ", "e4", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"5", " ", 
            SuperscriptBox["e4", "6"]}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["e6", "2"], " ", 
            SuperscriptBox["e4", "3"]}], "-", 
           RowBox[{"3", " ", 
            SuperscriptBox["e6", "4"]}]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"3", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "8"], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"2", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "3"]}], "+", 
        RowBox[{"27", " ", "e6", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["e4", "3"], "-", 
            SuperscriptBox["e6", "2"]}], ")"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"3", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "10"], " ", 
         RowBox[{"\[Phi]", "(", 
          RowBox[{"2", ",", "1", ",", 
           FormBox["\<\"SU(3)\"\>",
            TraditionalForm]}], ")"}]}]}], ")"}], " ", 
      RowBox[{"\[Phi]", "(", 
       RowBox[{"0", ",", "1", ",", 
        FormBox["\<\"SU(3)\"\>",
         TraditionalForm]}], ")"}]}], "-", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"\[Phi]", "(", 
        RowBox[{"2", ",", "1", ",", 
         FormBox["\<\"SU(3)\"\>",
          TraditionalForm]}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"128", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"81", " ", 
            SuperscriptBox["e4", "4"], " ", "e6"}], "-", 
           RowBox[{"64", " ", "e4", " ", 
            SuperscriptBox["e6", "3"]}]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"2", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "10"]}], "+", 
        RowBox[{"16", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"243", " ", 
            SuperscriptBox["e4", "6"]}], "-", 
           RowBox[{"1296", " ", 
            SuperscriptBox["e6", "2"], " ", 
            SuperscriptBox["e4", "3"]}], "+", 
           RowBox[{"1024", " ", 
            SuperscriptBox["e6", "4"]}]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"3", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"2", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "8"]}], "+", 
        RowBox[{"288", " ", 
         SuperscriptBox["e4", "2"], " ", "e6", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"3", " ", 
            SuperscriptBox["e4", "3"]}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["e6", "2"]}]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"3", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "4"], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"2", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "6"]}], "+", 
        RowBox[{"24", " ", "e4", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"9", " ", 
            SuperscriptBox["e4", "6"]}], "-", 
           RowBox[{"49", " ", 
            SuperscriptBox["e6", "2"], " ", 
            SuperscriptBox["e4", "3"]}], "+", 
           RowBox[{"40", " ", 
            SuperscriptBox["e6", "4"]}]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"3", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "6"], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"2", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "4"]}], "+", 
        RowBox[{"72", " ", "e6", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", 
            SuperscriptBox["e4", "6"]}], "-", 
           RowBox[{"5", " ", 
            SuperscriptBox["e6", "2"], " ", 
            SuperscriptBox["e4", "3"]}], "+", 
           SuperscriptBox["e6", "4"]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"3", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "8"], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"2", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "2"]}], "+", 
        RowBox[{"27", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["e4", "4"], "-", 
            RowBox[{"e4", " ", 
             SuperscriptBox["e6", "2"]}]}], ")"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"\[Phi]", "(", 
           RowBox[{"3", ",", "1", ",", 
            FormBox["\<\"SU(3)\"\>",
             TraditionalForm]}], ")"}], "10"]}]}], ")"}]}]}], ")"}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.798398815293022*^9, 3.798398939828315*^9, {3.798399093340044*^9, 
   3.798399117909005*^9}, 3.798399332249357*^9, {3.7983993951142225`*^9, 
   3.798399398942331*^9}},
 CellLabel->
  "Out[157]=",ExpressionUUID->"0a892d83-0464-4020-8feb-7ff3d67fa110"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"expansionA2doulbled", "[", "wf", "]"}], "=", 
     RowBox[{"ExpandInJacobiForm", "[", 
      RowBox[{"A2", ",", 
       RowBox[{
        RowBox[{"\[Phi]", "[", 
         RowBox[{"wf", ",", "A2"}], "]"}], "/.", 
        RowBox[{
         RowBox[{"P", "[", "i_", "]"}], "\[RuleDelayed]", " ", 
         SuperscriptBox[
          RowBox[{"P", "[", "i", "]"}], "2"]}]}], ",", "4", ",", 
       RowBox[{"-", "wf"}], ",", "M"}], "]"}]}], ";"}], ",", 
   RowBox[{"{", 
    RowBox[{"wf", ",", 
     RowBox[{"w", "[", "A2", "]"}]}], "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[158]:=",ExpressionUUID->"27654821-c580-4862-845c-8a8ec3e5e658"],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox["\<\"So far, I have solved for 0 of 9 terms. I am checking the \
solution at order q ^0 just a sec ...\"\>", TraditionalForm]], "Print",
 CellChangeTimes->{{3.7983993956019163`*^9, 3.798399402974965*^9}},
 CellLabel->
  "During evaluation of \
In[158]:=",ExpressionUUID->"90d74040-f6d7-411c-82a6-8d44590c1c41"],

Cell[BoxData[
 FormBox["\<\"So far, I have solved for 8 of 9 terms. I am checking the \
solution at order q ^1 just a sec ...\"\>", TraditionalForm]], "Print",
 CellChangeTimes->{{3.7983993956019163`*^9, 3.798399403129552*^9}},
 CellLabel->
  "During evaluation of \
In[158]:=",ExpressionUUID->"7f36ce55-32e8-4089-af48-a1cb22d31329"],

Cell[BoxData[
 FormBox["\<\"So far, I have solved for 0 of 7 terms. I am checking the \
solution at order q ^0 just a sec ...\"\>", TraditionalForm]], "Print",
 CellChangeTimes->{{3.7983993956019163`*^9, 3.798399403368832*^9}},
 CellLabel->
  "During evaluation of \
In[158]:=",ExpressionUUID->"8e7eb8d4-71bb-43e6-ad7d-35985c0cf4a1"],

Cell[BoxData[
 FormBox["\<\"So far, I have solved for 0 of 5 terms. I am checking the \
solution at order q ^0 just a sec ...\"\>", TraditionalForm]], "Print",
 CellChangeTimes->{{3.7983993956019163`*^9, 3.79839940351894*^9}},
 CellLabel->
  "During evaluation of \
In[158]:=",ExpressionUUID->"a1a44cb8-e88d-4d9c-b2c2-17603afcc1a9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NumB3Clean", "-", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"NumA2", "/.", 
      RowBox[{
       RowBox[{"\[Phi]", "[", 
        RowBox[{"var_", ",", "no_", ",", "A2"}], "]"}], "\[RuleDelayed]", " ", 
       RowBox[{"expansionA2doulbled", "[", "var", "]"}]}]}], "//", "Expand"}],
     ")"}]}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.79839890289972*^9, 3.7983989044968014`*^9}, {
  3.798398944933359*^9, 3.798398955549307*^9}},
 CellLabel->
  "In[159]:=",ExpressionUUID->"29c0723c-b9e0-4f3c-aa87-c67d07ef95fb"],

Cell[BoxData[
 FormBox["0", TraditionalForm]], "Output",
 CellChangeTimes->{{3.7983989521888356`*^9, 3.7983989559741707`*^9}, {
   3.7983990954349017`*^9, 3.798399113127237*^9}, 3.798399332915663*^9, {
   3.7983993966656275`*^9, 3.7983994054962907`*^9}},
 CellLabel->
  "Out[159]=",ExpressionUUID->"16841b97-69f6-40fc-a81d-3a91c4fd9b3d"]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
WindowSize->{1282, 717},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (March 18, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"93f24271-4725-4a7e-bfa8-2575cdbe7fc3"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 233, 4, 96, "Title",ExpressionUUID->"dece58bd-77f1-4e0f-ac46-f5d302356980"],
Cell[CellGroupData[{
Cell[838, 30, 204, 4, 28, "Input",ExpressionUUID->"690987a8-f673-4b4a-9af7-e7564ec6470d"],
Cell[CellGroupData[{
Cell[1067, 38, 1464, 23, 23, "Print",ExpressionUUID->"854f3071-485c-468b-be14-f15c8482ee69"],
Cell[2534, 63, 1481, 23, 23, "Print",ExpressionUUID->"fa9b21e4-fb88-4e47-94d6-1a37e7ad0c98"]
}, Open  ]]
}, Open  ]],
Cell[4042, 90, 2554, 63, 48, "Input",ExpressionUUID->"c0e92f47-4df0-46ea-85d5-57c996ff382b"],
Cell[6599, 155, 1869, 28, 48, "Input",ExpressionUUID->"8785bf05-ea0b-41d9-82f1-18218d5ed290"],
Cell[CellGroupData[{
Cell[8493, 187, 158, 3, 67, "Chapter",ExpressionUUID->"6be179fb-f389-4c79-be4e-e7812e8abda9"],
Cell[8654, 192, 396, 8, 34, "Text",ExpressionUUID->"a1a81606-14e7-475b-851f-6b04ec49099f"],
Cell[9053, 202, 767, 19, 28, "Input",ExpressionUUID->"22da433e-c321-4bde-9503-d18a97f435ed"],
Cell[9823, 223, 513, 12, 48, "Input",ExpressionUUID->"d0d09854-a86c-4a2c-98fe-916768282020"],
Cell[10339, 237, 963, 25, 28, "Input",ExpressionUUID->"b3bd3237-6bfb-4304-b92b-fdbf5829fed4"],
Cell[11305, 264, 643, 15, 28, "Input",ExpressionUUID->"fca85ee0-2de0-483c-aee9-470f1bbd2b2e"],
Cell[11951, 281, 1234, 33, 48, "Input",ExpressionUUID->"4e0c0e6d-1811-45a6-a049-3bf18c79063e"],
Cell[13188, 316, 854, 19, 64, "Input",ExpressionUUID->"2c64bf87-21c0-4882-b608-4843b0aed486"],
Cell[14045, 337, 808, 22, 28, "Input",ExpressionUUID->"ddc24dc4-be46-4383-a80d-92c9459340cb"],
Cell[14856, 361, 427, 9, 28, "Input",ExpressionUUID->"726706fd-95eb-41ee-843d-41db00e40704"],
Cell[15286, 372, 766, 21, 28, "Input",ExpressionUUID->"51e33d29-1ae9-410c-b493-d5d79ae38618"],
Cell[16055, 395, 866, 21, 69, "Input",ExpressionUUID->"b30f6318-bcde-4142-b9c5-5c58f4dcff8e"],
Cell[16924, 418, 2560, 61, 88, "Input",ExpressionUUID->"8d6a60b6-ea34-404f-a98e-9465ee30a2e1"],
Cell[19487, 481, 2315, 52, 164, "Input",ExpressionUUID->"50415d08-caf0-4656-a17b-f219eb7c676e"],
Cell[21805, 535, 1803, 46, 164, "Input",ExpressionUUID->"60e4e1af-0855-489c-b636-09b94df666eb"],
Cell[23611, 583, 556, 12, 48, "Input",ExpressionUUID->"d3cc8c3d-ca2c-4000-8349-4128bcc555da"],
Cell[CellGroupData[{
Cell[24192, 599, 319, 6, 28, "Input",ExpressionUUID->"9e0c9192-0ed6-445e-9eaa-02369a857b96"],
Cell[24514, 607, 2009, 30, 70, "Output",ExpressionUUID->"1636e81e-720a-4d36-8d23-0eb3b5b079f1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26560, 642, 229, 4, 28, "Input",ExpressionUUID->"4f1b1bc4-5ddc-4396-88e1-990a99abee60"],
Cell[26792, 648, 1764, 38, 70, "Output",ExpressionUUID->"af7cc871-72b3-458a-afd0-84022a65b45b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28593, 691, 282, 5, 28, "Input",ExpressionUUID->"53da50c3-b085-4fb3-ab64-c6b3834f208f"],
Cell[28878, 698, 1944, 42, 70, "Output",ExpressionUUID->"18dd148b-569d-42fd-b870-58b6ea8e0c84"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30859, 745, 178, 3, 53, "Subsection",ExpressionUUID->"0c0d1cce-d51c-4152-a53c-1cfc9b4fa603"],
Cell[31040, 750, 685, 12, 28, "Input",ExpressionUUID->"b4481677-0dfd-4835-9c55-c37a3c2ee0af"],
Cell[31728, 764, 558, 13, 48, "Input",ExpressionUUID->"0fa5557c-44d6-4ed1-8294-8ed57f2a094d"],
Cell[CellGroupData[{
Cell[32311, 781, 1072, 22, 28, "Input",ExpressionUUID->"f4929b12-b780-4b08-ae0f-6af9b7388dbf"],
Cell[33386, 805, 2548, 46, 70, "Output",ExpressionUUID->"487deccb-f88f-4f7d-a984-5b8b810f19a0"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[35995, 858, 207, 4, 56, "Chapter",ExpressionUUID->"24429cc4-4cfe-4e8b-95d7-f70d8c8cae77"],
Cell[CellGroupData[{
Cell[36227, 866, 187, 3, 53, "Subsection",ExpressionUUID->"79eef911-1b32-4a1f-ab47-5a756d402bc7"],
Cell[36417, 871, 859, 23, 32, "Input",ExpressionUUID->"8e36643d-f8d9-4493-b0e5-e768bb5b282b"],
Cell[37279, 896, 1255, 38, 60, "Input",ExpressionUUID->"fde92841-4dd6-4c4d-b2e2-b34ab3e2ec40"],
Cell[38537, 936, 289, 6, 28, "Input",ExpressionUUID->"5cfa34e5-03a7-44e8-ba05-0d81152648fe"],
Cell[38829, 944, 1026, 30, 86, "Input",ExpressionUUID->"b926eeb3-50af-4487-b150-70b14b92d3d4"]
}, Closed]],
Cell[CellGroupData[{
Cell[39892, 979, 218, 4, 37, "Subsection",ExpressionUUID->"4f1709b0-15c8-4fc6-921e-e5a559b5dbd2"],
Cell[40113, 985, 1188, 32, 34, "Input",ExpressionUUID->"a454e09c-dd38-4eb2-a18c-7ad92bb3bc79"],
Cell[41304, 1019, 628, 14, 67, "Input",ExpressionUUID->"ed51ba7c-9b00-4d9f-ad5a-59cfbc619a96"]
}, Closed]],
Cell[CellGroupData[{
Cell[41969, 1038, 375, 6, 37, "Subsection",ExpressionUUID->"61d95b9b-55e1-4e03-a702-95460112ba30"],
Cell[42347, 1046, 219, 4, 28, "Input",ExpressionUUID->"ba857018-eebf-4178-87e1-a87a1a3424e9"],
Cell[42569, 1052, 396, 10, 50, "Input",ExpressionUUID->"323cd920-7008-4f3d-b02a-d88c7488a306"],
Cell[42968, 1064, 493, 12, 28, "Input",ExpressionUUID->"49d45a45-5f9d-4960-b307-a65ac2857edd"]
}, Closed]],
Cell[CellGroupData[{
Cell[43498, 1081, 257, 4, 37, "Subsection",ExpressionUUID->"ca32a9d6-98f0-4a02-a2a1-fb331d043430"],
Cell[43758, 1087, 300, 7, 28, "Input",ExpressionUUID->"b6aebc22-8eca-44eb-a5b9-6b18ef124427"],
Cell[CellGroupData[{
Cell[44083, 1098, 712, 19, 28, "Input",ExpressionUUID->"c5725bc3-4e90-41e2-804e-15e36c9507d9"],
Cell[44798, 1119, 3464, 77, 82, "Output",ExpressionUUID->"e2a287f8-85a7-45b5-93e6-54fe1b8a24c2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48299, 1201, 718, 21, 28, "Input",ExpressionUUID->"4af321b4-9eb4-4415-b5b6-6e38e61efccc"],
Cell[49020, 1224, 2781, 57, 65, "Output",ExpressionUUID->"b6c65166-8fe3-4da1-84a7-21de2c0538c6"]
}, Open  ]],
Cell[51816, 1284, 354, 9, 48, "Input",ExpressionUUID->"8af33d1c-8486-4b88-8a68-eaef5cd47b0a"],
Cell[52173, 1295, 832, 23, 45, "Input",ExpressionUUID->"d6d3f966-e759-4001-b36f-b86058a1076d"],
Cell[53008, 1320, 673, 18, 45, "Input",ExpressionUUID->"12cf8617-46be-48e0-aa7e-32313e82c744"],
Cell[53684, 1340, 208, 4, 28, "Input",ExpressionUUID->"44857a2a-89c8-4ea2-9238-fa16e9ea89a5"],
Cell[53895, 1346, 1272, 36, 52, "Input",ExpressionUUID->"ed75863f-f951-4362-bec2-a58d3c6e0f58"],
Cell[55170, 1384, 493, 13, 28, "Input",ExpressionUUID->"4a2d8ae5-d72e-4301-a54e-a09a997e2431"],
Cell[55666, 1399, 589, 18, 28, "Input",ExpressionUUID->"39466b89-02f0-4d27-bdb8-c62f9b841c75"],
Cell[CellGroupData[{
Cell[56280, 1421, 282, 6, 28, "Input",ExpressionUUID->"b86b57b5-655a-4cba-8aee-c789b36c5706"],
Cell[56565, 1429, 3645, 79, 57, "Output",ExpressionUUID->"0ce6b8c9-49fb-4f76-b5e7-5f512dc12cf7"]
}, Open  ]],
Cell[60225, 1511, 212, 4, 28, "Input",ExpressionUUID->"df468926-248f-43cd-ae9e-27ebb0fce3cd"],
Cell[60440, 1517, 946, 27, 28, "Input",ExpressionUUID->"c9ff23d0-9533-42b3-9ec6-dfec241e85ed"],
Cell[61389, 1546, 1075, 25, 32, "Input",ExpressionUUID->"26c6856b-4afc-43a9-a3c0-d81843b566bb"],
Cell[62467, 1573, 680, 18, 52, "Input",ExpressionUUID->"3c4951ce-64e1-452b-b666-6c3ac9258cbf"],
Cell[CellGroupData[{
Cell[63172, 1595, 1502, 40, 32, "Input",ExpressionUUID->"d6babc2f-c1b7-4d18-9994-fed10b037917"],
Cell[64677, 1637, 1707, 27, 32, "Output",ExpressionUUID->"76d2d98a-e098-46d6-9400-2888a9a8c9ab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66421, 1669, 1442, 39, 32, "Input",ExpressionUUID->"3f5c48f3-95a4-45c0-a77a-67b06afff074"],
Cell[67866, 1710, 1677, 26, 32, "Output",ExpressionUUID->"1199a541-c62f-49bb-b4d1-ee55ee122a8e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69580, 1741, 1493, 40, 32, "Input",ExpressionUUID->"8a1f9aec-1ad5-400e-bf62-c1e5e1b8de3e"],
Cell[71076, 1783, 799, 17, 32, "Output",ExpressionUUID->"deb15b69-d0d0-4eff-b339-06f89de8804c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[71924, 1806, 327, 5, 53, "Subsection",ExpressionUUID->"186090a5-da19-4127-ad4f-4cc85db29ee3"],
Cell[72254, 1813, 1484, 36, 45, "Input",ExpressionUUID->"3097121f-359f-40a1-af3d-0ba6b3afb5c3"],
Cell[73741, 1851, 1229, 37, 55, "Input",ExpressionUUID->"a9d7e334-6954-494c-80c7-47b5a7b9cb23"],
Cell[CellGroupData[{
Cell[74995, 1892, 155, 3, 44, "Subsubsection",ExpressionUUID->"a7df0650-8f3d-4b3e-8651-14df88883001"],
Cell[75153, 1897, 246, 6, 28, "Input",ExpressionUUID->"50766383-b06f-4777-ab4b-a5e2a94ca888"],
Cell[75402, 1905, 1161, 25, 28, "Input",ExpressionUUID->"60786792-a2b0-4151-8a7c-88dca870a892"],
Cell[76566, 1932, 798, 18, 28, "Input",ExpressionUUID->"c2e0f317-7c61-4506-b802-c65453b07ac9"],
Cell[77367, 1952, 1828, 45, 48, "Input",ExpressionUUID->"85b2ad65-ebcf-4905-805d-b939cd75232f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79232, 2002, 157, 3, 44, "Subsubsection",ExpressionUUID->"5c82343d-9569-40b9-a2cc-dc1eacb47695"],
Cell[79392, 2007, 296, 6, 28, "Input",ExpressionUUID->"8331dab0-7f6c-47ab-a50c-2b413a2842de"],
Cell[79691, 2015, 1139, 25, 28, "Input",ExpressionUUID->"2bd47906-f169-4038-ba38-e6354db6afd4"],
Cell[80833, 2042, 899, 19, 28, "Input",ExpressionUUID->"09a124f8-ab3c-4fc6-b1dc-4d1c18d97946"],
Cell[81735, 2063, 1008, 21, 28, "Input",ExpressionUUID->"49ac34c4-124d-4cee-960a-77feb2d55bd6"],
Cell[82746, 2086, 770, 20, 28, "Input",ExpressionUUID->"7b7c7047-bd54-4cb1-a107-2fb23e7bf824"],
Cell[83519, 2108, 979, 27, 28, "Input",ExpressionUUID->"111421dc-6e2d-4c9f-98ee-b83f7a0bcc9d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[84547, 2141, 219, 4, 53, "Subsection",ExpressionUUID->"3b770d73-4298-438c-9c91-da65cf5443d9"],
Cell[84769, 2147, 592, 16, 32, "Input",ExpressionUUID->"fd033746-4e7c-479f-b681-adbb9d6ccb7d"],
Cell[85364, 2165, 410, 10, 28, "Input",ExpressionUUID->"b4f0c7cc-31e5-4e53-a771-0dc4909a4e7c"],
Cell[85777, 2177, 412, 10, 28, "Input",ExpressionUUID->"713fddf3-877c-40a0-8ff1-0446b6ad4823"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[86238, 2193, 161, 3, 56, "Chapter",ExpressionUUID->"ac8438c8-6785-47b2-b247-82e804611e17"],
Cell[CellGroupData[{
Cell[86424, 2200, 153, 3, 53, "Subsection",ExpressionUUID->"7c9c4480-fb29-413d-befa-d51337e83cd9"],
Cell[86580, 2205, 268, 6, 28, "Input",ExpressionUUID->"5dfa60f1-7534-4604-82d4-e243e19b8e92"],
Cell[86851, 2213, 487, 12, 32, "Input",ExpressionUUID->"b3ca3cb3-c04b-4e4a-8e1e-0f9ad35a7b7b"],
Cell[87341, 2227, 597, 17, 128, "Input",ExpressionUUID->"e9b34301-9f1b-479c-ba5f-167062a9c3e3"],
Cell[CellGroupData[{
Cell[87963, 2248, 1110, 27, 45, "Input",ExpressionUUID->"86eb44c5-4696-43fd-8c73-79ae495d56d2"],
Cell[89076, 2277, 1735, 30, 70, "Output",ExpressionUUID->"09eedfb9-d7e6-48cc-8273-bdee14bdb649"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90848, 2312, 1305, 34, 45, "Input",ExpressionUUID->"52d18a60-c15c-4de8-a805-7f4060eef4ae"],
Cell[92156, 2348, 2754, 62, 70, "Output",ExpressionUUID->"cc803be4-cf3e-4a74-91cf-3de755cd8e60"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94947, 2415, 1174, 33, 45, "Input",ExpressionUUID->"559b9675-f66c-4f0a-ba7e-5da354820f06"],
Cell[96124, 2450, 2903, 71, 70, "Output",ExpressionUUID->"5f91444e-9afb-4676-b7b1-7881351e32df"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[99076, 2527, 225, 4, 53, "Subsection",ExpressionUUID->"7edcd012-27a2-4303-9174-bb660b51411b"],
Cell[CellGroupData[{
Cell[99326, 2535, 160, 3, 44, "Subsubsection",ExpressionUUID->"cbf3f9c9-8126-4801-ae79-0d743e72a8e1"],
Cell[99489, 2540, 1392, 39, 48, "Input",ExpressionUUID->"5121e753-2f6d-4194-8872-f99472d4f77a"],
Cell[100884, 2581, 768, 21, 48, "Input",ExpressionUUID->"e269937a-5a2f-4445-9dab-918718793e1d"],
Cell[101655, 2604, 679, 16, 28, "Input",ExpressionUUID->"f746da54-015b-4634-8690-5af162951038"],
Cell[102337, 2622, 206, 3, 28, "Input",ExpressionUUID->"86e6b759-9e2d-4df3-ab40-ed2c7a55fa80"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102580, 2630, 153, 3, 44, "Subsubsection",ExpressionUUID->"8ddf9884-f88a-458e-85ea-1ff959fb807a"],
Cell[102736, 2635, 3070, 70, 145, "Input",ExpressionUUID->"ef8ecdab-6e20-4e00-a0db-ba40a954df5a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105843, 2710, 155, 3, 44, "Subsubsection",ExpressionUUID->"b5bd95b8-937b-4788-9d43-53e1b560a703"],
Cell[106001, 2715, 3081, 74, 165, "Input",ExpressionUUID->"8560805d-4c14-4fa5-942b-f80e33bf0878"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109119, 2794, 155, 3, 44, "Subsubsection",ExpressionUUID->"99bdd021-ca61-4d91-a293-0919919d89bb"],
Cell[109277, 2799, 3043, 75, 222, "Input",ExpressionUUID->"8e1a2ecb-6873-48fd-84fb-914e5e0d8525"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112357, 2879, 162, 3, 44, "Subsubsection",ExpressionUUID->"5a4c5940-8a83-46dd-b0f2-6678b1f4bdd9"],
Cell[112522, 2884, 630, 18, 67, "Input",ExpressionUUID->"d34d6b43-b593-4090-b22c-0ba36e0c9ac0"],
Cell[CellGroupData[{
Cell[113177, 2906, 1121, 25, 28, "Input",ExpressionUUID->"4546c4d6-d385-40e1-9221-53fb20efac6a"],
Cell[114301, 2933, 2866, 57, 70, "Output",ExpressionUUID->"bc273129-4aa3-438a-868b-fd9e9be25eec"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[117240, 2998, 169, 3, 56, "Chapter",ExpressionUUID->"a6cd44c7-948a-4bdc-a4cd-483a97dea682"],
Cell[117412, 3003, 1899, 58, 200, "Input",ExpressionUUID->"67e7d5f7-b24b-4456-bde6-91d1068a79f0"],
Cell[119314, 3063, 179, 3, 28, "Input",ExpressionUUID->"8406b51a-91cc-4fc8-ae04-025d1622d1d7"],
Cell[119496, 3068, 1596, 46, 50, "Input",ExpressionUUID->"88fcb941-0f20-4179-8b24-79e2e53c4e11"],
Cell[121095, 3116, 1216, 29, 28, "Input",ExpressionUUID->"faf2fb83-b132-4d9d-b7ce-34c0d26290c8"],
Cell[122314, 3147, 694, 20, 28, "Input",ExpressionUUID->"b4b623e2-cde2-4f4c-ba62-4a674c6a282a"],
Cell[123011, 3169, 1954, 51, 126, "Input",ExpressionUUID->"862c5b8c-6c0b-4f98-b907-e5def8f2ef1b"],
Cell[CellGroupData[{
Cell[124990, 3224, 756, 16, 28, "Input",ExpressionUUID->"00f021ce-d984-4635-b1c5-60e9bdd72df6"],
Cell[125749, 3242, 554262, 10764, 125, "Output",ExpressionUUID->"d4bccd5b-91e5-4312-b887-7b68c54fc83d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[680048, 14011, 417, 11, 28, "Input",ExpressionUUID->"1c7aceb1-1655-4393-9c1d-b7e0a31e9e15"],
Cell[680468, 14024, 2102, 62, 51, "Output",ExpressionUUID->"c90e1a3d-53f4-4075-b0cf-643ccc7dea0c"]
}, Open  ]],
Cell[682585, 14089, 477, 13, 28, "Input",ExpressionUUID->"b30942d1-d58e-48ac-87f7-9ac5f36f169f"]
}, Closed]],
Cell[CellGroupData[{
Cell[683099, 14107, 223, 4, 56, "Chapter",ExpressionUUID->"b4eb5f1b-6d4a-40f5-96b9-da63868b3484"],
Cell[683325, 14113, 1320, 33, 48, "Input",ExpressionUUID->"5c55287e-3112-418a-98d8-8c0481ff710d"],
Cell[CellGroupData[{
Cell[684670, 14150, 424, 8, 28, "Input",ExpressionUUID->"a7bba829-a141-4faa-85ec-21f578c654b5"],
Cell[685097, 14160, 28076, 755, 385, "Output",ExpressionUUID->"107bd46c-a334-4059-9153-91797aa4cc76"]
}, Open  ]],
Cell[CellGroupData[{
Cell[713210, 14920, 241, 5, 28, "Input",ExpressionUUID->"eb9c5594-79e7-4e8b-8796-b238625d8756"],
Cell[713454, 14927, 330, 6, 32, "Output",ExpressionUUID->"683b58cb-4418-4345-97d1-19a55e3dc38d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[713821, 14938, 1685, 48, 48, "Input",ExpressionUUID->"15b70a5b-0e02-46a1-bc4d-08f5a9e0955d"],
Cell[715509, 14988, 1829, 50, 51, "Output",ExpressionUUID->"e9a38344-587f-402d-8ce5-2cc13af1dc8a"]
}, Open  ]],
Cell[717353, 15041, 8414, 217, 429, "Input",ExpressionUUID->"6888911b-bfdb-4176-8b7c-3b18207040e5"],
Cell[725770, 15260, 458, 13, 28, "Input",ExpressionUUID->"6370c6e7-c688-49ea-b8f9-a4caccb84d9c"],
Cell[CellGroupData[{
Cell[726253, 15277, 395, 10, 28, "Input",ExpressionUUID->"f0003d0d-5c6e-40da-ab6c-e989abd4169a"],
Cell[CellGroupData[{
Cell[726673, 15291, 380, 7, 23, "Print",ExpressionUUID->"4b9a891f-28c7-4e5c-8ae0-c5feae90e80a"],
Cell[727056, 15300, 381, 7, 23, "Print",ExpressionUUID->"66cffc5e-6602-4d85-9920-c52fc880416f"]
}, Open  ]],
Cell[727452, 15310, 317, 7, 32, "Output",ExpressionUUID->"1a354b9d-05c7-451e-b5c1-560a8af5487d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[727806, 15322, 144, 2, 28, "Input",ExpressionUUID->"dc30d14b-7a4f-4ead-b9f2-356968532102"],
Cell[CellGroupData[{
Cell[727975, 15328, 308, 6, 23, "Print",ExpressionUUID->"eb8dd6f4-b52e-4b08-b4ff-354be6870edf"],
Cell[728286, 15336, 311, 6, 23, "Print",ExpressionUUID->"7498bdec-9eb9-43f4-b4ce-8c2fb498c72c"]
}, Open  ]],
Cell[728612, 15345, 243, 6, 32, "Output",ExpressionUUID->"63f0c57a-ed51-455f-ac89-525341f34d2d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[728892, 15356, 620, 15, 48, "Input",ExpressionUUID->"129f8071-4add-40b3-8725-3103dd54c250"],
Cell[729515, 15373, 26247, 723, 385, "Output",ExpressionUUID->"0a892d83-0464-4020-8feb-7ff3d67fa110"]
}, Open  ]],
Cell[CellGroupData[{
Cell[755799, 16101, 717, 20, 32, "Input",ExpressionUUID->"27654821-c580-4862-845c-8a8ec3e5e658"],
Cell[CellGroupData[{
Cell[756541, 16125, 333, 6, 23, "Print",ExpressionUUID->"90d74040-f6d7-411c-82a6-8d44590c1c41"],
Cell[756877, 16133, 333, 6, 23, "Print",ExpressionUUID->"7f36ce55-32e8-4089-af48-a1cb22d31329"],
Cell[757213, 16141, 333, 6, 23, "Print",ExpressionUUID->"8e7eb8d4-71bb-43e6-ad7d-35985c0cf4a1"],
Cell[757549, 16149, 332, 6, 23, "Print",ExpressionUUID->"a1a44cb8-e88d-4d9c-b2c2-17603afcc1a9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[757930, 16161, 560, 14, 28, "Input",ExpressionUUID->"29c0723c-b9e0-4f3c-aa87-c67d07ef95fb"],
Cell[758493, 16177, 337, 6, 32, "Output",ExpressionUUID->"16841b97-69f6-40fc-a81d-3a91c4fd9b3d"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

